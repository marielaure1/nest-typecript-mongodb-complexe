import { Module<% if (authMiddleware) { %>, MiddlewareConsumer<% } %> } from "@nestjs/common";<% if (authMiddleware) { %>
import { AuthMiddleware } from "@middlewares/auth.middleware";<% } %>
import { <%= pascalCase %>sController } from '@modules/<%= kebabCase %>s/<%= kebabCase %>s.controller';<% if (moduleService) { %>
import { <%= pascalCase %>sService } from '@modules/<%= kebabCase %>s/<%= kebabCase %>s.service';<% } %>

@Module({
  imports: [],
  controllers: [<%= pascalCase %>sController],
  providers: [<% if (moduleService) { %><%= pascalCase %>sService<% } %>],
  exports: [<%= pascalCase %>sModule],
})
export class <%= pascalCase %>sModule {<% if (authMiddleware) { %>
  configure(consumer: MiddlewareConsumer) {
		consumer.apply(AuthMiddleware).forRoutes(<%= pascalCase %>sController);
	}
<% } %>}
