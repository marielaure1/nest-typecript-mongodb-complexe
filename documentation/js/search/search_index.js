var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.674,1,2.179]],["body/controllers/AppController.html",[0,1.049,1,1.366,2,0.585,3,0.028,4,0.028,5,0.028,6,1.476,7,0.151,8,0.533,9,1.851,10,1.452,11,1.409,12,1.668,13,1.668,14,1.554,15,0.677,16,2.02,17,4.01,18,3.511,19,3.949,20,3.616,21,3.883,22,1.065,23,1.374,24,0.008,25,2.185,26,0.503,27,1.665,28,1.03,29,0.719,30,0.391,31,0.543,32,1.03,33,2.02,34,0.878,35,1.665,36,0.628,37,0.943,38,1.665,39,1.63,40,0.628,41,0.943,42,1.665,43,0.585,44,2.295,45,0.943,46,1.665,47,0.164,48,2.024,49,1.748,50,2.82,51,0.878,52,1.068,53,0.252,54,1.969,55,0.798,56,0.451,57,1.326,58,0.878,59,0.753,60,1.021,61,1.257,62,1.121,63,1.351,64,1.068,65,1.121,66,1.121,67,2.522,68,0.878,69,2.85,70,0.572,71,0.031,72,1.476,73,0.088,74,0.823,75,1.485,76,0.512,77,1.054,78,1.665,79,0.775,80,1.665,81,2.056,82,5.221,83,4.038,84,4.971,85,3.089,86,4.971,87,4.971,88,2.456,89,5.815,90,1.665,91,4.802,92,2.259,93,4.092,94,4.092,95,4.395,96,3.647,97,1.665,98,2.958,99,2.602,100,8.345,101,3.189,102,3.323,103,2.814,104,2.313,105,4.405,106,5.146,107,4.405,108,4.971,109,2.386,110,5.276,111,4.054,112,1.351,113,3.56,114,3.735,115,2.456,116,3.836,117,4.971,118,3.753,119,4.971,120,5.172,121,1.665,122,3.753,123,4.971,124,4.405,125,4.971,126,4.971,127,1.476,128,1.665,129,1.665,130,1.121,131,2.311,132,3.31,133,3.03,134,1.283,135,3.587,136,1.351,137,3.03,138,2.85,139,1.351,140,1.665,141,1.351,142,1.665,143,1.665,144,0.002,145,0.002]],["title/modules/AppModule.html",[146,1.231,147,3.433]],["body/modules/AppModule.html",[1,1.778,2,1.304,3,0.061,4,0.061,5,0.061,24,0.008,47,0.237,53,0.561,57,1.726,70,1.274,71,0.068,73,0.196,134,1.274,144,0.005,145,0.005,146,1.72,147,7.018,148,2.136,149,1.507,150,1.588,151,1.588,152,1.507,153,2.308,154,2.649,155,3.287,156,3.287,157,3.287,158,5.49,159,5.49,160,5.49,161,5.202,162,5.202,163,5.665,164,5.49,165,4.955,166,2.308,167,1.366,168,1.588,169,3.71,170,2.308,171,3.287,172,3.457,173,2.025,174,3.71,175,3.71,176,3.287,177,3.287,178,2.801,179,3.287,180,3.287,181,3.71,182,1.726,183,1.833,184,3.71,185,4.778,186,3.009,187,3.287,188,3.287,189,4.778,190,3.287,191,5.392,192,3.71,193,5.392,194,3.71,195,3.83,196,3.71,197,3.83,198,3.71,199,3.287,200,3.71,201,3.71,202,3.71,203,3.71,204,5.392,205,2.801,206,4.071,207,3.71,208,3.009,209,3.71,210,3.71,211,3.71,212,3.71,213,3.71,214,3.287,215,3.71]],["title/injectables/AppService.html",[57,2.116,216,0.833]],["body/injectables/AppService.html",[3,0.053,4,0.053,5,0.053,7,0.292,8,0.906,9,2.263,10,1.917,11,2.452,12,1.828,13,1.828,14,2.051,15,1.969,16,2.641,22,1.073,24,0.008,26,0.811,28,1.624,29,1.134,30,0.642,31,0.856,32,1.624,36,1.828,39,1.756,40,1.828,43,1.703,44,3.372,47,0.125,53,0.486,55,1.54,56,0.87,57,2.255,71,0.059,72,2.847,73,0.17,74,3.212,75,1.628,76,1.49,77,0.907,81,1.516,85,2.835,88,2.884,103,3.304,104,2.255,109,2.445,115,2.884,116,3.732,134,1.103,144,0.004,145,0.004,216,0.888,217,1.156,218,2.847,219,3.077,220,2.556,221,3.077,222,3.213,223,3.884,224,5.837,225,4.734,226,3.213,227,3.678,228,3.213,229,4.187,230,3.213,231,3.213,232,1.694,233,2.255,234,3.213,235,2.556,236,3.213,237,3.213,238,3.213,239,2.556,240,2.233,241,3.213,242,3.213,243,3.213,244,3.213,245,3.213,246,5.837,247,3.213,248,5.837,249,3.213,250,5.837,251,5.172,252,3.213,253,3.213,254,3.213,255,3.213,256,3.213,257,4.847,258,4.295,259,4.847,260,1.694,261,3.213,262,3.213,263,3.213,264,3.213,265,3.213,266,3.213]],["title/guards/AuthGuard.html",[267,3.687,268,3.433]],["body/guards/AuthGuard.html",[3,0.059,4,0.059,5,0.059,7,0.323,8,0.978,9,1.545,20,1.704,24,0.008,26,0.529,28,0.737,29,0.515,30,0.279,31,0.388,32,0.737,47,0.208,53,0.538,71,0.065,73,0.188,75,2.295,76,1.906,77,2.056,81,2.097,85,2.021,88,1.757,92,2.18,101,2.093,103,2.96,104,2.433,109,1.991,115,1.757,116,1.655,134,1.796,144,0.004,145,0.004,205,2.685,216,0.957,229,2.506,268,3.947,269,3.556,270,3.151,271,6.835,272,3.556,273,5.228,274,6.835,275,3.556,276,3.151,277,3.556,278,5.493,279,6.2,280,3.556,281,3.51,282,2.393,283,5.028,284,2.884,285,2.28,286,2.526,287,2.526,288,2.884,289,3.556,290,2.884,291,3.556,292,2.884,293,3.556,294,3.556,295,3.556,296,4.633,297,3.556,298,3.556,299,3.947,300,3.556,301,5.228,302,5.543,303,3.556,304,3.556,305,3.556,306,3.556,307,3.556,308,3.556,309,2.685,310,3.556,311,3.556,312,1.814,313,3.556,314,5.228,315,1.704,316,3.556,317,8.075,318,7.871,319,7.615,320,7.282,321,6.835,322,6.2,323,5.228,324,3.556,325,3.556,326,3.556,327,3.556]],["title/injectables/AuthMiddleware.html",[216,0.833,328,2.319]],["body/injectables/AuthMiddleware.html",[3,0.058,4,0.058,5,0.058,7,0.32,8,0.97,9,1.536,17,3.165,18,3.165,19,1.739,20,3.259,24,0.008,26,0.525,28,1.075,29,0.751,30,0.408,31,0.567,32,0.73,33,1.43,47,0.218,52,2.257,53,0.532,59,1.592,60,2.158,61,2.658,71,0.065,73,0.186,75,2.435,76,1.595,77,2.047,81,1.97,82,2.158,83,1.795,85,2.628,88,1.739,92,2.569,93,2.658,95,4.998,98,3.958,103,1.993,104,1.638,109,2.437,110,2.5,111,1.921,113,1.687,115,1.739,130,4.148,135,2.855,144,0.004,145,0.004,205,2.658,216,0.95,217,1.266,276,4.598,278,3.119,281,4.295,282,2.369,283,4.998,284,2.855,285,2.257,286,2.5,287,2.5,292,2.855,312,4.193,328,3.143,329,3.119,330,5.189,331,3.52,332,4.811,333,5.03,334,5.03,335,3.52,336,5.189,337,6.801,338,6.801,339,3.52,340,5.189,341,3.52,342,2.855,343,2.369,344,2.5,345,2.855,346,2.658,347,5.189,348,3.52,349,3.52,350,3.52,351,6.026,352,3.52,353,3.52,354,2.369,355,3.52,356,7.251,357,3.52,358,5.189,359,3.52,360,4.598,361,3.52,362,3.52,363,4.598,364,3.52,365,3.52,366,2.257,367,3.52,368,3.52,369,3.364,370,6.163,371,3.52,372,3.52,373,3.119,374,3.52]],["title/modules/AuthModule.html",[146,1.231,158,3.229]],["body/modules/AuthModule.html",[2,2.365,3,0.084,4,0.084,5,0.084,24,0.008,47,0.227,53,0.772,71,0.094,73,0.27,144,0.006,145,0.006,146,2.038,148,2.023,149,2.075,150,2.186,151,2.186,152,2.075,153,3.223,154,2.129,158,6.623,161,5.748,166,2.881,167,1.881,168,2.186,170,2.881,180,4.525,281,4.835,282,3.437,332,5.237,346,3.856,375,4.525,376,5.107,377,4.525,378,5.025,379,4.662,380,4.356,381,5.107,382,6.671,383,5.107,384,4.525,385,3.132,386,3.628]],["title/interfaces/BaseProps.html",[387,1.847,388,2.788]],["body/interfaces/BaseProps.html",[3,0.056,4,0.056,5,0.056,7,0.31,8,0.638,9,1.67,22,1.14,24,0.008,30,0.527,31,0.819,47,0.156,51,2.675,53,0.516,71,0.063,73,0.18,75,1.704,77,0.964,81,1.74,83,3.828,85,2.59,109,2.152,113,3.825,144,0.004,145,0.004,167,1.868,182,1.589,183,1.687,216,0.929,240,2.079,312,3.418,379,1.864,380,3.088,385,2.094,387,3.313,388,4.602,389,2.872,390,2.189,391,1.165,392,5.001,393,5.228,394,2.298,395,1.933,396,3.415,397,2.637,398,3.415,399,4.51,400,2.361,401,2.232,402,3.111,403,3.415,404,2.869,405,2.298,406,3.111,407,5.117,408,4.51,409,4.109,410,4.51,411,4.51,412,3.415,413,3.415,414,3.943,415,2.361,416,2.298,417,4.51,418,3.415,419,2.298,420,3.111,421,3.415,422,2.298,423,3.415,424,2.298,425,2.298,426,3.111,427,3.658,428,2.298,429,3.415,430,2.298,431,3.111,432,3.415,433,2.298,434,2.298,435,1.636,436,2.298,437,3.415]],["title/classes/BookerEmployee.html",[73,0.24,438,3.229]],["body/classes/BookerEmployee.html",[3,0.083,4,0.083,5,0.083,7,0.458,22,1.1,23,2.068,24,0.008,26,0.838,30,0.669,31,0.87,47,0.172,55,3.2,56,1.366,70,1.733,71,0.137,73,0.266,79,3.107,81,1.31,134,3.064,144,0.006,145,0.006,369,4.084,391,1.533,415,3.482,438,5.315,439,0.924,440,5.008,441,5.728,442,3.809,443,3.817,444,4.236,445,3.945,446,3.935,447,5.045,448,4.403,449,5.045,450,5.045,451,5.045,452,4.493,453,5.045,454,4.199,455,2.66,456,3.809,457,2.66,458,3.817,459,4.092,460,4.47]],["title/controllers/BookerEmployeesController.html",[0,1.674,461,3.433]],["body/controllers/BookerEmployeesController.html",[0,1.364,1,3.821,2,1.301,3,0.061,4,0.061,5,0.061,7,0.336,8,1.007,9,2.108,10,1.768,11,2.031,12,2.031,13,2.031,14,1.893,15,1.505,16,2.578,17,3.875,18,3.988,19,4.18,20,4.054,21,3.825,22,1.155,23,2.046,24,0.008,25,1.83,26,0.749,28,1.534,29,1.071,30,0.582,31,0.808,32,1.534,33,3.008,34,1.952,36,1.397,37,2.096,39,1.909,40,1.397,41,2.096,43,1.301,44,2.76,45,2.096,47,0.218,53,0.56,54,3.674,56,1.002,59,1.675,67,3.242,68,1.952,71,0.068,73,0.196,75,1.243,76,1.138,77,1.045,144,0.005,145,0.005,334,4.069,343,4.689,344,3.825,345,3.004,435,1.315,440,2.179,441,2.492,456,2.796,461,4.066,462,3.281,463,2.021,464,4.271,465,5.623,466,2.933,467,2.271,468,2.179,469,2.179,470,2.179,471,2.179,472,2.374,473,2.492,474,3.453,475,2.63,476,2.796,477,3.281,478,2.021,479,2.021,480,2.021,481,2.021,482,2.021,483,1.002,484,3.703,485,3.703,486,3.703,487,3.703]],["title/modules/BookerEmployeesModule.html",[146,1.231,488,3.433]],["body/modules/BookerEmployeesModule.html",[2,2.449,3,0.089,4,0.089,5,0.089,8,1.007,24,0.008,26,0.545,28,1.117,29,0.78,30,0.423,31,0.588,32,1.117,47,0.21,53,0.815,71,0.099,73,0.284,144,0.006,145,0.006,146,2.091,148,2.134,149,2.189,150,2.306,151,2.306,152,2.189,153,3.307,154,3.221,166,2.984,167,1.984,168,2.306,170,2.306,173,4.459,328,2.748,334,5.556,343,4.691,344,5.802,345,4.37,440,4.101,461,5.833,488,7.002,489,4.774,490,4.774,491,4.774,492,5.388,493,3.17,494,3.946,495,5.388,496,3.17,497,3.05,498,3.05,499,5.388,500,5.388]],["title/injectables/BookerEmployeesService.html",[216,0.833,334,2.915]],["body/injectables/BookerEmployeesService.html",[3,0.065,4,0.065,5,0.065,7,0.355,8,1.047,9,2.245,10,1.838,11,2.467,12,2.111,13,2.111,14,1.967,15,1.587,16,2.658,22,1.017,24,0.008,26,0.853,28,1.717,29,1.199,30,0.673,31,0.905,32,1.717,36,1.474,39,1.968,40,1.474,43,1.373,44,3.283,47,0.209,53,0.591,56,1.058,57,4.032,58,2.06,70,1.342,71,0.072,73,0.206,74,2.766,76,1.721,77,1.103,144,0.005,145,0.005,216,1.025,217,1.405,219,2.951,220,2.951,221,2.951,223,3.856,227,2.951,229,3.972,232,2.06,233,2.605,235,2.06,239,2.06,240,1.923,334,3.589,343,4.402,344,3.976,435,1.366,438,2.775,440,3.294,441,2.629,456,2.95,464,3.767,466,3.283,472,2.505,473,2.629,474,3.589,475,2.775,476,2.95,477,3.462,501,3.462,502,3.907,503,3.907,504,5.597,505,2.132,506,2.132,507,2.132,508,2.132,509,2.132,510,2.132,511,2.132,512,2.132,513,2.06,514,3.907,515,3.907]],["title/classes/Client.html",[73,0.24,401,2]],["body/classes/Client.html",[3,0.066,4,0.066,5,0.066,7,0.361,22,1.167,23,2.375,24,0.008,26,0.888,30,0.696,31,0.974,47,0.146,55,2.716,56,1.076,70,1.365,71,0.121,73,0.21,79,2.637,81,1.032,134,2.91,144,0.005,145,0.005,225,3.224,315,3.45,369,3.604,391,1.301,401,2.904,415,3.073,439,0.728,443,3.368,444,3.738,445,3.482,446,3.557,448,3.886,452,3.814,454,4.734,455,2.096,457,2.096,458,3.368,516,3.001,517,4.444,518,4.444,519,4.444,520,4.444,521,4.986,522,4.69,523,4.444,524,5.839,525,4.415,526,3.975,527,3.975,528,3.975,529,3.975,530,3.975,531,3.975,532,3.975,533,3.975,534,3.975,535,3.975,536,3.975,537,3.975,538,2.675,539,3.795,540,5.839,541,3.522,542,3.001,543,3.522]],["title/controllers/ClientsController.html",[0,1.674,544,3.433]],["body/controllers/ClientsController.html",[0,0.753,1,3.058,2,0.719,3,0.034,4,0.034,5,0.034,7,0.186,8,0.634,9,1.984,10,1.836,11,1.278,12,1.636,13,1.636,14,1.965,17,4.022,18,3.748,19,4.29,20,3.9,21,3.89,22,1.1,23,1.545,24,0.008,25,1.674,26,0.565,28,1.159,29,0.809,30,0.439,31,0.611,32,1.159,33,2.272,34,1.078,36,0.772,39,2.084,40,0.772,43,0.719,47,0.184,48,1.453,49,2.66,50,3.275,51,1.078,52,1.311,53,0.309,54,2.66,56,0.554,59,0.925,67,2.347,68,1.078,71,0.038,73,0.108,75,0.687,76,0.629,77,0.577,81,1.127,82,3.429,83,2.573,85,0.791,88,1.011,89,3.971,92,0.853,93,1.544,99,1.204,103,1.158,104,2.019,105,1.813,106,4.818,109,2.449,110,3.081,111,2.368,112,1.659,113,2.079,115,1.011,116,1.577,118,1.544,120,3.518,122,1.544,127,1.813,130,1.377,132,5.34,135,4.888,136,1.659,137,3.518,139,1.659,141,1.659,144,0.003,145,0.003,299,1.544,332,2.66,346,1.544,373,1.813,397,2.954,401,3.671,435,0.827,463,1.117,466,2.215,478,1.117,479,1.117,480,3.483,481,4.162,482,3.289,483,0.554,525,4.377,538,1.377,544,2.559,545,1.813,546,7.483,547,2.046,548,3.864,549,4.535,550,2.046,551,4.056,552,1.659,553,2.748,554,1.659,555,2.046,556,2.046,557,2.046,558,2.046,559,1.813,560,3.844,561,2.046,562,2.046,563,1.813,564,1.813,565,2.046,566,2.046,567,4.742,568,1.813,569,2.046,570,2.046,571,1.544,572,2.407,573,1.813,574,1.453,575,2.046,576,2.046,577,2.046,578,4.888,579,5.036,580,1.813,581,2.046,582,1.813,583,1.813,584,1.453,585,2.046,586,1.813,587,1.544,588,1.813,589,3.518,590,2.046,591,2.046,592,2.046,593,2.046,594,2.046,595,2.046,596,2.046,597,2.046]],["title/modules/ClientsModule.html",[146,1.231,159,3.229]],["body/modules/ClientsModule.html",[2,2.373,3,0.085,4,0.085,5,0.085,24,0.008,47,0.233,53,0.776,71,0.094,73,0.271,144,0.006,145,0.006,146,2.043,148,2.033,149,2.085,150,2.197,151,2.197,152,2.085,153,3.231,154,3.146,159,6.544,165,3.291,166,2.891,167,1.89,168,2.197,170,2.197,173,3.686,185,4.548,186,5.477,187,5.983,188,4.548,189,4.548,190,4.548,199,4.548,281,2.906,282,3.454,283,4.163,284,4.163,328,2.618,332,5.244,346,3.875,494,2.906,498,2.906,544,5.698,598,4.548,599,4.548,600,5.133,601,5.133,602,5.133,603,5.133,604,5.133,605,5.133]],["title/injectables/ClientsService.html",[216,0.833,332,2.788]],["body/injectables/ClientsService.html",[3,0.065,4,0.065,5,0.065,7,0.358,8,1.054,9,2.248,10,1.85,11,2.48,12,2.126,13,2.126,14,1.981,15,1.603,16,2.672,22,1.02,24,0.008,26,0.855,28,1.722,29,1.202,30,0.674,31,0.907,32,1.722,36,1.488,39,1.978,40,1.488,43,1.386,44,3.291,47,0.209,53,0.596,56,1.068,57,4.04,58,2.079,70,1.355,71,0.072,73,0.208,74,2.785,76,1.733,77,1.113,144,0.005,145,0.005,216,1.032,217,1.419,219,2.971,220,2.971,221,2.971,223,3.87,227,2.971,229,3.982,232,2.079,233,2.622,235,2.079,239,2.079,240,1.936,332,3.456,401,1.735,435,1.376,466,3.291,505,2.153,506,2.153,507,2.153,508,2.153,509,2.153,510,2.153,511,2.153,512,2.153,513,2.079,538,2.655,548,2.529,567,2.801,571,2.978,572,4.003,573,3.495,574,2.801,606,3.495,607,3.944,608,3.944,609,5.635,610,3.944,611,3.944,612,3.495,613,3.495,614,3.944,615,3.944]],["title/interfaces/ConfirmAccountClientProps.html",[387,1.847,406,2.788]],["body/interfaces/ConfirmAccountClientProps.html",[3,0.058,4,0.058,5,0.058,7,0.32,8,0.658,9,1.695,22,1.08,24,0.008,30,0.484,31,0.567,47,0.159,51,2.736,53,0.532,71,0.065,73,0.186,75,1.742,77,0.994,81,1.766,83,3.87,85,2.628,109,2.184,113,3.475,144,0.004,145,0.004,167,1.911,182,1.638,183,1.739,216,0.95,233,2.414,240,1.209,312,3.469,379,1.921,380,3.143,385,2.158,387,3.34,388,4.652,389,2.937,390,2.257,391,1.191,392,4.652,393,5.26,394,2.369,395,1.993,396,3.492,397,2.666,398,3.492,399,4.577,400,2.414,401,2.282,402,3.182,403,3.492,404,2.911,405,2.369,406,3.779,407,5.162,408,4.577,409,4.171,410,4.577,411,4.577,412,3.492,413,3.492,414,4.002,415,2.414,416,2.369,417,4.577,418,3.492,419,2.369,420,3.182,421,3.492,422,2.369,423,3.492,424,2.369,425,2.369,426,3.182,427,3.712,428,2.369,429,3.492,430,2.369,431,3.182,432,3.492,433,2.369,434,2.369,435,1.77,436,2.369,437,3.492]],["title/interfaces/ConfirmAccountOrganizationProps.html",[387,1.847,420,2.788]],["body/interfaces/ConfirmAccountOrganizationProps.html",[3,0.058,4,0.058,5,0.058,7,0.32,8,0.658,9,1.695,22,1.08,24,0.008,30,0.484,31,0.567,47,0.159,51,2.736,53,0.532,71,0.065,73,0.186,75,1.742,77,0.994,81,1.766,83,3.87,85,2.628,109,2.184,113,3.475,144,0.004,145,0.004,167,1.911,182,1.638,183,1.739,216,0.95,233,2.414,240,1.209,312,3.469,379,1.921,380,3.143,385,2.158,387,3.34,388,4.652,389,2.937,390,2.257,391,1.191,392,4.652,393,5.26,394,2.369,395,1.993,396,3.492,397,2.666,398,3.492,399,4.577,400,2.414,401,2.282,402,3.182,403,3.492,404,2.911,405,2.369,406,3.182,407,5.162,408,4.577,409,4.171,410,4.577,411,4.577,412,3.492,413,3.492,414,4.002,415,2.414,416,2.369,417,4.577,418,3.492,419,2.369,420,3.779,421,3.492,422,2.369,423,3.492,424,2.369,425,2.369,426,3.182,427,3.712,428,2.369,429,3.492,430,2.369,431,3.182,432,3.492,433,2.369,434,2.369,435,1.77,436,2.369,437,3.492]],["title/classes/CreateAuthClientDto.html",[73,0.24,616,3.433]],["body/classes/CreateAuthClientDto.html",[3,0.105,4,0.105,5,0.105,24,0.008,47,0.223,55,3.997,56,1.724,71,0.117,73,0.336,144,0.007,145,0.007,366,4.084,435,1.89,439,1.167,483,1.724,548,5.347,571,4.81,572,4.525,616,5.845,617,5.167,618,4.525,619,8.341,620,5.115,621,4.525,622,4.525]],["title/classes/CreateAuthOrganizationDto.html",[73,0.24,623,3.687]],["body/classes/CreateAuthOrganizationDto.html",[3,0.092,4,0.092,5,0.092,7,0.505,23,2.168,24,0.008,26,0.793,30,0.698,47,0.213,71,0.102,73,0.376,92,3.27,144,0.006,145,0.006,343,3.744,366,5.3,391,1.633,438,5.571,439,1.019,464,3.744,472,5.3,473,3.744,474,3.566,617,6.705,620,5.07,621,3.951,622,3.951,623,5.77,624,4.2,625,5.029,626,7.843,627,5.562,628,5.3,629,5.562,630,4.928,631,4.2,632,4.2,633,3.744]],["title/classes/CreateBookerEmployeeDto.html",[73,0.24,472,2.915]],["body/classes/CreateBookerEmployeeDto.html",[3,0.085,4,0.085,5,0.085,7,0.466,22,1.105,23,2.086,24,0.008,26,0.763,29,1.16,30,0.593,39,2.032,47,0.174,71,0.094,73,0.357,92,2.815,144,0.006,145,0.006,369,4.119,391,1.55,397,2.652,415,3.512,439,0.94,440,4.718,444,4.272,452,4.545,464,5.396,472,4.329,473,5.396,483,1.389,634,3.646,635,4.272,636,4.329,637,5.756,638,5.244,639,4.548,640,4.548,641,4.545,642,4.548,643,4.548,644,4.548,645,4.548,646,3.526,647,4.09,648,3.646,649,2.536,650,2.14,651,4.09,652,3.291,653,4.548,654,4.163,655,4.163]],["title/classes/CreateClientDto.html",[73,0.24,548,2.915]],["body/classes/CreateClientDto.html",[3,0.057,4,0.057,5,0.057,7,0.311,22,1.148,23,2.296,24,0.008,26,0.84,29,0.971,30,0.677,31,0.932,39,1.031,47,0.173,71,0.063,73,0.32,111,2.776,134,1.177,144,0.004,145,0.004,315,3.217,369,3.311,391,1.168,397,2.961,400,2.367,401,3.752,415,2.823,439,0.627,444,3.434,483,0.927,517,4.826,518,4.826,519,4.826,520,4.826,521,4.58,522,4.309,523,4.083,541,3.036,548,3.261,589,4.125,618,2.434,633,2.306,635,4.621,636,3.261,641,3.423,646,3.304,647,4.236,648,4.309,649,3.948,650,1.428,651,4.298,652,2.197,656,7.467,657,7.171,658,3.426,659,3.426,660,3.426,661,3.426,662,5.086,663,3.426,664,3.426,665,6.712,666,5.086,667,3.426,668,4.125,669,3.426,670,4.125,671,3.426,672,3.426,673,3.426,674,5.068,675,3.426,676,4.125,677,3.426,678,4.507,679,3.426,680,3.426,681,3.426,682,2.434,683,2.587,684,2.779]],["title/classes/CreateEmployeeDto.html",[73,0.24,685,3.06]],["body/classes/CreateEmployeeDto.html",[3,0.075,4,0.075,5,0.075,7,0.41,22,1.065,23,2.205,24,0.008,26,0.807,29,1.101,30,0.627,31,0.831,39,1.864,47,0.159,71,0.083,73,0.327,92,2.583,134,1.551,144,0.005,145,0.005,315,3.648,369,3.86,391,1.422,397,2.803,400,2.883,415,3.291,439,0.827,444,4.003,452,4.169,483,1.222,521,5.339,522,5.023,634,3.206,635,4.515,636,3.972,637,5.937,638,5.409,639,4,640,4,641,4.169,642,4,643,4,644,4,645,4,646,3.347,647,3.882,648,5.023,649,3.495,650,1.882,651,4.202,653,4,654,3.661,655,3.661,668,5.024,678,6.744,685,4.169,686,7.3,687,6.173,688,4.514,689,4.514,690,4.514,691,4.514,692,2.768]],["title/classes/CreateEstablishmentDto.html",[73,0.24,693,3.06]],["body/classes/CreateEstablishmentDto.html",[3,0.053,4,0.053,5,0.053,7,0.29,22,1.164,23,2.292,24,0.008,26,0.839,29,1.007,30,0.651,31,0.965,39,1.451,47,0.124,71,0.059,73,0.255,111,2.633,144,0.004,145,0.004,260,2.544,391,1.108,397,3.067,439,0.585,483,0.864,517,3.914,518,3.914,519,4.925,520,4.683,523,3.914,625,3.093,635,4.694,636,3.093,638,5.526,646,2.558,647,4.286,649,4.033,650,1.331,651,4.286,670,3.913,693,3.247,694,7.446,695,2.589,696,5.253,697,5.152,698,4.683,699,5.643,700,5.256,701,6.4,702,4.824,703,6.48,704,2.829,705,3.193,706,4.275,707,4.824,708,3.193,709,3.193,710,3.193,711,3.193,712,2.829,713,3.193,714,4.824,715,6.48,716,5.815,717,4.824,718,4.824,719,3.193,720,3.193,721,4.824,722,3.193,723,3.193,724,5.152,725,3.193,726,3.193,727,4.275,728,3.193,729,3.193,730,3.193,731,3.193,732,3.193,733,3.193,734,3.193,735,3.193,736,3.193,737,3.193,738,2.411,739,3.193,740,3.193,741,2.829,742,3.193,743,3.193]],["title/classes/CreateLogDto.html",[73,0.24,744,3.229]],["body/classes/CreateLogDto.html",[3,0.109,4,0.055,5,0.055,7,0.3,21,3.476,22,1.134,23,2.185,24,0.008,26,0.8,29,0.954,30,0.621,31,0.899,39,1.49,47,0.153,64,3.807,65,2.225,66,2.225,71,0.061,73,0.261,92,3.432,96,5.441,98,4.822,99,2.914,101,4.757,102,4.714,116,2.304,144,0.004,145,0.004,240,2.265,351,4.388,369,3.241,391,1.137,397,2.778,415,2.763,439,0.605,444,3.361,458,3.029,483,0.895,551,2.225,635,4.475,636,3.175,638,5.383,641,3.333,646,2.9,647,3.921,649,3.664,650,1.378,651,4.123,654,2.681,655,2.681,682,3.517,700,4.016,744,3.517,745,7.163,746,2.681,747,4.974,748,5.843,749,5.938,750,3.305,751,4.952,752,3.305,753,3.305,754,3.305,755,5.843,756,3.305,757,3.305,758,3.305,759,3.305,760,3.305,761,3.305,762,3.305,763,3.305,764,3.305,765,4.952,766,4.952,767,3.305,768,3.305,769,2.929,770,3.305,771,2.681,772,3.305,773,2.929,774,3.305]],["title/classes/CreateOrganizationDto.html",[73,0.24,628,2.915]],["body/classes/CreateOrganizationDto.html",[3,0.056,4,0.056,5,0.056,7,0.306,22,1.163,23,2.287,24,0.008,26,0.837,29,1.031,30,0.65,31,0.962,39,2.003,47,0.129,71,0.062,73,0.265,111,2.742,144,0.004,145,0.004,391,1.153,397,3.073,439,0.617,483,0.912,517,4.043,518,4.043,519,4.793,520,4.793,523,4.043,589,4.075,624,2.545,625,5.77,628,3.221,630,2.986,635,4.683,636,3.221,638,5.519,646,2.642,647,4.282,649,4.016,650,1.405,651,4.282,670,4.075,696,5.377,700,5.4,704,2.986,706,4.452,712,2.986,724,2.986,727,4.452,741,2.986,769,2.986,773,2.986,775,7.439,776,5.323,777,5.323,778,5.024,779,5.024,780,3.37,781,5.024,782,3.37,783,3.37,784,3.37,785,3.37,786,3.37,787,5.024,788,5.024,789,3.37,790,3.37,791,3.37,792,3.37,793,5.024,794,3.37,795,3.37,796,5.024,797,5.024,798,3.37,799,3.37,800,3.081,801,2.649,802,3.37,803,3.37,804,3.37,805,3.37,806,3.37,807,3.37,808,3.37,809,3.37,810,3.37]],["title/classes/CreatePlanDto.html",[73,0.24,811,3.06]],["body/classes/CreatePlanDto.html",[3,0.061,4,0.061,5,0.061,7,0.335,22,1.054,23,2.255,24,0.008,26,0.825,29,1.07,30,0.641,47,0.138,71,0.068,73,0.284,134,1.267,144,0.005,145,0.005,260,4.456,309,4.055,315,2.574,354,2.483,391,1.233,397,3.072,439,0.676,483,0.999,635,4.619,638,5.478,646,3.659,647,3.77,648,3.815,650,1.538,651,4.244,684,4.356,687,4.356,748,4.759,801,4.68,811,3.615,812,7.372,813,2.993,814,4.739,815,5.25,816,5.25,817,5.25,818,4.498,819,4.498,820,5.371,821,3.69,822,3.69,823,6.164,824,3.69,825,3.69,826,3.69,827,3.69,828,6.956,829,5.371,830,5.371,831,3.69,832,3.69,833,6.836,834,5.137,835,4.759,836,3.69,837,3.69,838,4.759,839,4.759,840,3.69,841,3.69,842,3.69,843,3.69,844,4.759,845,4.759,846,4.759,847,5.371,848,4.759,849,3.69,850,3.69,851,4.941,852,2.993,853,3.69,854,2.993,855,3.27]],["title/classes/CreatePlanPriceDto.html",[73,0.24,856,3.06]],["body/classes/CreatePlanPriceDto.html",[3,0.049,4,0.049,5,0.049,7,0.268,22,0.917,23,2.165,24,0.008,26,0.792,29,0.973,30,0.615,31,0.68,47,0.16,71,0.054,73,0.24,99,2.676,130,3.061,134,2.795,144,0.004,145,0.004,260,4.216,315,2.18,354,3.061,391,1.044,397,2.752,439,0.541,443,2.828,445,2.923,446,4.08,458,4.312,483,0.8,539,2.398,584,3.23,635,4.187,638,5.355,641,3.061,647,2.32,648,3.23,649,2.739,650,1.232,651,3.894,652,3.554,684,3.688,687,3.688,771,2.396,801,4.801,814,4.31,815,4.774,816,5.253,817,4.774,818,3.938,819,3.938,823,4.03,833,5.517,834,3.688,838,4.03,839,4.03,844,4.03,845,4.03,846,4.03,851,4.422,854,3.688,855,4.03,856,3.061,857,4.705,858,5.68,859,2.396,860,4.547,861,8.454,862,2.955,863,2.955,864,4.547,865,4.03,866,4.03,867,4.547,868,2.955,869,2.955,870,4.03,871,6.226,872,6.226,873,6.226,874,6.226,875,4.547,876,2.955,877,4.701,878,4.496,879,2.955,880,2.955,881,4.912,882,2.955,883,2.955,884,4.547,885,4.547,886,2.955,887,4.547,888,5.544,889,4.03,890,5.544,891,4.03,892,2.955,893,2.955,894,4.547,895,2.955,896,2.955,897,2.955,898,2.618,899,2.955,900,2.955,901,2.955,902,2.955,903,2.955,904,2.955,905,4.547]],["title/classes/CreatePromoCodeDto.html",[73,0.24,906,3.06]],["body/classes/CreatePromoCodeDto.html",[3,0.111,4,0.111,5,0.111,24,0.008,47,0.206,71,0.123,73,0.422,144,0.007,145,0.007,391,1.543,439,1.231,483,1.82,646,2.957,649,3.322,650,2.803,651,3.429,652,4.311,906,5.382,907,3.956,908,4.775,909,4.775,910,5.453]],["title/classes/CreateSubscriptionDto.html",[73,0.24,911,3.06]],["body/classes/CreateSubscriptionDto.html",[3,0.112,4,0.112,5,0.112,24,0.008,47,0.207,71,0.124,73,0.424,144,0.007,145,0.007,391,1.554,439,1.239,483,1.832,646,2.976,649,3.344,650,2.822,651,3.452,652,4.339,911,5.403,912,5.997,913,5.489]],["title/classes/CreateTeamDto.html",[73,0.24,914,3.06]],["body/classes/CreateTeamDto.html",[3,0.112,4,0.112,5,0.112,24,0.008,47,0.207,71,0.124,73,0.424,144,0.007,145,0.007,391,1.554,439,1.239,483,1.832,646,2.976,649,3.344,650,2.822,651,3.452,652,4.339,914,5.403,915,5.997,916,5.489]],["title/classes/CreateUserDto.html",[73,0.24,620,2.788]],["body/classes/CreateUserDto.html",[3,0.074,4,0.074,5,0.074,7,0.406,22,1.061,23,2.196,24,0.008,26,0.804,30,0.624,31,0.897,47,0.204,71,0.082,73,0.325,92,3.508,98,3.356,144,0.005,145,0.005,260,3.242,285,4.857,286,4.367,287,3.172,391,1.411,397,2.792,400,3.915,427,4.337,439,0.818,458,3.136,483,1.209,579,5.347,620,3.77,635,3.981,646,3.093,649,3.744,650,1.862,651,3.864,652,4.508,698,5.347,771,3.622,870,5.448,877,5.72,917,7.276,918,3.372,919,6.444,920,4.465,921,4.987,922,6.148,923,4.465,924,4.465,925,4.465,926,4.465,927,4.465,928,4.465,929,4.465,930,6.145,931,4.465,932,4.465,933,6.148,934,3.957,935,3.172,936,3.622,937,3.957,938,4.465,939,4.465,940,3.957,941,4.465]],["title/classes/CustomFieldDto.html",[73,0.24,942,3.687]],["body/classes/CustomFieldDto.html",[3,0.091,4,0.091,5,0.091,7,0.502,22,1.066,23,2.281,24,0.008,26,0.834,29,1.132,30,0.706,31,0.901,47,0.182,71,0.101,73,0.413,144,0.006,145,0.006,260,3.738,391,1.628,439,1.013,633,3.723,646,3.441,647,4.208,649,4.077,650,2.307,682,3.929,683,4.177,851,3.929,942,5.75,943,6.919,944,4.902,945,7.823,946,4.798,947,5.75,948,5.532,949,5.532,950,5.532,951,5.532,952,5.532,953,4.487,954,4.487]],["title/classes/CustomFieldValueDto.html",[73,0.24,674,3.433]],["body/classes/CustomFieldValueDto.html",[3,0.099,4,0.099,5,0.099,7,0.545,22,0.964,23,2.062,24,0.008,26,0.755,30,0.638,31,0.815,47,0.192,71,0.11,73,0.429,144,0.006,145,0.006,391,1.713,439,1.099,633,4.038,646,3.282,647,3.806,649,4.013,650,2.501,674,5.634,676,6.587,682,4.261,683,4.53,851,4.261,943,6.587,946,4.98,947,4.866,953,4.866,954,4.866,955,5.316,956,8.121,957,5.999,958,5.999]],["title/injectables/CustomValidationPipe.html",[216,0.833,959,3.687]],["body/injectables/CustomValidationPipe.html",[3,0.094,4,0.094,5,0.094,7,0.515,8,1.346,9,1.972,24,0.008,26,0.573,28,1.175,29,0.82,30,0.445,31,0.619,32,1.175,33,2.303,47,0.185,53,1.089,71,0.104,73,0.299,81,1.472,85,2.191,88,2.801,102,5.106,103,4.077,104,2.638,109,1.821,115,2.801,116,3.682,144,0.006,145,0.006,216,1.319,217,2.039,435,1.758,946,3.476,959,5.84,960,6.381,961,5.023,962,7.914,963,7.201,964,7.201,965,8.326,966,5.669,967,7.201,968,5.669,969,5.669,970,5.023,971,5.669,972,5.669,973,5.023,974,5.669]],["title/classes/Employee.html",[73,0.24,637,3.06]],["body/classes/Employee.html",[3,0.081,4,0.081,5,0.081,7,0.443,22,1.089,23,2.264,24,0.008,26,0.871,30,0.687,31,0.858,47,0.168,55,3.129,56,1.32,70,1.675,71,0.135,73,0.258,79,3.038,81,1.267,134,3.043,144,0.005,145,0.005,315,3.766,369,4.016,391,1.499,415,3.424,439,0.893,443,3.753,444,4.165,445,3.879,446,3.883,448,4.33,452,4.394,454,4.612,455,2.572,457,2.572,458,3.753,521,5.556,522,5.226,637,4.952,975,3.683,976,4.878,977,4.878,978,4.878,979,4.878,980,4.878,981,4.878,982,4.878,983,3.283,984,3.956,985,4.322]],["title/controllers/EmployeesController.html",[0,1.674,986,3.433]],["body/controllers/EmployeesController.html",[0,1.396,1,3.848,2,1.333,3,0.063,4,0.063,5,0.063,7,0.344,8,1.024,9,2.119,10,1.799,11,2.066,12,2.066,13,2.066,14,1.925,15,1.541,16,2.613,17,3.898,18,4.008,19,4.202,20,4.076,21,3.846,22,1.159,23,2.065,24,0.008,25,1.874,26,0.756,28,1.549,29,1.081,30,0.587,31,0.816,32,1.549,33,3.036,34,1.999,36,1.43,37,2.147,39,1.935,40,1.43,41,2.147,43,1.333,44,2.791,45,2.147,47,0.219,53,0.573,54,3.714,56,1.026,59,1.715,67,3.278,68,1.999,71,0.07,73,0.2,75,1.273,76,1.166,77,1.07,144,0.005,145,0.005,333,4.124,342,3.075,435,1.337,463,2.07,465,4.854,466,2.96,467,2.325,468,2.231,469,2.231,470,2.231,471,2.231,474,3.512,478,2.07,479,2.07,480,2.07,481,2.07,482,2.07,483,1.026,685,2.552,983,2.552,986,4.136,987,3.36,988,3.075,989,2.693,990,3.36,991,2.863,992,3.792,993,3.792,994,3.792]],["title/modules/EmployeesModule.html",[146,1.231,995,3.433]],["body/modules/EmployeesModule.html",[2,2.522,3,0.093,4,0.093,5,0.093,8,1.054,24,0.008,26,0.57,28,1.169,29,0.816,30,0.443,31,0.616,32,1.169,47,0.214,53,0.853,71,0.103,73,0.298,144,0.006,145,0.006,146,2.137,148,2.234,149,2.291,150,2.414,151,2.414,152,2.291,153,3.379,154,2.992,166,3.072,167,2.076,168,2.414,170,2.414,173,4.535,328,2.876,333,5.623,342,4.573,493,3.318,494,4.062,496,3.318,497,3.192,498,3.192,986,5.96,995,6.622,996,4.996,997,4.996,998,5.638,999,5.638,1000,5.638,1001,5.638]],["title/injectables/EmployeesService.html",[216,0.833,333,2.915]],["body/injectables/EmployeesService.html",[3,0.066,4,0.066,5,0.066,7,0.362,8,1.061,9,2.251,10,1.863,11,2.493,12,2.14,13,2.14,14,1.994,15,1.618,16,2.686,22,1.023,24,0.008,26,0.857,28,1.726,29,1.205,30,0.675,31,0.909,32,1.726,36,1.502,39,1.989,40,1.502,43,1.4,44,3.3,47,0.21,53,0.602,56,1.078,57,4.048,58,2.1,70,1.368,71,0.073,73,0.21,74,2.804,76,1.744,77,1.124,144,0.005,145,0.005,216,1.039,217,1.432,219,2.992,220,2.992,221,2.992,223,3.885,227,2.992,229,3.992,232,2.1,233,2.64,235,2.1,239,2.1,240,1.949,333,3.638,435,1.385,466,3.3,474,3.638,505,2.174,506,2.174,507,2.174,508,2.174,509,2.174,510,2.174,511,2.174,512,2.174,513,2.1,637,2.68,685,2.68,983,2.68,988,3.23,989,2.829,990,3.529,991,3.007,1002,3.529,1003,3.982,1004,3.982,1005,5.674,1006,3.982,1007,3.982]],["title/classes/Establishment.html",[73,0.24,701,3.229]],["body/classes/Establishment.html",[3,0.065,4,0.065,5,0.065,7,0.356,22,1.193,23,2.396,24,0.008,26,0.893,29,0.948,30,0.699,31,1.008,47,0.144,55,2.686,56,1.06,70,1.344,71,0.12,73,0.207,79,2.608,81,1.016,134,2.599,144,0.005,145,0.005,391,1.287,397,2.301,439,0.717,443,3.34,445,3.452,446,3.533,448,3.298,454,4.775,455,2.064,457,2.064,458,2.859,517,4.407,518,4.407,519,4.407,520,4.407,523,4.407,524,5.798,525,4.384,539,3.769,540,5.798,696,4.944,697,5.802,698,4.407,699,5.311,701,4.651,1008,2.955,1009,3.914,1010,3.914,1011,3.914,1012,3.914,1013,3.914,1014,3.914,1015,3.914,1016,3.914,1017,3.914,1018,3.914,1019,3.914,1020,3.914,1021,3.914,1022,2.955,1023,3.175,1024,3.468]],["title/controllers/EstablishmentsController.html",[0,1.674,1025,3.433]],["body/controllers/EstablishmentsController.html",[0,1.396,1,3.848,2,1.333,3,0.063,4,0.063,5,0.063,7,0.344,8,1.024,9,2.119,10,1.799,11,2.066,12,2.066,13,2.066,14,1.925,15,1.541,16,2.613,17,3.898,18,4.008,19,4.202,20,4.076,21,3.846,22,1.159,23,2.065,24,0.008,25,1.874,26,0.756,28,1.549,29,1.081,30,0.587,31,0.816,32,1.549,33,3.036,34,1.999,36,1.43,37,2.147,39,1.935,40,1.43,41,2.147,43,1.333,44,2.791,45,2.147,47,0.219,53,0.573,54,3.714,56,1.026,59,1.715,67,3.278,68,1.999,71,0.07,73,0.2,75,1.273,76,1.166,77,1.07,144,0.005,145,0.005,435,1.337,463,2.07,466,2.96,467,2.325,468,2.231,469,2.231,470,2.231,471,2.231,478,2.07,479,2.07,480,2.07,481,2.07,482,2.07,483,1.026,693,2.552,1022,2.863,1025,4.136,1026,3.36,1027,5.478,1028,4.329,1029,3.36,1030,3.075,1031,4.443,1032,2.693,1033,3.36,1034,3.36,1035,3.792,1036,3.792,1037,3.792]],["title/modules/EstablishmentsModule.html",[146,1.231,1038,3.433]],["body/modules/EstablishmentsModule.html",[2,2.522,3,0.093,4,0.093,5,0.093,8,1.054,24,0.008,26,0.57,28,1.169,29,0.816,30,0.443,31,0.616,32,1.169,47,0.214,53,0.853,71,0.103,73,0.298,144,0.006,145,0.006,146,2.137,148,2.234,149,2.291,150,2.414,151,2.414,152,2.291,153,3.379,154,2.992,166,3.072,167,2.076,168,2.414,170,2.414,173,4.535,328,2.876,493,3.318,494,4.062,496,3.318,497,3.192,498,3.192,1025,5.96,1028,5.903,1029,4.996,1038,6.622,1039,4.996,1040,4.996,1041,5.638,1042,5.638,1043,5.638,1044,5.638]],["title/injectables/EstablishmentsService.html",[216,0.833,1028,3.06]],["body/injectables/EstablishmentsService.html",[3,0.066,4,0.066,5,0.066,7,0.362,8,1.061,9,2.251,10,1.863,11,2.493,12,2.14,13,2.14,14,1.994,15,1.618,16,2.686,22,1.023,24,0.008,26,0.857,28,1.726,29,1.205,30,0.675,31,0.909,32,1.726,36,1.502,39,1.989,40,1.502,43,1.4,44,3.3,47,0.21,53,0.602,56,1.078,57,4.048,58,2.1,70,1.368,71,0.073,73,0.21,74,2.804,76,1.744,77,1.124,144,0.005,145,0.005,216,1.039,217,1.432,219,2.992,220,2.992,221,2.992,223,3.885,227,2.992,229,3.992,232,2.1,233,2.64,235,2.1,239,2.1,240,1.949,435,1.385,466,3.3,505,2.174,506,2.174,507,2.174,508,2.174,509,2.174,510,2.174,511,2.174,512,2.174,513,2.1,693,2.68,701,2.829,1022,3.007,1028,3.819,1030,3.23,1031,4.602,1032,2.829,1033,3.529,1034,3.529,1045,3.529,1046,3.982,1047,3.982,1048,5.674,1049,3.982,1050,3.982]],["title/classes/FlagDto.html",[73,0.24,1051,3.687]],["body/classes/FlagDto.html",[3,0.101,4,0.101,5,0.101,7,0.553,22,1.104,23,2.081,24,0.008,26,0.762,30,0.642,47,0.194,71,0.112,73,0.432,144,0.006,145,0.006,391,1.729,439,1.115,633,4.097,646,3.596,647,4.17,649,3.008,650,2.538,682,4.324,683,4.596,851,4.324,947,6.107,953,4.938,954,4.938,1051,6.107,1052,5.394,1053,8.175,1054,8.175,1055,6.088,1056,6.088]],["title/classes/ForgotPasswordDto.html",[73,0.24,1057,3.687]],["body/classes/ForgotPasswordDto.html",[3,0.108,4,0.108,5,0.108,7,0.595,22,1.018,23,1.811,24,0.008,26,0.663,30,0.515,47,0.169,71,0.12,73,0.416,144,0.007,145,0.007,391,1.808,400,3.929,439,1.2,646,3.464,650,2.732,1057,6.387,1058,6.978,1059,5.314,1060,6.552,1061,6.552,1062,7.875]],["title/classes/GlobalExceptionFilter.html",[73,0.24,1063,3.687]],["body/classes/GlobalExceptionFilter.html",[3,0.086,4,0.086,5,0.086,7,0.474,8,1.277,17,2.431,18,3.542,20,2.504,24,0.008,26,0.528,28,1.083,29,0.756,30,0.41,31,0.57,32,1.083,47,0.196,52,3.349,53,0.79,59,2.362,60,3.203,61,3.944,71,0.096,73,0.276,81,2.176,82,4.189,83,3.484,98,3.729,110,3.71,111,2.851,113,2.504,115,3.989,116,3.542,122,3.944,144,0.006,145,0.006,292,5.54,439,0.957,497,2.957,579,4.598,970,6.053,973,4.629,1063,5.54,1064,4.629,1065,7.612,1066,6.831,1067,6.745,1068,8.073,1069,5.224,1070,7.612,1071,7.612,1072,5.224,1073,5.224,1074,5.224,1075,5.224,1076,5.224,1077,5.224,1078,5.224,1079,5.224,1080,5.224,1081,5.224,1082,4.237,1083,5.224]],["title/classes/Hash.html",[73,0.24,1084,3.687]],["body/classes/Hash.html",[3,0.072,4,0.072,5,0.072,7,0.395,8,1.129,9,2.03,22,1.176,24,0.008,26,0.611,28,1.252,29,0.874,30,0.545,31,0.66,32,1.553,33,2.454,39,1.309,47,0.112,51,3.657,71,0.08,73,0.23,81,1.946,85,2.334,88,3.428,89,6.427,109,2.228,115,3.428,116,3.228,144,0.005,145,0.005,312,3.081,397,2.123,401,1.914,404,2.97,439,0.797,539,2.295,1084,6.607,1085,3.857,1086,4.996,1087,6.04,1088,6.04,1089,6.04,1090,6.937,1091,4.352,1092,6.937,1093,6.04,1094,6.04,1095,4.352,1096,6.937,1097,5.352,1098,4.352,1099,4.352,1100,6.04,1101,4.352,1102,6.04,1103,4.352,1104,4.352,1105,4.352,1106,4.352,1107,4.352,1108,3.53]],["title/interfaces/InitPasswordProps.html",[387,1.847,431,2.788]],["body/interfaces/InitPasswordProps.html",[3,0.058,4,0.058,5,0.058,7,0.32,8,0.658,9,1.695,22,1.08,24,0.008,30,0.484,31,0.567,47,0.159,51,2.736,53,0.532,71,0.065,73,0.186,75,1.742,77,0.994,81,1.766,83,3.87,85,2.628,109,2.184,113,3.475,144,0.004,145,0.004,167,1.911,182,1.638,183,1.739,216,0.95,233,2.414,240,1.209,312,3.469,379,1.921,380,3.143,385,2.158,387,3.34,388,4.652,389,2.937,390,2.257,391,1.191,392,4.652,393,5.26,394,2.369,395,1.993,396,3.492,397,2.666,398,3.492,399,4.577,400,2.414,401,2.282,402,3.182,403,3.492,404,2.911,405,2.369,406,3.182,407,5.162,408,4.577,409,4.171,410,4.577,411,4.577,412,3.492,413,3.492,414,4.002,415,2.414,416,2.369,417,4.577,418,3.492,419,2.369,420,3.182,421,3.492,422,2.369,423,3.492,424,2.369,425,2.369,426,3.182,427,3.712,428,2.369,429,3.492,430,2.369,431,3.779,432,3.492,433,2.369,434,2.369,435,1.77,436,2.369,437,3.492]],["title/modules/JwtModule.html",[146,1.231,1109,3.433]],["body/modules/JwtModule.html",[3,0.097,4,0.097,5,0.097,24,0.008,47,0.207,53,0.887,71,0.108,73,0.31,134,2.014,144,0.006,145,0.006,146,2.176,148,2.323,149,2.382,150,2.51,151,2.51,152,2.382,153,2.51,154,3.351,166,3.149,167,2.159,168,2.51,170,3.149,172,5.153,182,2.728,183,2.897,1109,7.103,1110,5.195,1111,5.195,1112,5.195,1113,7.041,1114,5.863,1115,5.195,1116,5.863,1117,5.863,1118,5.863]],["title/classes/Log.html",[73,0.24,747,2.481]],["body/classes/Log.html",[3,0.072,4,0.072,5,0.072,7,0.398,21,3.148,22,1.154,23,2.358,24,0.008,26,0.876,30,0.696,31,0.976,47,0.179,55,2.908,56,1.186,64,5.059,65,2.948,66,2.948,70,1.504,71,0.128,73,0.231,79,2.823,81,1.137,96,4.685,98,3.799,101,4.096,102,4.268,134,2.875,144,0.005,145,0.005,240,2.581,369,3.799,391,1.393,415,3.239,439,0.802,443,3.55,444,3.94,446,2.998,448,4.096,454,4.745,455,2.309,457,2.309,458,3.55,747,3.799,877,4.581,1119,3.307,1120,4.38,1121,4.38,1122,4.38,1123,4.38,1124,4.38,1125,4.38,1126,4.38,1127,3.881,1128,4.38,1129,4.38,1130,3.552,1131,3.307,1132,3.881]],["title/classes/LogHelper.html",[67,2.116,73,0.24]],["body/classes/LogHelper.html",[3,0.081,4,0.081,5,0.081,7,0.444,8,1.223,9,1.836,10,1.605,21,2.957,22,0.952,24,0.008,26,0.661,28,1.355,29,0.946,30,0.514,31,0.714,32,1.013,47,0.211,64,4.192,65,3.291,66,3.291,67,3.043,71,0.09,73,0.258,75,1.642,76,1.503,85,1.89,88,2.416,92,2.038,94,3.691,96,4.401,98,3.569,101,3.847,102,4.01,115,2.416,118,3.691,144,0.005,145,0.005,240,1.679,369,2.669,378,4.964,386,3.473,387,1.987,395,2.768,404,3.154,415,2.275,439,0.895,444,2.768,538,4.401,574,3.473,747,4.021,983,4.401,991,3.691,1133,3.965,1134,4.889,1135,4.889,1136,5.794,1137,6.189,1138,4.889,1139,4.401,1140,3.473,1141,4.332,1142,4.332,1143,6.969,1144,4.332,1145,4.332,1146,4.332,1147,4.332,1148,4.332,1149,5.794,1150,4.332,1151,5.794,1152,3.965]],["title/classes/LoginUserDto.html",[73,0.24,1153,3.687]],["body/classes/LoginUserDto.html",[3,0.099,4,0.099,5,0.099,7,0.542,22,1.096,23,2.055,24,0.008,26,0.752,30,0.584,47,0.191,71,0.109,73,0.393,92,3.1,144,0.006,145,0.006,391,1.707,397,2.613,400,4.06,427,4.762,439,1.092,483,1.615,635,4.209,646,3.563,650,2.487,651,4.132,918,4.503,1153,6.03,1154,7.178,1155,7.435,1156,5.964,1157,5.964]],["title/modules/LogsModule.html",[146,1.231,160,3.229]],["body/modules/LogsModule.html",[3,0.098,4,0.098,5,0.098,24,0.008,47,0.191,53,0.897,71,0.109,73,0.313,144,0.006,145,0.006,146,2.187,148,2.349,149,2.41,150,2.539,151,2.539,152,2.41,153,3.459,154,3.368,160,6.691,166,3.171,167,2.184,168,2.539,170,2.539,172,4.75,378,5.502,386,4.212,1158,5.255,1159,5.255,1160,5.93,1161,5.93]],["title/injectables/LogsService.html",[216,0.833,378,2.675]],["body/injectables/LogsService.html",[3,0.085,4,0.085,5,0.085,7,0.469,8,1.267,9,1.885,10,2.484,24,0.008,26,0.685,28,1.404,29,0.98,30,0.532,31,0.74,32,1.069,47,0.22,53,0.78,56,1.396,70,1.772,71,0.095,73,0.272,76,2.083,77,1.456,81,1.34,85,1.994,88,2.549,99,3.035,103,2.92,104,2.4,109,1.657,115,2.549,116,3.52,144,0.006,145,0.006,216,1.241,217,1.855,223,4.098,229,3.247,378,3.987,404,3.238,513,2.72,744,5.926,747,2.816,1130,4.184,1162,4.571,1163,5.158,1164,5.158,1165,6.775,1166,6.775,1167,5.158,1168,4.571,1169,4.571,1170,4.571,1171,3.895,1172,5.158,1173,5.158,1174,6.775,1175,5.158,1176,5.158,1177,5.158,1178,5.158]],["title/injectables/MailHelper.html",[216,0.833,379,2.481]],["body/injectables/MailHelper.html",[3,0.05,4,0.05,5,0.05,7,0.272,8,1.046,9,2.064,22,1.055,24,0.008,26,0.722,28,1.402,29,0.979,30,0.561,31,0.739,32,1.3,33,2.549,47,0.144,51,2.424,53,0.453,71,0.055,73,0.158,75,2.106,76,0.922,77,1.579,81,1.629,83,3.642,85,2.424,109,2.015,113,3.243,144,0.004,145,0.004,167,1.693,182,1.395,183,1.481,216,0.842,217,1.078,240,1.03,312,3.2,379,2.51,380,3.642,385,1.838,387,3.195,388,4.149,389,1.697,390,1.922,391,1.056,392,4.703,393,4.823,394,3.095,395,1.697,396,3.095,397,2.695,398,3.095,399,4.222,400,2.14,401,2.022,402,4.378,403,4.222,404,3.547,405,3.095,406,3.847,407,4.917,408,4.222,409,3.847,410,4.222,411,4.222,412,3.095,413,3.095,414,3.691,415,2.14,416,2.018,417,4.222,418,3.095,419,3.095,420,3.847,421,3.095,422,2.018,423,3.095,424,2.018,425,3.095,426,3.847,427,3.424,428,2.018,429,3.095,430,3.095,431,3.847,432,3.095,433,2.018,434,3.765,435,1.531,436,3.765,437,4.222,539,1.58,946,1.838,1179,4.598,1180,2.998,1181,4.598,1182,2.998,1183,2.998,1184,2.998,1185,2.998]],["title/modules/MailModule.html",[146,1.231,161,3.06]],["body/modules/MailModule.html",[3,0.085,4,0.085,5,0.085,24,0.008,47,0.224,53,0.776,71,0.094,73,0.271,82,3.147,92,2.14,104,2.388,134,1.763,144,0.006,145,0.006,146,2.043,148,2.033,149,2.085,150,2.197,151,2.197,152,2.085,153,3.231,154,2.815,161,5.954,166,2.891,167,1.89,168,2.197,170,2.197,172,4.329,182,2.388,183,2.536,366,3.291,379,4.668,380,4.362,384,4.548,385,3.147,414,3.02,1067,4.548,1186,5.133,1187,5.133,1188,5.133,1189,6.753,1190,5.098,1191,3.875,1192,4.163,1193,6.753,1194,5.133,1195,5.133,1196,5.133,1197,5.133,1198,5.133,1199,5.133,1200,5.133,1201,5.133,1202,5.133,1203,5.133,1204,5.133,1205,5.133,1206,5.133,1207,5.133,1208,5.133,1209,5.133,1210,5.133]],["title/interfaces/MailProps.html",[387,1.847,1211,3.433]],["body/interfaces/MailProps.html",[3,0.081,4,0.081,5,0.081,7,0.446,9,1.224,22,1.176,24,0.008,30,0.664,31,0.957,47,0.203,53,0.743,71,0.09,73,0.259,75,1.65,81,1.703,85,1.899,101,2.891,109,2.107,113,3.935,134,1.687,144,0.006,145,0.006,182,2.286,183,2.427,216,1.201,240,2.536,380,2.506,387,1.996,389,2.781,391,1.506,392,4.832,393,4.832,395,2.781,404,2.103,409,3.012,414,4.831,692,3.012,1190,3.709,1191,3.709,1211,5.575,1212,3.984,1213,6.982,1214,6.543,1215,3.709,1216,4.353,1217,4.353,1218,4.353,1219,4.353,1220,4.353,1221,4.353,1222,4.353,1223,4.353,1224,4.353,1225,4.353,1226,4.353,1227,5.812,1228,4.353]],["title/injectables/MailService.html",[216,0.833,380,2.319]],["body/injectables/MailService.html",[3,0.084,4,0.084,5,0.084,7,0.46,8,1.252,9,1.869,22,1.031,24,0.008,26,0.677,28,1.388,29,0.969,30,0.526,31,0.731,32,1.051,33,2.06,47,0.205,53,0.767,71,0.093,73,0.268,75,1.702,76,1.559,81,1.739,85,1.959,101,2.983,109,2.151,113,3.21,134,1.741,144,0.006,145,0.006,182,2.359,183,2.505,216,1.227,217,1.823,240,1.741,380,3.416,387,2.06,392,3.109,393,3.109,395,2.87,402,3.109,404,3.211,409,3.109,414,3.941,692,3.109,1190,3.828,1191,3.828,1211,6.025,1212,4.112,1213,4.492,1214,7.552,1215,3.828,1216,4.492,1217,5.935,1218,4.492,1219,4.492,1220,4.492,1221,4.492,1222,4.492,1223,4.492,1224,4.492,1225,4.492,1226,4.492,1227,5.935,1228,4.492,1229,6.698,1230,5.069,1231,5.069,1232,5.069]],["title/modules/MongooseConfig.html",[146,1.231,162,3.06]],["body/modules/MongooseConfig.html",[3,0.074,4,0.074,5,0.074,24,0.008,29,1.259,47,0.232,53,0.675,70,1.534,71,0.082,73,0.236,79,4.047,92,1.862,144,0.005,145,0.005,146,1.664,148,2.436,154,1.862,162,4.138,170,1.912,171,3.957,172,3.942,176,5.448,177,3.957,178,3.372,182,2.078,183,2.207,186,3.622,296,3.957,401,1.964,542,4.642,574,3.172,747,2.437,801,2.354,1131,4.642,1140,3.172,1168,3.957,1233,4.465,1234,3.957,1235,4.465,1236,6.148,1237,4.465,1238,4.465,1239,6.148,1240,4.465,1241,3.957,1242,6.148,1243,4.465,1244,3.622,1245,6.148,1246,4.465,1247,4.642,1248,3.622,1249,3.172,1250,4.642,1251,3.622,1252,4.642,1253,4.465,1254,4.465,1255,4.465,1256,4.465,1257,4.465,1258,4.465,1259,4.465,1260,4.465,1261,4.465,1262,4.465,1263,4.465]],["title/classes/NotificationHelper.html",[73,0.24,1264,3.687]],["body/classes/NotificationHelper.html",[3,0.101,4,0.101,5,0.101,7,0.553,8,1.408,22,1.056,24,0.008,26,0.616,28,1.262,29,0.881,30,0.478,31,0.665,32,1.262,71,0.112,73,0.321,103,3.446,104,2.833,109,1.955,116,2.833,144,0.006,145,0.006,260,3.21,315,4.094,404,2.606,439,1.115,458,3.105,522,6.067,668,4.938,692,3.733,698,5.502,1086,5.013,1241,5.394,1264,6.107,1265,5.394,1266,7.53,1267,7.53,1268,6.088]],["title/classes/NumberHelper.html",[73,0.24,1269,3.229]],["body/classes/NumberHelper.html",[3,0.091,4,0.091,5,0.091,7,0.5,8,1.321,22,0.711,24,0.008,26,0.557,28,1.14,29,0.796,31,0.601,32,1.464,51,3.725,71,0.101,73,0.291,81,1.429,109,1.767,134,2.427,144,0.006,145,0.006,260,4.852,315,2.637,397,1.934,439,1.008,692,4.333,848,7.546,1086,4.785,1269,5.018,1270,4.876,1271,7.065,1272,7.065,1273,8.516,1274,5.503,1275,7.065,1276,7.065,1277,7.065,1278,8.516,1279,7.296,1280,7.065,1281,7.065,1282,5.503,1283,5.503,1284,5.503,1285,5.503]],["title/classes/Organization.html",[73,0.24,625,2.915]],["body/classes/Organization.html",[3,0.067,4,0.067,5,0.067,7,0.366,22,1.189,23,2.382,24,0.008,26,0.89,29,0.963,30,0.698,31,1.005,47,0.147,55,2.742,56,1.091,70,1.384,71,0.122,73,0.213,79,2.662,81,1.046,134,2.628,144,0.005,145,0.005,391,1.314,397,2.338,439,0.738,443,3.394,445,3.508,446,3.579,448,3.367,454,4.744,455,2.124,457,2.124,458,2.918,517,4.478,518,4.478,519,4.478,520,4.478,523,4.478,524,5.875,525,4.442,539,3.819,540,5.875,625,4.266,696,5.023,776,5.895,777,5.895,1286,3.042,1287,4.029,1288,4.029,1289,4.029,1290,4.029,1291,4.029,1292,4.029,1293,4.029,1294,4.029,1295,4.029,1296,4.029,1297,4.029,1298,4.029,1299,3.042,1300,3.268,1301,3.57]],["title/controllers/OrganizationsController.html",[0,1.674,1302,3.433]],["body/controllers/OrganizationsController.html",[0,1.396,1,3.848,2,1.333,3,0.063,4,0.063,5,0.063,7,0.344,8,1.024,9,2.119,10,1.799,11,2.066,12,2.066,13,2.066,14,1.925,15,1.541,16,2.613,17,3.898,18,4.008,19,4.202,20,4.076,21,3.846,22,1.159,23,2.065,24,0.008,25,1.874,26,0.756,28,1.549,29,1.081,30,0.587,31,0.816,32,1.549,33,3.036,34,1.999,36,1.43,37,2.147,39,1.935,40,1.43,41,2.147,43,1.333,44,2.791,45,2.147,47,0.219,53,0.573,54,3.714,56,1.026,59,1.715,67,3.278,68,1.999,71,0.07,73,0.2,75,1.273,76,1.166,77,1.07,144,0.005,145,0.005,435,1.337,463,2.07,466,2.96,467,2.325,468,2.231,469,2.231,470,2.231,471,2.231,478,2.07,479,2.07,480,2.07,481,2.07,482,2.07,483,1.026,628,2.431,631,2.863,632,4.136,1299,2.863,1302,4.136,1303,3.36,1304,5.478,1305,4.329,1306,3.36,1307,2.693,1308,3.36,1309,3.36,1310,3.792,1311,3.792,1312,3.792]],["title/modules/OrganizationsModule.html",[146,1.231,1313,3.433]],["body/modules/OrganizationsModule.html",[2,2.522,3,0.093,4,0.093,5,0.093,8,1.054,24,0.008,26,0.57,28,1.169,29,0.816,30,0.443,31,0.616,32,1.169,47,0.214,53,0.853,71,0.103,73,0.298,144,0.006,145,0.006,146,2.137,148,2.234,149,2.291,150,2.414,151,2.414,152,2.291,153,3.379,154,2.992,166,3.072,167,2.076,168,2.414,170,2.414,173,4.535,328,2.876,493,3.318,494,4.062,496,3.318,497,3.192,498,3.192,1302,5.96,1305,5.903,1306,4.996,1313,6.622,1314,4.996,1315,4.996,1316,5.638,1317,5.638,1318,5.638,1319,5.638]],["title/injectables/OrganizationsService.html",[216,0.833,1305,3.06]],["body/injectables/OrganizationsService.html",[3,0.066,4,0.066,5,0.066,7,0.362,8,1.061,9,2.251,10,1.863,11,2.493,12,2.14,13,2.14,14,1.994,15,1.618,16,2.686,22,1.023,24,0.008,26,0.857,28,1.726,29,1.205,30,0.675,31,0.909,32,1.726,36,1.502,39,1.989,40,1.502,43,1.4,44,3.3,47,0.21,53,0.602,56,1.078,57,4.048,58,2.1,70,1.368,71,0.073,73,0.21,74,2.804,76,1.744,77,1.124,144,0.005,145,0.005,216,1.039,217,1.432,219,2.992,220,2.992,221,2.992,223,3.885,227,2.992,229,3.992,232,2.1,233,2.64,235,2.1,239,2.1,240,1.949,435,1.385,466,3.3,505,2.174,506,2.174,507,2.174,508,2.174,509,2.174,510,2.174,511,2.174,512,2.174,513,2.1,625,2.553,628,2.553,631,3.007,632,4.284,1299,3.007,1305,3.819,1307,2.829,1308,3.529,1309,3.529,1320,3.529,1321,3.982,1322,3.982,1323,5.674,1324,3.982,1325,3.982]],["title/classes/Plan.html",[73,0.24,801,2.397]],["body/classes/Plan.html",[3,0.083,4,0.083,5,0.083,7,0.457,22,1.099,23,2.199,24,0.008,26,0.86,29,1.082,30,0.682,31,0.869,47,0.172,55,3.194,56,1.362,70,1.728,71,0.137,73,0.266,79,3.102,81,1.307,134,3.062,144,0.006,145,0.006,315,3.194,391,1.53,397,2.626,439,0.922,443,3.812,445,3.94,446,3.931,448,4.682,454,4.364,455,2.653,457,2.653,458,4.058,801,3.94,814,4.792,1247,3.8,1326,3.8,1327,7.474,1328,5.032,1329,5.032,1330,5.032,1331,5.032,1332,5.032,1333,5.032,1334,3.8,1335,4.459]],["title/classes/PlanPrice.html",[73,0.24,1336,3.433]],["body/classes/PlanPrice.html",[3,0.071,4,0.071,5,0.071,7,0.39,22,1.048,23,2.3,24,0.008,26,0.872,29,0.996,30,0.686,31,0.813,47,0.154,55,2.866,56,1.161,70,1.473,71,0.126,73,0.226,79,2.782,81,1.114,134,3.119,144,0.005,145,0.005,260,4.275,315,2.866,391,1.373,439,0.785,443,3.511,445,3.629,446,3.679,448,4.896,454,4.475,455,2.261,457,2.261,458,4.244,814,4.413,815,4.889,816,4.889,817,4.889,818,4.889,819,4.889,857,5.138,1336,5.197,1337,5.877,1338,3.238,1339,4.289,1340,4.289,1341,4.289,1342,4.289,1343,4.289,1344,4.289,1345,4.289,1346,4.289,1347,4.289,1348,3.238,1349,3.479,1350,3.8]],["title/controllers/PlanPricesController.html",[0,1.674,1351,3.433]],["body/controllers/PlanPricesController.html",[0,1.364,1,3.821,2,1.301,3,0.061,4,0.061,5,0.061,7,0.336,8,1.007,9,2.108,10,1.768,11,2.031,12,2.031,13,2.031,14,1.893,15,1.505,16,2.578,17,3.875,18,3.988,19,4.18,20,4.054,21,3.825,22,1.155,23,2.046,24,0.008,25,1.83,26,0.749,28,1.534,29,1.071,30,0.582,31,0.808,32,1.534,33,3.008,34,1.952,36,1.397,37,2.096,39,1.909,40,1.397,41,2.096,43,1.301,44,2.76,45,2.096,47,0.218,53,0.56,54,3.674,56,1.002,59,1.675,67,3.242,68,1.952,71,0.068,73,0.196,75,1.243,76,1.138,77,1.045,144,0.005,145,0.005,435,1.315,463,2.021,466,2.933,467,2.271,468,2.179,469,2.179,470,2.179,471,2.179,478,2.021,479,2.021,480,2.021,481,2.021,482,2.021,483,1.002,801,3.346,856,2.492,857,2.179,858,2.63,1337,2.492,1348,2.796,1351,4.066,1352,4.066,1353,3.281,1354,6.346,1355,4.271,1356,5.261,1357,3.281,1358,4.368,1359,2.63,1360,2.796,1361,3.281,1362,3.703,1363,3.703,1364,3.703,1365,3.703]],["title/modules/PlanPricesModule.html",[146,1.231,1366,3.433]],["body/modules/PlanPricesModule.html",[2,2.449,3,0.089,4,0.089,5,0.089,8,1.007,24,0.008,26,0.545,28,1.117,29,0.78,30,0.423,31,0.588,32,1.117,47,0.21,53,0.815,71,0.099,73,0.284,144,0.006,145,0.006,146,2.091,148,2.134,149,2.189,150,2.306,151,2.306,152,2.189,153,3.307,154,3.221,166,2.984,167,1.984,168,2.306,170,2.306,173,4.459,328,2.748,493,3.17,494,3.946,496,3.17,497,3.05,498,3.05,857,4.101,1351,5.833,1352,6.168,1355,5.833,1356,5.262,1357,4.774,1366,7.002,1367,4.774,1368,4.774,1369,4.774,1370,5.388,1371,5.388,1372,5.388,1373,5.388]],["title/injectables/PlanPricesService.html",[216,0.833,1355,3.06]],["body/injectables/PlanPricesService.html",[3,0.065,4,0.065,5,0.065,7,0.355,8,1.047,9,2.245,10,1.838,11,2.467,12,2.111,13,2.111,14,1.967,15,1.587,16,2.658,22,1.017,24,0.008,26,0.853,28,1.717,29,1.199,30,0.673,31,0.905,32,1.717,36,1.474,39,1.968,40,1.474,43,1.373,44,3.283,47,0.209,53,0.591,56,1.058,57,4.032,58,2.06,70,1.342,71,0.072,73,0.206,74,2.766,76,1.721,77,1.103,144,0.005,145,0.005,216,1.025,217,1.405,219,2.951,220,2.951,221,2.951,223,3.856,227,2.951,229,3.972,232,2.06,233,2.605,235,2.06,239,2.06,240,1.923,435,1.366,466,3.283,505,2.132,506,2.132,507,2.132,508,2.132,509,2.132,510,2.132,511,2.132,512,2.132,513,2.06,801,2.951,856,2.629,857,3.294,858,2.775,1336,2.95,1337,2.629,1348,2.95,1352,4.226,1355,3.767,1356,4.938,1358,4.54,1359,2.775,1360,2.95,1361,3.462,1374,3.462,1375,3.907,1376,3.907,1377,5.597,1378,3.907,1379,3.907]],["title/controllers/PlansController.html",[0,1.674,1380,3.433]],["body/controllers/PlansController.html",[0,1.009,1,3.447,2,0.962,3,0.045,4,0.045,5,0.045,7,0.249,8,0.802,9,1.988,10,2.513,11,1.617,12,1.617,13,1.617,14,1.507,17,3.912,18,3.773,19,4.111,20,3.94,21,3.838,22,1.106,23,1.794,24,0.008,25,2.611,26,0.656,28,1.345,29,0.939,30,0.51,31,0.709,32,1.345,33,2.637,34,1.444,36,1.033,37,1.55,39,1.59,40,1.033,41,1.55,43,0.962,44,2.368,45,1.55,47,0.216,50,3.237,52,1.756,53,0.414,54,3.152,56,0.741,59,1.238,60,1.679,61,2.068,64,1.756,65,1.843,66,1.843,67,2.781,68,1.444,71,0.05,73,0.145,75,2.007,76,0.842,77,1.687,81,1.372,82,3.979,83,2.695,85,1.058,88,1.353,91,2.427,92,1.788,93,3.237,94,2.068,95,3.477,96,1.843,98,1.495,99,1.612,101,1.612,102,1.679,103,1.55,104,2.458,107,2.427,109,1.697,110,3.045,111,2.34,112,2.221,113,2.055,115,1.353,116,3.02,120,2.221,122,3.237,124,2.427,144,0.004,145,0.004,366,1.756,378,3.109,386,1.945,397,2.101,401,1.205,435,1.047,463,1.495,466,2.571,468,1.612,469,1.612,470,1.612,471,1.612,478,1.495,479,1.495,480,2.34,481,2.884,482,2.34,483,0.741,525,2.629,549,2.221,551,3.556,552,2.221,553,3.477,554,2.221,578,2.221,579,2.886,580,2.427,800,4.22,801,2.786,811,4.632,1082,2.221,1152,3.477,1248,2.221,1334,2.068,1380,3.989,1381,2.427,1382,5.283,1383,2.739,1384,2.739,1385,2.739,1386,3.556,1387,2.427,1388,2.221,1389,3.477,1390,1.945,1391,2.427,1392,3.989,1393,1.945,1394,2.739,1395,3.556,1396,1.945,1397,2.427,1398,2.739,1399,2.739,1400,2.739,1401,2.739,1402,6.882,1403,4.287,1404,2.739,1405,2.739,1406,2.739,1407,2.739,1408,2.739]],["title/modules/PlansModule.html",[146,1.231,195,3.229]],["body/modules/PlansModule.html",[2,2.425,3,0.088,4,0.088,5,0.088,8,0.992,24,0.008,26,0.536,28,1.099,29,0.768,30,0.417,31,0.579,32,1.099,47,0.222,53,0.802,71,0.097,73,0.28,144,0.006,145,0.006,146,2.076,148,2.101,149,2.155,150,2.271,151,2.271,152,2.155,153,3.283,154,3.197,166,2.954,167,1.953,168,2.271,170,2.271,173,4.432,195,6.573,328,2.706,493,3.121,494,3.906,496,3.121,497,3.003,498,3.003,1380,5.79,1386,5.808,1387,4.7,1393,3.768,1396,3.768,1409,4.7,1410,4.7,1411,4.7,1412,5.304,1413,5.304,1414,5.304,1415,4.901,1416,4.7,1417,4.901,1418,4.7,1419,5.304]],["title/injectables/PlansService.html",[216,0.833,1386,3.06]],["body/injectables/PlansService.html",[3,0.066,4,0.066,5,0.066,7,0.362,8,1.061,9,2.251,10,1.863,11,2.493,12,2.14,13,2.14,14,1.994,15,1.618,16,2.686,22,1.023,24,0.008,26,0.857,28,1.726,29,1.205,30,0.675,31,0.909,32,1.726,36,1.502,39,1.989,40,1.502,43,1.4,44,3.3,47,0.21,53,0.602,56,1.078,57,4.048,58,2.1,70,1.368,71,0.073,73,0.21,74,2.804,76,1.744,77,1.124,144,0.005,145,0.005,216,1.039,217,1.432,219,2.992,220,2.992,221,2.992,223,3.885,227,2.992,229,3.992,232,2.1,233,2.64,235,2.1,239,2.1,240,1.949,435,1.385,466,3.3,505,2.174,506,2.174,507,2.174,508,2.174,509,2.174,510,2.174,511,2.174,512,2.174,513,2.1,801,2.1,811,2.68,1248,3.23,1334,3.007,1386,3.819,1388,3.23,1389,4.602,1390,2.829,1391,3.529,1420,3.529,1421,3.982,1422,3.982,1423,5.674,1424,3.982,1425,3.982]],["title/classes/PromoCode.html",[73,0.24,1426,3.433]],["body/classes/PromoCode.html",[3,0.097,4,0.097,5,0.097,7,0.536,24,0.008,26,0.747,30,0.633,31,0.922,47,0.19,55,3.538,56,1.596,70,2.025,71,0.148,73,0.311,79,3.435,81,1.531,134,2.025,144,0.006,145,0.006,391,1.85,439,1.08,443,4.11,445,4.248,446,4.173,454,3.109,455,3.109,457,3.109,907,4.742,1426,6.084,1427,5.423,1428,4.452,1429,5.896,1430,5.896,1431,4.452,1432,4.782,1433,5.225]],["title/controllers/PromoCodesController.html",[0,1.674,1434,3.433]],["body/controllers/PromoCodesController.html",[0,1.352,1,3.81,2,1.29,3,0.061,4,0.061,5,0.061,7,0.333,8,1,9,2.104,10,1.757,11,2.018,12,2.018,13,2.018,14,1.88,15,1.491,16,2.565,17,3.866,18,3.98,19,4.171,20,4.046,21,3.817,22,1.153,23,2.039,24,0.008,25,1.814,26,0.746,28,1.529,29,1.067,30,0.58,31,0.805,32,1.529,33,2.997,34,1.935,36,1.384,37,2.078,39,1.9,40,1.384,41,2.078,43,1.29,44,2.749,45,2.078,47,0.22,53,0.555,54,3.658,56,0.994,59,1.66,67,3.229,68,1.935,71,0.067,73,0.194,75,1.232,76,1.128,77,1.036,144,0.004,145,0.004,435,1.306,463,2.003,466,2.922,467,2.251,468,2.16,469,2.16,470,2.16,471,2.16,478,2.003,479,2.003,480,2.003,481,2.003,482,2.003,483,0.994,747,2.003,906,2.47,907,2.16,908,2.607,909,4.485,1427,2.47,1431,2.771,1434,4.04,1435,4.04,1436,3.252,1437,6.314,1438,4.249,1439,5.239,1440,3.252,1441,4.339,1442,2.607,1443,2.771,1444,3.252,1445,3.252,1446,3.67,1447,3.67,1448,3.67,1449,3.67]],["title/modules/PromoCodesModule.html",[146,1.231,1450,3.433]],["body/modules/PromoCodesModule.html",[2,2.487,3,0.091,4,0.091,5,0.091,8,1.032,24,0.008,26,0.558,28,1.144,29,0.798,30,0.434,31,0.602,32,1.144,47,0.212,53,0.834,71,0.101,73,0.291,144,0.006,145,0.006,146,2.115,148,2.186,149,2.242,150,2.362,151,2.362,152,2.242,153,3.345,154,2.951,166,3.03,167,2.032,168,2.362,170,2.362,173,4.499,328,2.814,493,3.247,494,4.007,496,3.247,497,3.123,498,3.123,907,4.164,1434,5.9,1435,6.223,1438,5.87,1439,5.344,1440,4.889,1450,6.585,1451,4.889,1452,4.889,1453,5.517,1454,5.517,1455,5.517,1456,5.517]],["title/injectables/PromoCodesService.html",[216,0.833,1438,3.06]],["body/injectables/PromoCodesService.html",[3,0.065,4,0.065,5,0.065,7,0.355,8,1.047,9,2.245,10,1.838,11,2.467,12,2.111,13,2.111,14,1.967,15,1.587,16,2.658,22,1.017,24,0.008,26,0.853,28,1.717,29,1.199,30,0.673,31,0.905,32,1.717,36,1.474,39,1.968,40,1.474,43,1.373,44,3.283,47,0.209,53,0.591,56,1.058,57,4.032,58,2.06,70,1.342,71,0.072,73,0.206,74,2.766,76,1.721,77,1.103,144,0.005,145,0.005,216,1.025,217,1.405,219,2.951,220,2.951,221,2.951,223,3.856,227,2.951,229,3.972,232,2.06,233,2.605,235,2.06,239,2.06,240,1.923,435,1.366,466,3.283,505,2.132,506,2.132,507,2.132,508,2.132,509,2.132,510,2.132,511,2.132,512,2.132,513,2.06,906,2.629,907,3.294,908,2.775,909,3.976,1426,2.95,1427,2.629,1431,2.95,1435,4.226,1438,3.767,1439,4.938,1441,4.54,1442,2.775,1443,2.95,1444,3.462,1457,3.462,1458,3.907,1459,3.907,1460,5.597,1461,3.907,1462,3.907]],["title/classes/RefreshTokenDto.html",[73,0.24,1463,3.687]],["body/classes/RefreshTokenDto.html",[3,0.108,4,0.108,5,0.108,7,0.595,22,1.018,23,1.811,24,0.008,26,0.663,30,0.515,47,0.169,71,0.12,73,0.416,144,0.007,145,0.007,391,1.808,439,1.2,646,3.464,647,4.017,650,2.732,1463,6.387,1464,6.978,1465,5.806,1466,7.481,1467,5.806,1468,6.552]],["title/classes/ResetPasswordDto.html",[73,0.24,1469,3.687]],["body/classes/ResetPasswordDto.html",[3,0.1,4,0.1,5,0.1,7,0.55,22,1.101,23,2.074,24,0.008,26,0.759,30,0.589,47,0.193,71,0.111,73,0.396,75,2.998,144,0.006,145,0.006,312,4.159,391,1.722,439,1.108,646,3.586,647,4.159,650,2.523,934,5.363,935,4.299,936,4.909,940,5.363,1059,4.909,1467,5.363,1469,6.085,1470,7.225,1471,8.154,1472,6.052,1473,6.052,1474,6.052]],["title/interfaces/ResetPasswordProps.html",[387,1.847,426,2.788]],["body/interfaces/ResetPasswordProps.html",[3,0.058,4,0.058,5,0.058,7,0.32,8,0.658,9,1.695,22,1.08,24,0.008,30,0.484,31,0.567,47,0.159,51,2.736,53,0.532,71,0.065,73,0.186,75,1.742,77,0.994,81,1.766,83,3.87,85,2.628,109,2.184,113,3.475,144,0.004,145,0.004,167,1.911,182,1.638,183,1.739,216,0.95,233,2.414,240,1.209,312,3.469,379,1.921,380,3.143,385,2.158,387,3.34,388,4.652,389,2.937,390,2.257,391,1.191,392,4.652,393,5.26,394,2.369,395,1.993,396,3.492,397,2.666,398,3.492,399,4.577,400,2.414,401,2.282,402,3.182,403,3.492,404,2.911,405,2.369,406,3.182,407,5.162,408,4.577,409,4.171,410,4.577,411,4.577,412,3.492,413,3.492,414,4.002,415,2.414,416,2.369,417,4.577,418,3.492,419,2.369,420,3.182,421,3.492,422,2.369,423,3.492,424,2.369,425,2.369,426,3.779,427,3.712,428,2.369,429,3.492,430,2.369,431,3.182,432,3.492,433,2.369,434,2.369,435,1.77,436,2.369,437,3.492]],["title/classes/Responses.html",[60,2.788,73,0.24]],["body/classes/Responses.html",[3,0.063,4,0.063,5,0.063,7,0.348,8,1.031,17,1.781,18,2.566,22,1.101,24,0.008,25,1.891,26,0.558,28,1.143,29,0.798,30,0.433,31,0.602,32,1.143,47,0.182,48,2.718,49,2.347,52,2.454,53,0.579,59,1.731,60,3.382,62,2.576,63,3.104,71,0.07,73,0.202,79,3.49,81,1.679,82,2.347,83,1.952,89,2.718,98,4.093,99,2.252,109,1.771,111,3.529,113,1.834,116,3.292,131,3.104,133,3.104,134,1.314,144,0.005,145,0.005,240,2.43,260,3.73,315,2.643,387,1.555,401,1.683,402,2.347,404,2.361,439,0.701,525,3.382,539,2.018,551,2.576,584,2.718,587,2.889,692,3.382,738,2.889,1086,4.791,1269,2.718,1475,3.104,1476,5.515,1477,5.515,1478,4.887,1479,5.342,1480,3.827,1481,4.887,1482,3.827,1483,4.887,1484,3.391,1485,7.551,1486,6.269,1487,6.53,1488,3.391,1489,3.391,1490,3.391,1491,3.391,1492,6.645,1493,6.269,1494,3.391,1495,3.391,1496,4.887,1497,3.391,1498,3.391,1499,3.391,1500,3.104,1501,3.391,1502,3.391,1503,4.887,1504,3.391,1505,4.887,1506,3.391,1507,4.887,1508,3.391,1509,3.391,1510,3.391,1511,3.391,1512,3.391,1513,3.391,1514,3.391]],["title/interfaces/ResponsesProps.html",[387,1.847,1479,3.433]],["body/interfaces/ResponsesProps.html",[3,0.059,4,0.059,5,0.059,7,0.325,17,3.191,18,3.191,22,1.167,24,0.008,25,1.77,30,0.649,31,0.884,47,0.177,48,2.544,49,2.196,52,2.296,53,0.542,59,1.619,60,2.196,62,2.41,63,2.904,71,0.066,73,0.189,79,3.398,81,1.616,82,4.205,83,3.498,89,4.871,98,4.417,99,2.107,109,1.688,111,4.167,113,3.287,116,3.671,131,2.904,133,5.562,134,1.23,144,0.004,145,0.004,240,2.71,260,3.616,315,3.287,387,1.455,389,2.027,391,1.206,401,1.575,404,2.249,525,2.196,539,1.888,551,2.41,584,2.544,587,2.704,692,3.222,738,2.704,1086,3.222,1269,2.544,1475,2.904,1478,3.173,1479,4.7,1481,3.173,1483,3.173,1484,3.173,1485,7.437,1486,6.076,1487,6.398,1488,3.173,1489,3.173,1490,3.173,1491,3.173,1492,6.471,1493,6.076,1494,3.173,1495,3.173,1496,4.656,1497,3.173,1498,3.173,1499,3.173,1500,2.904,1501,3.173,1502,3.173,1503,4.656,1504,3.173,1505,4.656,1506,3.173,1507,4.656,1508,3.173,1509,3.173,1510,3.173,1511,3.173,1512,3.173,1513,3.173,1514,3.173]],["title/classes/SecurityHelper.html",[73,0.24,1171,3.433]],["body/classes/SecurityHelper.html",[3,0.067,4,0.067,5,0.067,7,0.37,8,1.079,21,2.609,22,1.194,24,0.008,26,0.807,28,1.509,29,1.054,30,0.604,31,0.795,32,1.509,47,0.105,71,0.075,73,0.215,77,2.252,81,2.176,109,2.338,130,2.744,144,0.005,145,0.005,391,1.325,404,3.117,439,0.747,539,3.042,946,3.538,1086,5.608,1171,4.356,1515,3.612,1516,6.696,1517,6.696,1518,5.77,1519,5.77,1520,5.77,1521,5.77,1522,5.77,1523,5.77,1524,5.77,1525,4.077,1526,5.77,1527,5.77,1528,4.077,1529,5.77,1530,4.077,1531,5.77,1532,4.077,1533,5.77,1534,4.077,1535,4.077,1536,5.77,1537,4.077,1538,4.077,1539,5.112,1540,4.077,1541,4.077,1542,4.077,1543,4.077,1544,4.077,1545,4.077,1546,6.696,1547,4.077,1548,4.077,1549,4.077,1550,5.77,1551,5.77,1552,5.77,1553,4.077,1554,4.077,1555,4.077,1556,4.077,1557,4.077,1558,4.077,1559,4.077,1560,5.77,1561,4.077,1562,4.077,1563,4.077,1564,4.077,1565,4.077,1566,4.077,1567,4.077,1568,4.077]],["title/classes/StringHelper.html",[62,3.06,73,0.24]],["body/classes/StringHelper.html",[3,0.064,4,0.064,5,0.064,7,0.351,8,1.038,22,1.183,24,0.008,26,0.657,28,1.151,29,0.803,31,0.606,32,1.624,47,0.099,51,2.927,62,3.737,71,0.071,73,0.204,81,2.097,104,1.798,106,2.917,109,2.593,144,0.005,145,0.005,354,3.737,397,1.951,427,4.661,439,0.707,636,4.556,641,4.782,755,4.92,889,3.423,921,3.133,935,4.617,936,3.133,1086,5.16,1192,3.133,1569,3.423,1570,5.552,1571,7.106,1572,5.552,1573,5.552,1574,3.863,1575,5.552,1576,7.837,1577,8.074,1578,7.527,1579,5.552,1580,3.863,1581,5.552,1582,5.552,1583,5.552,1584,5.552,1585,3.863,1586,5.552,1587,5.552,1588,7.527,1589,5.552,1590,5.552,1591,6.499,1592,3.863,1593,3.863,1594,3.863,1595,3.863,1596,3.863,1597,6.499,1598,5.552,1599,6.499,1600,5.552,1601,3.863,1602,3.863,1603,3.863,1604,3.423,1605,5.552,1606,3.863,1607,3.863,1608,3.863,1609,3.863,1610,3.863,1611,3.863,1612,3.863,1613,3.863,1614,3.863,1615,3.863,1616,3.863]],["title/classes/StripeCustomerProps.html",[73,0.24,1617,3.433]],["body/classes/StripeCustomerProps.html",[3,0.109,4,0.109,5,0.109,7,0.599,22,1.134,24,0.008,26,0.8,29,1.225,30,0.621,71,0.121,73,0.348,144,0.007,145,0.007,391,1.815,400,3.94,439,1.208,1617,5.969,1618,6.867,1619,5.843,1620,6.594,1621,6.594]],["title/injectables/StripeCustomerService.html",[216,0.833,1622,3.687]],["body/injectables/StripeCustomerService.html",[3,0.073,4,0.073,5,0.073,7,0.403,8,1.144,9,2.231,10,2.01,14,2.151,22,1.122,24,0.008,26,0.802,28,1.643,29,1.257,30,0.623,31,0.866,32,1.566,33,3.07,39,2.108,43,2.151,47,0.18,49,3.754,53,0.671,71,0.081,73,0.234,75,1.49,76,1.364,77,1.252,81,1.589,85,2.92,109,2.426,144,0.005,145,0.005,216,1.121,217,1.596,400,3.516,800,5.15,1617,6.809,1618,6.812,1622,4.964,1623,3.931,1624,4.964,1625,3.598,1626,4.437,1627,6.121,1628,4.437,1629,4.964,1630,4.437,1631,4.964,1632,4.437,1633,4.437,1634,3.35,1635,4.437,1636,3.598,1637,4.437,1638,4.437,1639,4.437,1640,4.437]],["title/modules/StripeModule.html",[146,1.231,163,3.229]],["body/modules/StripeModule.html",[2,1.893,3,0.089,4,0.089,5,0.089,24,0.008,47,0.218,53,0.815,71,0.099,73,0.284,104,2.507,109,1.73,144,0.006,145,0.006,146,2.091,148,2.134,149,2.189,150,2.306,151,2.306,152,2.189,153,3.307,154,3.221,163,6.264,166,2.984,167,1.984,168,2.306,170,2.306,172,4.468,178,4.068,182,2.507,183,2.662,214,4.774,800,4.738,1234,7.238,1395,5.833,1397,4.774,1634,4.068,1641,4.774,1642,4.774,1643,4.774,1644,7.815,1645,5.388,1646,5.388,1647,5.388,1648,5.388,1649,5.388,1650,5.388,1651,5.388,1652,5.388]],["title/injectables/StripePlanService.html",[216,0.833,1653,2.915]],["body/injectables/StripePlanService.html",[3,0.115,4,0.115,5,0.115,24,0.008,47,0.179,53,1.055,71,0.128,73,0.368,144,0.007,145,0.007,216,1.496,217,2.508,1244,5.656,1653,5.239,1654,5.265,1655,6.179]],["title/injectables/StripePlanService-1.html",[216,0.693,354,2.549,1653,2.428]],["body/injectables/StripePlanService-1.html",[3,0.115,4,0.115,5,0.115,24,0.008,47,0.179,53,1.055,71,0.128,73,0.368,144,0.007,145,0.007,216,1.496,217,2.508,1653,5.239,1654,5.265,1656,6.179,1657,6.179]],["title/injectables/StripePlanService-2.html",[216,0.693,738,2.859,1653,2.428]],["body/injectables/StripePlanService-2.html",[3,0.116,4,0.116,5,0.116,24,0.008,47,0.18,53,1.058,71,0.128,73,0.369,144,0.007,145,0.007,216,1.499,217,2.517,1653,5.25,1654,5.283,1658,6.2]],["title/classes/StripePriceProps.html",[73,0.24,1417,3.229]],["body/classes/StripePriceProps.html",[3,0.09,4,0.09,5,0.09,7,0.497,22,0.91,24,0.008,26,0.895,29,1.126,30,0.696,47,0.2,71,0.1,73,0.289,144,0.006,145,0.006,260,4.588,315,3.375,391,1.616,439,1.002,800,4.318,814,4.991,815,5.529,816,5.529,817,5.529,818,5.529,819,5.529,878,6.313,898,4.85,1396,6.369,1417,5.001,1659,4.85,1660,5.473,1661,5.473,1662,5.473,1663,6.239,1664,5.473,1665,5.473,1666,5.473,1667,5.473,1668,4.85,1669,5.473]],["title/injectables/StripePriceService.html",[216,0.833,1395,3.06]],["body/injectables/StripePriceService.html",[3,0.071,4,0.071,5,0.071,7,0.388,8,1.115,9,2.217,10,1.957,14,2.095,22,1.113,24,0.008,26,0.791,28,1.62,29,1.246,30,0.614,31,0.854,32,1.54,33,3.02,39,2.066,43,2.095,47,0.177,49,3.656,53,0.646,71,0.078,73,0.226,75,1.434,76,1.313,77,1.206,81,1.548,85,2.873,109,2.387,144,0.005,145,0.005,216,1.092,217,1.536,800,5.097,814,4.765,815,4.234,816,4.234,817,4.234,818,4.234,819,4.234,1395,4.012,1396,5.903,1417,6.367,1418,3.785,1624,4.835,1625,3.464,1629,4.835,1631,4.835,1634,3.225,1636,3.464,1670,3.785,1671,4.271,1672,5.962,1673,4.271,1674,4.271,1675,4.271,1676,4.271,1677,4.271,1678,4.271,1679,5.962,1680,4.271,1681,4.271,1682,4.271,1683,3.785,1684,4.271,1685,3.785]],["title/classes/StripeProductProps.html",[73,0.24,1415,3.229]],["body/classes/StripeProductProps.html",[3,0.113,4,0.113,5,0.113,7,0.619,22,1.042,24,0.008,26,0.689,29,1.242,30,0.535,71,0.125,73,0.36,144,0.007,145,0.007,391,1.85,439,1.248,1393,5.725,1415,5.725,1686,6.036,1687,6.812]],["title/injectables/StripeProductService.html",[216,0.833,1392,3.433]],["body/injectables/StripeProductService.html",[3,0.074,4,0.074,5,0.074,7,0.406,8,1.151,9,2.234,10,2.022,14,2.164,22,1.124,24,0.008,26,0.804,28,1.648,29,1.259,30,0.625,31,0.868,32,1.572,33,3.081,39,2.118,43,2.164,47,0.181,49,3.776,53,0.677,71,0.082,73,0.236,75,1.503,76,1.376,77,1.263,81,1.599,85,2.931,109,2.435,144,0.005,145,0.005,216,1.128,217,1.61,800,5.162,1392,4.649,1393,5.979,1415,6.414,1416,3.965,1624,4.994,1625,3.63,1629,4.994,1631,4.994,1634,3.379,1636,3.63,1683,3.965,1685,3.965,1688,3.965,1689,4.475,1690,6.157,1691,4.475,1692,4.475,1693,4.475,1694,4.475,1695,4.475,1696,4.475]],["title/classes/Subscription.html",[73,0.24,1249,3.229]],["body/classes/Subscription.html",[3,0.099,4,0.099,5,0.099,7,0.545,24,0.008,26,0.755,30,0.638,31,0.928,47,0.192,55,3.576,56,1.624,70,2.061,71,0.149,73,0.317,79,3.472,81,1.558,134,2.061,144,0.006,145,0.006,391,1.864,439,1.099,443,4.143,445,4.282,446,4.199,454,3.163,455,3.163,457,3.163,1249,5.769,1250,4.53,1697,4.53,1698,5.999,1699,5.999,1700,4.53,1701,5.316]],["title/controllers/SubscriptionsController.html",[0,1.674,1702,3.433]],["body/controllers/SubscriptionsController.html",[0,1.396,1,3.848,2,1.333,3,0.063,4,0.063,5,0.063,7,0.344,8,1.024,9,2.119,10,1.799,11,2.066,12,2.066,13,2.066,14,1.925,15,1.541,16,2.613,17,3.898,18,4.008,19,4.202,20,4.076,21,3.846,22,1.159,23,2.065,24,0.008,25,1.874,26,0.756,28,1.549,29,1.081,30,0.587,31,0.816,32,1.549,33,3.036,34,1.999,36,1.43,37,2.147,39,1.935,40,1.43,41,2.147,43,1.333,44,2.791,45,2.147,47,0.219,53,0.573,54,3.714,56,1.026,59,1.715,67,3.278,68,1.999,71,0.07,73,0.2,75,1.273,76,1.166,77,1.07,144,0.005,145,0.005,435,1.337,463,2.07,466,2.96,467,2.325,468,2.231,469,2.231,470,2.231,471,2.231,478,2.07,479,2.07,480,2.07,481,2.07,482,2.07,483,1.026,911,2.552,1251,3.075,1700,2.863,1702,4.136,1703,3.36,1704,5.478,1705,4.329,1706,3.36,1707,3.075,1708,4.443,1709,2.693,1710,3.36,1711,3.792,1712,3.792,1713,3.792]],["title/modules/SubscriptionsModule.html",[146,1.231,197,3.229]],["body/modules/SubscriptionsModule.html",[2,2.522,3,0.093,4,0.093,5,0.093,8,1.054,24,0.008,26,0.57,28,1.169,29,0.816,30,0.443,31,0.616,32,1.169,47,0.214,53,0.853,71,0.103,73,0.298,144,0.006,145,0.006,146,2.137,148,2.234,149,2.291,150,2.414,151,2.414,152,2.291,153,3.379,154,2.992,166,3.072,167,2.076,168,2.414,170,2.414,173,4.535,197,6.23,328,2.876,493,3.318,494,4.062,496,3.318,497,3.192,498,3.192,1702,5.96,1705,5.903,1706,4.996,1714,4.996,1715,4.996,1716,5.638,1717,5.638,1718,5.638,1719,5.638]],["title/injectables/SubscriptionsService.html",[216,0.833,1705,3.06]],["body/injectables/SubscriptionsService.html",[3,0.066,4,0.066,5,0.066,7,0.362,8,1.061,9,2.251,10,1.863,11,2.493,12,2.14,13,2.14,14,1.994,15,1.618,16,2.686,22,1.023,24,0.008,26,0.857,28,1.726,29,1.205,30,0.675,31,0.909,32,1.726,36,1.502,39,1.989,40,1.502,43,1.4,44,3.3,47,0.21,53,0.602,56,1.078,57,4.048,58,2.1,70,1.368,71,0.073,73,0.21,74,2.804,76,1.744,77,1.124,144,0.005,145,0.005,216,1.039,217,1.432,219,2.992,220,2.992,221,2.992,223,3.885,227,2.992,229,3.992,232,2.1,233,2.64,235,2.1,239,2.1,240,1.949,435,1.385,466,3.3,505,2.174,506,2.174,507,2.174,508,2.174,509,2.174,510,2.174,511,2.174,512,2.174,513,2.1,911,2.68,1249,2.829,1251,3.23,1700,3.007,1705,3.819,1707,3.23,1708,4.602,1709,2.829,1710,3.529,1720,3.529,1721,3.982,1722,3.982,1723,5.674,1724,3.982,1725,3.982]],["title/classes/Team.html",[73,0.24,1726,3.433]],["body/classes/Team.html",[3,0.099,4,0.099,5,0.099,7,0.545,24,0.008,26,0.755,30,0.638,31,0.928,47,0.192,55,3.576,56,1.624,70,2.061,71,0.149,73,0.317,79,3.472,81,1.558,134,2.061,144,0.006,145,0.006,391,1.864,439,1.099,443,4.143,445,4.282,446,4.199,454,3.163,455,3.163,457,3.163,1726,6.132,1727,4.53,1728,5.999,1729,5.999,1730,4.53,1731,4.866,1732,5.316]],["title/controllers/TeamsController.html",[0,1.674,1733,3.433]],["body/controllers/TeamsController.html",[0,1.384,1,3.837,2,1.32,3,0.062,4,0.062,5,0.062,7,0.341,8,1.018,9,2.115,10,1.787,11,2.053,12,2.053,13,2.053,14,1.913,15,1.527,16,2.6,17,3.889,18,4,19,4.194,20,4.067,21,3.838,22,1.157,23,2.058,24,0.008,25,1.857,26,0.753,28,1.543,29,1.077,30,0.585,31,0.813,32,1.543,33,3.025,34,1.981,36,1.417,37,2.127,39,1.925,40,1.417,41,2.127,43,1.32,44,2.779,45,2.127,47,0.221,53,0.568,54,3.699,56,1.017,59,1.699,67,3.264,68,1.981,71,0.069,73,0.198,75,1.262,76,1.155,77,1.061,144,0.005,145,0.005,435,1.329,463,2.051,466,2.95,467,2.304,468,2.211,469,2.211,470,2.211,471,2.211,478,2.051,479,2.051,480,2.051,481,2.051,482,2.051,483,1.017,747,2.051,914,2.529,1445,3.329,1730,2.837,1733,4.109,1734,3.329,1735,5.442,1736,4.307,1737,3.329,1738,3.047,1739,4.414,1740,2.669,1741,3.329,1742,3.329,1743,3.757,1744,3.757,1745,3.757]],["title/modules/TeamsModule.html",[146,1.231,1746,3.433]],["body/modules/TeamsModule.html",[2,2.522,3,0.093,4,0.093,5,0.093,8,1.054,24,0.008,26,0.57,28,1.169,29,0.816,30,0.443,31,0.616,32,1.169,47,0.214,53,0.853,71,0.103,73,0.298,144,0.006,145,0.006,146,2.137,148,2.234,149,2.291,150,2.414,151,2.414,152,2.291,153,3.379,154,2.992,166,3.072,167,2.076,168,2.414,170,2.414,173,4.535,328,2.876,493,3.318,494,4.062,496,3.318,497,3.192,498,3.192,1733,5.96,1736,5.903,1737,4.996,1746,6.622,1747,4.996,1748,4.996,1749,5.638,1750,5.638,1751,5.638,1752,5.638]],["title/injectables/TeamsService.html",[216,0.833,1736,3.06]],["body/injectables/TeamsService.html",[3,0.066,4,0.066,5,0.066,7,0.362,8,1.061,9,2.251,10,1.863,11,2.493,12,2.14,13,2.14,14,1.994,15,1.618,16,2.686,22,1.023,24,0.008,26,0.857,28,1.726,29,1.205,30,0.675,31,0.909,32,1.726,36,1.502,39,1.989,40,1.502,43,1.4,44,3.3,47,0.21,53,0.602,56,1.078,57,4.048,58,2.1,70,1.368,71,0.073,73,0.21,74,2.804,76,1.744,77,1.124,144,0.005,145,0.005,216,1.039,217,1.432,219,2.992,220,2.992,221,2.992,223,3.885,227,2.992,229,3.992,232,2.1,233,2.64,235,2.1,239,2.1,240,1.949,435,1.385,466,3.3,505,2.174,506,2.174,507,2.174,508,2.174,509,2.174,510,2.174,511,2.174,512,2.174,513,2.1,914,2.68,1726,3.007,1730,3.007,1736,3.819,1738,3.23,1739,4.602,1740,2.829,1741,3.529,1742,3.529,1753,3.529,1754,3.982,1755,3.982,1756,5.674,1757,3.982,1758,3.982]],["title/injectables/ThrottlerBehindProxyGuard.html",[206,3.433,216,0.833]],["body/injectables/ThrottlerBehindProxyGuard.html",[3,0.099,4,0.099,5,0.099,7,0.545,8,1.395,9,2.024,19,2.964,24,0.008,26,0.607,28,1.243,29,0.868,30,0.471,31,0.655,32,1.243,47,0.192,53,0.907,71,0.11,73,0.317,74,4.013,109,1.927,144,0.006,145,0.006,206,5.634,208,6.052,216,1.366,217,2.158,229,3.576,435,1.822,1759,6.612,1760,5.316,1761,8.121,1762,7.462,1763,7.462,1764,8.121,1765,5.999,1766,4.866,1767,5.999,1768,5.999,1769,5.999]],["title/modules/ThrottlerConfig.html",[146,1.231,164,3.229]],["body/modules/ThrottlerConfig.html",[3,0.101,4,0.101,5,0.101,24,0.008,47,0.194,53,0.923,71,0.112,73,0.322,144,0.006,145,0.006,146,2.216,148,2.419,149,2.481,150,2.614,151,2.614,152,2.481,153,2.614,154,3.413,164,6.637,166,3.229,167,2.249,168,2.614,170,2.614,172,4.836,258,5.41,1766,4.952,1770,5.41,1771,5.41,1772,6.106,1773,6.106,1774,6.106,1775,6.106,1776,6.106,1777,6.106]],["title/injectables/Token.html",[216,0.833,312,2.319]],["body/injectables/Token.html",[3,0.056,4,0.056,5,0.056,7,0.31,8,0.947,22,1.088,24,0.008,26,0.758,28,1.554,29,1.085,30,0.67,31,0.819,32,1.554,47,0.172,53,0.516,71,0.063,73,0.18,81,2.017,88,3.536,103,4.051,104,3.33,109,2.298,115,3.309,116,3.86,144,0.004,145,0.004,182,1.586,183,1.685,216,0.928,217,1.226,240,2.8,309,2.574,312,4.294,315,1.634,360,3.021,363,6.645,404,3.063,446,1.685,539,1.797,866,3.021,921,2.765,946,2.091,1082,5.431,1086,5.444,1108,5.431,1113,2.765,1466,4.49,1778,3.021,1779,5.067,1780,5.067,1781,5.067,1782,5.067,1783,5.067,1784,5.067,1785,5.067,1786,3.409,1787,5.067,1788,3.409,1789,5.067,1790,7.499,1791,3.409,1792,5.067,1793,3.409,1794,3.409,1795,5.067,1796,3.409,1797,5.067,1798,5.933,1799,3.409,1800,3.409,1801,3.409,1802,3.409,1803,3.021,1804,5.067,1805,5.067,1806,3.409,1807,6.048,1808,5.067,1809,3.409,1810,3.409,1811,3.409,1812,3.409,1813,3.409,1814,3.021,1815,4.49,1816,3.409,1817,3.409,1818,3.409,1819,5.067,1820,3.409,1821,5.067,1822,3.409,1823,5.067,1824,3.409]],["title/classes/UpdateAuthClientDto.html",[73,0.24,1825,3.687]],["body/classes/UpdateAuthClientDto.html",[3,0.111,4,0.111,5,0.111,24,0.008,47,0.206,71,0.124,73,0.356,144,0.007,145,0.007,366,5.137,435,1.956,439,1.235,483,1.826,572,4.791,616,5.093,618,4.791,1825,6.499,1826,5.977,1827,8.013,1828,3.441,1829,6.745]],["title/classes/UpdateBookerEmployeeDto.html",[73,0.24,475,3.229]],["body/classes/UpdateBookerEmployeeDto.html",[3,0.109,4,0.109,5,0.109,24,0.008,47,0.204,71,0.121,73,0.349,144,0.007,145,0.007,343,4.452,435,1.934,439,1.211,440,3.893,464,5.331,472,5.435,473,4.452,474,4.241,475,5.626,476,4.995,483,1.791,634,4.699,1828,4.324]],["title/classes/UpdateClientDto.html",[73,0.24,567,3.229]],["body/classes/UpdateClientDto.html",[3,0.112,4,0.112,5,0.112,24,0.008,47,0.207,71,0.125,73,0.359,144,0.007,145,0.007,435,1.964,439,1.243,483,1.838,548,4.353,567,5.714,571,5.126,572,4.823,618,4.823,1828,3.463,1830,6.016,1831,8.044]],["title/classes/UpdateEmployeeDto.html",[73,0.24,989,3.229]],["body/classes/UpdateEmployeeDto.html",[3,0.112,4,0.112,5,0.112,24,0.008,47,0.207,71,0.125,73,0.359,144,0.007,145,0.007,435,1.964,439,1.243,474,4.353,483,1.838,634,4.823,685,4.57,988,5.507,989,5.714,1828,3.463,1832,6.016,1833,8.044]],["title/classes/UpdateEstablishmentDto.html",[73,0.24,1032,3.229]],["body/classes/UpdateEstablishmentDto.html",[3,0.111,4,0.111,5,0.111,24,0.008,47,0.205,71,0.123,73,0.354,144,0.007,145,0.007,435,1.949,439,1.227,483,1.814,693,5.737,695,5.435,1030,5.435,1031,5.435,1032,5.669,1828,4.348,1834,5.938]],["title/classes/UpdateLogDto.html",[73,0.24,1835,3.687]],["body/classes/UpdateLogDto.html",[3,0.112,4,0.112,5,0.112,24,0.008,47,0.207,71,0.125,73,0.359,144,0.007,145,0.007,435,1.964,439,1.243,483,1.838,744,4.823,746,5.507,1169,6.016,1170,6.016,1828,3.463,1835,6.524,1836,6.016,1837,8.044]],["title/classes/UpdateOrganizationDto.html",[73,0.24,1307,3.229]],["body/classes/UpdateOrganizationDto.html",[3,0.112,4,0.112,5,0.112,24,0.008,47,0.207,71,0.125,73,0.359,144,0.007,145,0.007,435,1.964,439,1.243,483,1.838,624,5.126,628,4.353,631,5.126,632,5.126,1307,5.714,1828,3.463,1838,6.016,1839,8.044]],["title/classes/UpdatePlanDto.html",[73,0.24,1390,3.229]],["body/classes/UpdatePlanDto.html",[3,0.112,4,0.112,5,0.112,24,0.008,47,0.207,71,0.125,73,0.359,144,0.007,145,0.007,435,1.964,439,1.243,483,1.838,811,4.57,813,5.507,1388,5.507,1389,5.507,1390,5.714,1828,3.463,1840,6.016,1841,8.044]],["title/classes/UpdatePlanPriceDto.html",[73,0.24,1359,3.229]],["body/classes/UpdatePlanPriceDto.html",[3,0.111,4,0.111,5,0.111,24,0.008,47,0.205,71,0.123,73,0.354,144,0.007,145,0.007,435,1.949,439,1.227,483,1.814,801,4.208,856,4.51,857,3.943,858,4.76,859,5.435,1356,5.06,1358,5.435,1359,5.669,1360,5.06,1828,3.418,1842,7.982]],["title/classes/UpdatePromoCodeDto.html",[73,0.24,1442,3.229]],["body/classes/UpdatePromoCodeDto.html",[3,0.111,4,0.111,5,0.111,24,0.008,47,0.205,71,0.123,73,0.354,144,0.007,145,0.007,435,1.949,439,1.227,483,1.814,906,4.51,907,3.943,908,4.76,909,5.669,910,5.435,1439,5.06,1441,5.435,1442,5.669,1443,5.06,1828,3.418,1843,7.982]],["title/classes/UpdateSubscriptionDto.html",[73,0.24,1709,3.229]],["body/classes/UpdateSubscriptionDto.html",[3,0.112,4,0.112,5,0.112,24,0.008,47,0.207,71,0.125,73,0.359,144,0.007,145,0.007,435,1.964,439,1.243,483,1.838,911,4.57,913,5.507,1707,5.507,1708,5.507,1709,5.714,1828,3.463,1844,6.016,1845,8.044]],["title/classes/UpdateTeamDto.html",[73,0.24,1740,3.229]],["body/classes/UpdateTeamDto.html",[3,0.112,4,0.112,5,0.112,24,0.008,47,0.207,71,0.125,73,0.359,144,0.007,145,0.007,435,1.964,439,1.243,483,1.838,914,4.57,916,5.507,1738,5.507,1739,5.507,1740,5.714,1828,3.463,1846,6.016,1847,8.044]],["title/classes/UpdateUserDto.html",[73,0.24,1848,3.229]],["body/classes/UpdateUserDto.html",[3,0.112,4,0.112,5,0.112,24,0.008,47,0.207,71,0.125,73,0.359,144,0.007,145,0.007,435,1.964,439,1.243,483,1.838,620,4.164,621,4.823,622,4.823,918,5.126,1828,3.463,1848,5.714,1849,6.016,1850,8.044]],["title/classes/User.html",[73,0.24,92,1.895]],["body/classes/User.html",[3,0.069,4,0.069,5,0.069,7,0.379,22,1.067,23,2.143,24,0.008,26,0.835,30,0.682,31,0.641,47,0.189,55,2.812,56,1.13,70,1.434,71,0.124,73,0.221,79,2.731,81,1.524,92,2.829,134,3.067,144,0.005,145,0.005,225,4.76,285,4.971,286,4.168,287,2.966,391,1.347,400,3.157,427,4.017,439,0.765,443,3.461,445,3.577,446,3.637,448,3.992,452,4.953,454,4.239,455,2.202,457,2.202,458,3.955,525,4.513,539,3.88,579,4.566,692,4.513,698,4.566,877,5.557,919,5.503,930,5.503,937,3.7,1127,5.2,1139,2.811,1252,3.153,1851,3.153,1852,4.176,1853,4.176,1854,5.868,1855,4.176,1856,5.868,1857,4.176,1858,4.176,1859,4.176,1860,4.176,1861,4.176,1862,4.176,1863,3.7,1864,3.7,1865,7.359,1866,3.7,1867,4.176,1868,4.176,1869,4.176,1870,4.176]],["title/controllers/UsersController.html",[0,1.674,1871,3.433]],["body/controllers/UsersController.html",[0,0.896,1,3.291,2,0.855,3,0.04,4,0.04,5,0.04,7,0.221,8,0.73,9,2.042,10,2.01,11,1.843,12,1.843,13,1.843,14,2.152,17,4.073,18,3.855,19,4.363,20,4.008,21,3.992,22,1.131,23,1.692,24,0.008,25,1.928,26,0.619,28,1.269,29,0.886,30,0.481,31,0.669,32,1.269,33,2.488,34,1.282,36,0.917,39,2.216,40,0.917,43,0.855,47,0.202,48,1.727,49,2.997,50,3.69,51,1.282,53,0.368,54,2.948,56,0.658,59,1.1,67,2.602,68,1.282,71,0.045,73,0.128,75,0.817,76,0.748,77,0.686,81,0.631,92,3.568,99,1.431,104,1.816,106,4.222,109,2.365,136,1.972,137,3.963,139,1.972,141,1.972,144,0.003,145,0.003,268,1.836,281,2.766,282,1.637,285,1.559,286,1.727,287,1.727,397,3.008,435,0.953,463,1.327,466,2.426,478,1.327,479,1.327,480,3.568,481,4.214,482,2.13,483,0.658,549,4.966,551,4.399,552,1.972,553,3.165,554,1.972,559,2.155,560,4.33,563,2.155,564,2.155,568,2.155,578,4.966,579,5.086,582,2.155,583,2.155,584,1.727,586,2.155,587,1.836,588,2.155,620,4.211,621,1.727,622,2.771,919,3.165,1139,1.637,1140,1.727,1848,5.07,1863,2.155,1871,2.946,1872,2.155,1873,6.536,1874,2.432,1875,2.432,1876,3.902,1877,3.902,1878,2.432,1879,2.432,1880,7.138,1881,2.432,1882,7.138,1883,2.432,1884,2.432,1885,2.432,1886,2.432,1887,2.432,1888,2.432,1889,2.432,1890,2.155,1891,2.432,1892,2.432,1893,2.432,1894,2.432,1895,2.432,1896,2.432]],["title/modules/UsersModule.html",[146,1.231,165,2.915]],["body/modules/UsersModule.html",[2,2.544,3,0.094,4,0.094,5,0.094,24,0.008,47,0.215,53,0.864,71,0.105,73,0.302,144,0.006,145,0.006,146,2.15,148,2.265,149,2.323,150,2.447,151,2.447,152,2.323,153,3.401,154,3.312,162,5.924,165,6.034,166,3.099,167,2.105,168,2.447,170,3.099,179,5.065,281,4.983,282,3.847,1871,5.998,1897,5.065,1898,5.716,1899,5.065,1900,5.716,1901,5.716,1902,5.716]],["title/injectables/UsersService.html",[216,0.833,281,2.574]],["body/injectables/UsersService.html",[3,0.052,4,0.052,5,0.052,7,0.285,8,0.89,9,2.249,10,1.562,11,2.169,12,2.603,13,1.794,14,1.672,15,1.274,16,2.336,22,1.094,24,0.008,26,0.835,28,1.683,29,1.175,30,0.658,31,0.887,32,1.683,33,1.274,36,1.182,39,1.73,40,1.182,43,1.102,44,3.082,47,0.205,53,0.474,56,0.848,57,3.841,58,1.653,70,1.077,71,0.057,73,0.166,74,2.351,76,1.463,77,0.885,81,1.493,85,2.222,88,2.351,92,1.984,109,1.847,115,2.351,116,2.676,144,0.004,145,0.004,165,2.01,216,0.871,217,1.127,219,2.508,220,2.508,221,2.508,223,3.52,227,2.508,229,3.956,232,1.653,233,2.214,235,1.653,239,1.653,240,1.634,251,5.688,281,3.255,400,3.212,435,1.161,466,3.082,505,1.711,506,1.711,507,1.711,508,1.711,509,1.711,510,1.711,511,1.711,512,1.711,513,1.653,620,1.922,621,2.226,622,4.084,1108,2.542,1139,2.11,1140,2.226,1500,2.542,1848,3.379,1890,4.216,1903,2.777,1904,5.75,1905,4.757,1906,3.134,1907,3.134,1908,4.757,1909,4.757,1910,3.134,1911,4.757,1912,3.134,1913,4.757,1914,3.134,1915,3.134,1916,3.134,1917,3.134,1918,3.134,1919,5.75,1920,3.134,1921,5.75,1922,3.134,1923,3.134]],["title/coverage.html",[1924,5.048]],["body/coverage.html",[0,2.714,1,0.874,5,0.03,6,1.617,24,0.008,30,0.143,57,0.849,60,1.119,62,1.228,67,0.849,73,0.484,92,0.761,104,0.849,130,6.411,144,0.003,145,0.003,152,0.741,182,0.849,206,1.378,208,1.48,216,1.536,218,1.617,267,1.48,268,1.378,270,1.617,281,1.033,288,1.48,290,1.48,299,1.378,302,1.48,312,0.931,328,0.931,329,1.617,332,1.119,333,1.17,334,1.17,344,2.187,366,2.562,378,1.074,379,0.996,380,0.931,382,1.617,387,2.585,388,1.119,390,3.647,401,0.803,404,0.781,406,1.119,420,1.119,426,1.119,431,1.119,438,1.296,440,3.347,441,2.073,442,2.325,459,1.48,461,1.378,462,1.617,464,2.073,472,1.17,473,1.228,475,1.296,476,1.378,501,1.617,516,2.325,542,1.378,544,1.378,545,1.617,548,1.17,567,1.296,606,1.617,616,1.378,617,2.498,618,3.334,620,1.119,623,1.48,624,3.017,625,1.17,628,1.17,634,3.334,637,1.228,656,1.617,674,1.378,676,1.48,685,1.228,686,1.617,693,1.228,694,1.617,695,2.498,701,1.296,744,1.296,745,1.617,746,2.498,747,0.996,775,1.617,801,2.107,811,1.228,812,1.617,813,2.498,856,1.228,857,3.347,858,1.296,859,2.498,891,1.617,906,1.228,907,3.347,908,1.296,909,2.187,910,2.498,911,1.228,912,1.617,913,2.498,914,1.228,915,1.617,916,2.498,917,1.617,918,3.017,935,1.296,942,1.48,943,2.498,944,1.617,955,1.617,959,1.48,960,1.617,961,1.617,975,2.325,984,1.48,986,1.378,987,1.617,989,1.296,1002,1.617,1008,2.325,1023,1.48,1025,1.378,1026,1.617,1028,1.228,1032,1.296,1045,1.617,1051,1.48,1052,1.617,1057,1.48,1058,1.617,1059,2.498,1063,1.48,1064,1.617,1084,1.48,1085,1.617,1119,2.325,1131,1.378,1133,2.498,1137,1.378,1153,1.48,1154,1.617,1162,1.617,1171,1.378,1211,1.378,1212,2.498,1215,1.378,1244,1.48,1247,1.378,1249,1.296,1250,1.378,1252,1.378,1264,1.48,1265,1.617,1269,1.296,1270,1.617,1286,2.325,1300,1.48,1302,1.378,1303,1.617,1305,1.228,1307,1.296,1320,1.617,1326,2.325,1336,1.378,1337,2.073,1338,2.325,1349,1.48,1351,1.378,1352,2.325,1353,1.617,1355,1.228,1359,1.296,1360,1.378,1374,1.617,1380,1.378,1381,1.617,1386,1.228,1390,1.296,1392,1.378,1393,2.187,1395,1.228,1396,2.187,1415,1.296,1417,1.296,1420,1.617,1426,1.378,1427,2.073,1428,2.325,1432,1.48,1434,1.378,1435,2.325,1436,1.617,1438,1.228,1442,1.296,1443,1.378,1457,1.617,1463,1.48,1464,1.617,1465,1.617,1469,1.48,1470,1.617,1475,2.498,1479,1.378,1515,1.617,1569,1.617,1617,1.378,1618,2.498,1619,1.617,1622,1.48,1623,1.617,1653,2.562,1654,3.017,1655,1.617,1656,1.617,1657,1.617,1658,1.617,1659,1.617,1670,1.617,1686,1.617,1688,1.617,1697,2.325,1702,1.378,1703,1.617,1705,1.228,1709,1.296,1720,1.617,1726,1.378,1727,2.325,1731,1.48,1733,1.378,1734,1.617,1736,1.228,1740,1.296,1753,1.617,1759,1.617,1760,1.617,1778,1.617,1825,1.48,1826,1.617,1830,1.617,1832,1.617,1834,1.617,1835,1.48,1836,1.617,1838,1.617,1840,1.617,1844,1.617,1846,1.617,1848,1.296,1849,1.617,1851,2.325,1866,1.617,1871,1.378,1872,1.617,1903,1.617,1924,1.48,1925,1.825,1926,1.825,1927,1.825,1928,7.926,1929,7.626,1930,1.617,1931,8.155,1932,8.93,1933,1.617,1934,2.729,1935,2.729,1936,1.617,1937,2.729,1938,7.626,1939,3.08,1940,7.044,1941,5.244,1942,4.694,1943,1.825,1944,1.825,1945,1.825,1946,1.617,1947,1.617,1948,1.825,1949,1.825,1950,1.825,1951,3.08,1952,3.08,1953,3.08,1954,3.08,1955,1.825,1956,3.08,1957,1.825,1958,1.825]],["title/dependencies.html",[149,2.224,1959,3.356]],["body/dependencies.html",[24,0.008,53,0.813,56,1.455,59,3.146,70,1.846,73,0.367,102,3.295,144,0.006,145,0.006,149,2.183,178,4.057,205,4.057,483,1.455,633,3.617,650,2.24,800,3.295,1097,4.761,1115,4.761,1190,4.057,1191,4.057,1539,4.761,1766,4.358,1803,4.761,1960,5.373,1961,5.373,1962,5.373,1963,7.716,1964,5.373,1965,5.373,1966,5.373,1967,5.373,1968,5.373,1969,5.373,1970,6.958,1971,6.958,1972,6.958,1973,5.373,1974,5.373,1975,5.373,1976,5.373,1977,6.958,1978,5.373,1979,5.373,1980,5.373,1981,5.373,1982,5.373,1983,5.373,1984,5.373,1985,5.373,1986,5.373,1987,5.373,1988,5.373,1989,5.373,1990,5.373,1991,5.373,1992,5.373,1993,5.373,1994,5.373,1995,5.373,1996,5.373,1997,5.373,1998,5.373,1999,5.373,2000,5.373,2001,5.373,2002,5.373,2003,5.373,2004,5.373,2005,5.373]],["title/miscellaneous/enumerations.html",[2006,2.322,2007,4.85]],["body/miscellaneous/enumerations.html",[3,0.088,7,0.252,24,0.008,64,2.778,88,2.141,111,1.515,116,2.48,144,0.004,145,0.004,285,2.778,309,3.271,401,1.906,747,1.515,814,2.778,834,3.514,835,3.839,854,3.514,878,3.514,881,3.839,930,3.514,946,5.874,1487,2.251,1798,3.839,1814,3.839,1815,3.839,2006,1.702,2007,2.459,2008,2.776,2009,2.776,2010,2.776,2011,4.332,2012,2.776,2013,4.332,2014,4.332,2015,4.332,2016,4.332,2017,2.776,2018,4.332,2019,4.332,2020,4.332,2021,4.332,2022,4.332,2023,4.332,2024,4.332,2025,4.332,2026,4.332,2027,4.332,2028,4.332,2029,4.332,2030,4.332,2031,4.332,2032,4.332,2033,4.332,2034,4.332,2035,4.332,2036,4.332,2037,4.332,2038,4.332,2039,4.332,2040,4.332,2041,4.332,2042,4.332,2043,4.332,2044,4.332,2045,4.332,2046,4.332,2047,4.332,2048,4.332,2049,4.332,2050,4.332,2051,4.332,2052,4.332,2053,4.332,2054,4.332,2055,4.332,2056,4.332,2057,4.332,2058,4.332,2059,4.332,2060,4.332,2061,4.332,2062,4.332,2063,4.332,2064,4.332,2065,4.332,2066,4.332,2067,2.776,2068,4.332,2069,4.332,2070,2.776,2071,2.776,2072,4.332,2073,2.776,2074,2.776,2075,6.021,2076,4.332,2077,2.776,2078,4.332,2079,2.776,2080,2.776,2081,2.776,2082,2.776,2083,5.329,2084,2.776,2085,2.776,2086,2.776,2087,2.776,2088,5.329,2089,4.332,2090,4.332,2091,2.776,2092,2.776,2093,2.776,2094,2.776,2095,2.776,2096,5.329,2097,2.776,2098,2.776,2099,2.776,2100,4.332,2101,5.329,2102,2.776,2103,2.776,2104,4.332,2105,4.332,2106,5.329,2107,2.776,2108,5.329,2109,2.776,2110,2.776,2111,5.329,2112,2.776,2113,2.776,2114,2.776,2115,2.776,2116,4.332,2117,2.776,2118,2.776,2119,2.776,2120,5.329,2121,2.776,2122,2.776,2123,2.776,2124,2.776,2125,2.776,2126,2.776,2127,2.776,2128,2.776,2129,2.776,2130,2.776,2131,4.332,2132,4.332,2133,4.332,2134,4.332,2135,4.332,2136,4.332,2137,2.776,2138,2.776,2139,4.332,2140,4.332,2141,4.332,2142,4.332,2143,4.332,2144,4.332,2145,4.332,2146,4.332,2147,4.332,2148,4.332,2149,4.332]],["title/miscellaneous/functions.html",[2006,2.322,2150,4.85]],["body/miscellaneous/functions.html",[7,0.656,24,0.007,144,0.007,145,0.007,152,3.572,1947,6.396,2006,4.426,2150,6.396,2151,7.218]],["title/index.html",[7,0.344,2152,3.787,2153,3.787]],["body/index.html",[4,0.091,24,0.008,144,0.006,145,0.006,397,1.944,612,4.902,613,6.282,638,4.798,699,4.487,852,4.487,865,4.902,1192,4.487,1279,4.902,1924,4.487,2154,5.532,2155,5.532,2156,7.089,2157,5.532,2158,5.532,2159,5.532,2160,5.532,2161,5.532,2162,5.532,2163,7.823,2164,5.532,2165,5.532,2166,5.532,2167,5.532,2168,8.874,2169,5.532,2170,5.532,2171,5.532,2172,8.727,2173,5.532,2174,7.089,2175,5.532,2176,5.532,2177,5.532,2178,7.089,2179,5.532,2180,5.532,2181,5.532,2182,7.089,2183,7.089,2184,5.532,2185,5.532,2186,5.532,2187,5.532,2188,5.532,2189,5.532,2190,5.532,2191,5.532,2192,5.532,2193,5.532,2194,5.532,2195,5.532,2196,5.532,2197,4.902,2198,5.532,2199,5.532,2200,5.532,2201,5.532,2202,5.532,2203,4.902]],["title/interfaces/logProps.html",[387,1.847,1137,3.433]],["body/interfaces/logProps.html",[3,0.075,4,0.075,5,0.075,7,0.415,9,1.137,10,1.499,21,3.621,22,1.129,24,0.008,30,0.665,31,0.941,47,0.206,64,4.902,65,3.072,66,3.072,67,2.124,71,0.084,73,0.241,75,1.533,85,1.764,88,2.255,92,3.188,94,5.773,96,5.389,98,4.37,101,4.711,102,4.91,115,2.255,118,3.446,144,0.005,145,0.005,240,2.443,369,2.491,378,4.185,386,3.242,387,1.855,389,2.584,391,1.433,395,2.584,404,1.954,415,2.124,444,2.584,538,5.146,574,3.242,747,2.491,983,5.146,991,3.446,1133,3.702,1136,4.044,1137,5.37,1139,5.146,1140,3.242,1141,4.044,1142,4.044,1143,6.775,1144,4.044,1145,4.044,1146,4.044,1147,4.044,1148,4.044,1149,5.53,1150,4.044,1151,5.53,1152,3.702]],["title/modules.html",[148,2.466]],["body/modules.html",[24,0.006,144,0.006,145,0.006,147,4.177,148,2.192,158,3.929,159,3.929,160,3.929,161,3.723,162,3.723,163,3.929,164,3.929,165,3.547,195,3.929,197,3.929,488,4.177,852,7.669,995,4.177,1038,4.177,1109,4.177,1313,4.177,1366,4.177,1450,4.177,1746,4.177,2204,9.455,2205,9.455,2206,9.476,2207,5.532,2208,5.532]],["title/overview.html",[2209,5.515]],["body/overview.html",[2,1.204,24,0.008,144,0.004,145,0.004,146,0.927,147,6.887,148,1.357,149,1.392,150,1.467,151,1.467,152,1.392,153,1.467,154,1.428,155,3.036,156,3.036,157,3.036,158,6.228,159,5.899,160,5.985,161,5.377,162,4.518,163,5.336,164,5.675,165,5.469,166,2.177,167,1.262,168,1.467,195,5.797,197,4.768,217,1.232,267,2.779,281,3.8,332,4.116,333,3.889,334,3.889,354,2.306,375,3.036,377,3.036,378,4.701,379,3.664,380,3.424,389,1.94,439,0.627,488,6.163,489,3.036,490,3.036,491,3.036,598,3.036,599,3.036,995,5.068,996,3.036,997,3.036,1028,4.083,1038,5.068,1039,3.036,1040,3.036,1109,6.163,1110,3.036,1111,3.036,1112,3.036,1113,4.92,1158,3.036,1159,3.036,1305,4.083,1313,5.068,1314,3.036,1315,3.036,1355,4.083,1366,6.163,1367,3.036,1368,3.036,1369,3.036,1386,4.083,1395,4.083,1409,3.036,1410,3.036,1411,3.036,1438,4.083,1450,5.068,1451,3.036,1452,3.036,1604,3.036,1641,3.036,1642,3.036,1643,3.036,1644,5.948,1705,4.083,1714,3.036,1715,3.036,1736,4.083,1746,5.068,1747,3.036,1748,3.036,1770,3.036,1771,3.036,1897,3.036,1899,3.036,2209,3.036,2210,3.426,2211,3.426,2212,3.426,2213,3.426]],["title/properties.html",[391,1.257,1959,3.356]],["body/properties.html",[24,0.008,144,0.007,145,0.007,391,1.64,397,2.51,2197,6.329,2203,6.329,2214,7.143,2215,7.143,2216,7.143]],["title/miscellaneous/typealiases.html",[2006,2.322,2217,5.473]],["body/miscellaneous/typealiases.html",[7,0.545,24,0.006,30,0.471,144,0.006,145,0.006,440,3.53,441,4.038,442,5.634,456,5.634,516,4.53,538,5.022,857,3.53,907,3.53,975,4.53,983,5.022,1008,4.53,1022,5.634,1119,4.53,1130,6.052,1139,5.022,1286,4.53,1299,5.634,1326,4.53,1334,5.634,1337,4.038,1338,5.634,1348,5.634,1427,4.038,1428,5.634,1431,5.634,1663,5.316,1668,6.612,1697,4.53,1700,5.634,1727,4.53,1730,5.634,1851,4.53,2006,3.679,2218,5.999,2219,5.316,2220,5.316,2221,5.316,2222,5.316,2223,5.999,2224,5.316,2225,5.316,2226,5.316,2227,5.316,2228,5.316,2229,5.316,2230,5.316,2231,5.316,2232,5.999]],["title/miscellaneous/variables.html",[2006,2.322,2233,4.85]],["body/miscellaneous/variables.html",[7,0.362,22,0.855,24,0.008,30,0.622,104,3.079,134,2.273,144,0.005,145,0.005,182,2.644,240,2.273,285,2.558,288,4.609,290,4.609,299,4.997,302,6.182,400,2.644,404,2.432,407,2.558,427,2.178,440,2.348,441,2.685,442,4.29,459,4.609,460,3.535,516,3.013,539,4.861,542,4.29,543,3.535,698,2.685,857,2.348,907,2.348,935,4.036,946,5.654,975,3.013,984,4.609,985,3.535,1008,3.013,1023,4.609,1024,3.535,1119,3.013,1131,4.29,1132,3.535,1215,4.29,1247,4.29,1250,4.29,1252,4.29,1286,3.013,1300,4.609,1301,3.535,1326,3.013,1335,3.535,1337,2.685,1338,4.29,1349,4.609,1350,3.535,1427,2.685,1428,4.29,1432,4.609,1433,3.535,1697,3.013,1701,3.535,1727,3.013,1731,4.609,1732,3.535,1851,3.013,1864,3.535,1930,3.535,1933,3.535,1934,3.535,1935,3.535,1936,5.035,1937,3.535,1946,3.535,2006,2.447,2219,3.535,2220,3.535,2221,3.535,2222,3.535,2224,3.535,2225,3.535,2226,3.535,2227,3.535,2228,3.535,2229,3.535,2230,3.535,2231,3.535,2233,3.535,2234,3.99,2235,5.682,2236,5.682,2237,3.99,2238,5.682,2239,3.99,2240,3.99,2241,3.99,2242,3.99,2243,3.99,2244,3.99,2245,3.99,2246,5.682,2247,3.99,2248,3.99,2249,3.99,2250,3.99,2251,3.99,2252,6.618,2253,5.682,2254,3.99,2255,3.99,2256,3.99,2257,3.99,2258,3.99]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"interfaces/BaseProps.html":{},"classes/BookerEmployee.html":{},"controllers/BookerEmployeesController.html":{},"modules/BookerEmployeesModule.html":{},"injectables/BookerEmployeesService.html":{},"classes/Client.html":{},"controllers/ClientsController.html":{},"modules/ClientsModule.html":{},"injectables/ClientsService.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"classes/CreateAuthClientDto.html":{},"classes/CreateAuthOrganizationDto.html":{},"classes/CreateBookerEmployeeDto.html":{},"classes/CreateClientDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEstablishmentDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreatePlanPriceDto.html":{},"classes/CreatePromoCodeDto.html":{},"classes/CreateSubscriptionDto.html":{},"classes/CreateTeamDto.html":{},"classes/CreateUserDto.html":{},"classes/CustomFieldDto.html":{},"classes/CustomFieldValueDto.html":{},"injectables/CustomValidationPipe.html":{},"classes/Employee.html":{},"controllers/EmployeesController.html":{},"modules/EmployeesModule.html":{},"injectables/EmployeesService.html":{},"classes/Establishment.html":{},"controllers/EstablishmentsController.html":{},"modules/EstablishmentsModule.html":{},"injectables/EstablishmentsService.html":{},"classes/FlagDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/GlobalExceptionFilter.html":{},"classes/Hash.html":{},"interfaces/InitPasswordProps.html":{},"modules/JwtModule.html":{},"classes/Log.html":{},"classes/LogHelper.html":{},"classes/LoginUserDto.html":{},"modules/LogsModule.html":{},"injectables/LogsService.html":{},"injectables/MailHelper.html":{},"modules/MailModule.html":{},"interfaces/MailProps.html":{},"injectables/MailService.html":{},"modules/MongooseConfig.html":{},"classes/NotificationHelper.html":{},"classes/NumberHelper.html":{},"classes/Organization.html":{},"controllers/OrganizationsController.html":{},"modules/OrganizationsModule.html":{},"injectables/OrganizationsService.html":{},"classes/Plan.html":{},"classes/PlanPrice.html":{},"controllers/PlanPricesController.html":{},"modules/PlanPricesModule.html":{},"injectables/PlanPricesService.html":{},"controllers/PlansController.html":{},"modules/PlansModule.html":{},"injectables/PlansService.html":{},"classes/PromoCode.html":{},"controllers/PromoCodesController.html":{},"modules/PromoCodesModule.html":{},"injectables/PromoCodesService.html":{},"classes/RefreshTokenDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/ResetPasswordProps.html":{},"classes/Responses.html":{},"interfaces/ResponsesProps.html":{},"classes/SecurityHelper.html":{},"classes/StringHelper.html":{},"classes/StripeCustomerProps.html":{},"injectables/StripeCustomerService.html":{},"modules/StripeModule.html":{},"injectables/StripePlanService.html":{},"injectables/StripePlanService-1.html":{},"injectables/StripePlanService-2.html":{},"classes/StripePriceProps.html":{},"injectables/StripePriceService.html":{},"classes/StripeProductProps.html":{},"injectables/StripeProductService.html":{},"classes/Subscription.html":{},"controllers/SubscriptionsController.html":{},"modules/SubscriptionsModule.html":{},"injectables/SubscriptionsService.html":{},"classes/Team.html":{},"controllers/TeamsController.html":{},"modules/TeamsModule.html":{},"injectables/TeamsService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"modules/ThrottlerConfig.html":{},"injectables/Token.html":{},"classes/UpdateAuthClientDto.html":{},"classes/UpdateBookerEmployeeDto.html":{},"classes/UpdateClientDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEstablishmentDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UpdatePlanDto.html":{},"classes/UpdatePlanPriceDto.html":{},"classes/UpdatePromoCodeDto.html":{},"classes/UpdateSubscriptionDto.html":{},"classes/UpdateTeamDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"interfaces/logProps.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":130,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthMiddleware.html":{},"controllers/ClientsController.html":{},"classes/CreatePlanPriceDto.html":{},"classes/SecurityHelper.html":{},"coverage.html":{}}}],["0.0.1",{"_index":2215,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":1983,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":2001,"title":{},"body":{"dependencies.html":{}}}],["0.40.3",{"_index":1979,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":1610,"title":{},"body":{"classes/StringHelper.html":{}}}],["0.5.1",{"_index":1982,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1932,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1929,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1952,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1954,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1953,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1955,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1940,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1938,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1951,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1939,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1928,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1941,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1942,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1956,"title":{},"body":{"coverage.html":{}}}],["0123456789",{"_index":1601,"title":{},"body":{"classes/StringHelper.html":{}}}],["06",{"_index":1651,"title":{},"body":{"modules/StripeModule.html":{}}}],["08",{"_index":872,"title":{},"body":{"classes/CreatePlanPriceDto.html":{}}}],["1",{"_index":354,"title":{"injectables/StripePlanService-1.html":{}},"body":{"injectables/AuthMiddleware.html":{},"classes/CreatePlanDto.html":{},"classes/CreatePlanPriceDto.html":{},"classes/StringHelper.html":{},"overview.html":{}}}],["1.11.0",{"_index":1986,"title":{},"body":{"dependencies.html":{}}}],["1/2",{"_index":1943,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1777,"title":{},"body":{"modules/ThrottlerConfig.html":{}}}],["10.0.0",{"_index":1963,"title":{},"body":{"dependencies.html":{}}}],["10.0.10",{"_index":1969,"title":{},"body":{"dependencies.html":{}}}],["10.1.7",{"_index":1995,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":1965,"title":{},"body":{"dependencies.html":{}}}],["10.3.10",{"_index":1972,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":807,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["100'})@isoptional()@isstring",{"_index":782,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["1000",{"_index":866,"title":{},"body":{"classes/CreatePlanPriceDto.html":{},"injectables/Token.html":{}}}],["123",{"_index":778,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["123.45.6.7",{"_index":772,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["123.45.6.7'})@isoptional()@isstring",{"_index":756,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["12345",{"_index":773,"title":{},"body":{"classes/CreateLogDto.html":{},"classes/CreateOrganizationDto.html":{}}}],["12345'})@isoptional()@isstring",{"_index":769,"title":{},"body":{"classes/CreateLogDto.html":{},"classes/CreateOrganizationDto.html":{}}}],["1234567890",{"_index":737,"title":{},"body":{"classes/CreateEstablishmentDto.html":{}}}],["1234567890'})@isoptional()@isstring",{"_index":730,"title":{},"body":{"classes/CreateEstablishmentDto.html":{}}}],["13",{"_index":2211,"title":{},"body":{"overview.html":{}}}],["14",{"_index":855,"title":{},"body":{"classes/CreatePlanDto.html":{},"classes/CreatePlanPriceDto.html":{}}}],["14})@isnotempty()@isnumber",{"_index":849,"title":{},"body":{"classes/CreatePlanDto.html":{}}}],["15m",{"_index":1810,"title":{},"body":{"injectables/Token.html":{}}}],["16.4.5",{"_index":1988,"title":{},"body":{"dependencies.html":{}}}],["16.8.0",{"_index":2005,"title":{},"body":{"dependencies.html":{}}}],["19",{"_index":2210,"title":{},"body":{"overview.html":{}}}],["192.168.1.1",{"_index":766,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["1d",{"_index":1813,"title":{},"body":{"injectables/Token.html":{}}}],["1h",{"_index":1792,"title":{},"body":{"injectables/Token.html":{}}}],["1})@isnotempty()@isnumber",{"_index":840,"title":{},"body":{"classes/CreatePlanDto.html":{}}}],["2",{"_index":738,"title":{"injectables/StripePlanService-2.html":{}},"body":{"classes/CreateEstablishmentDto.html":{},"classes/Responses.html":{},"interfaces/ResponsesProps.html":{}}}],["2'})@isoptional()@isstring",{"_index":708,"title":{},"body":{"classes/CreateEstablishmentDto.html":{}}}],["2.0.2",{"_index":1962,"title":{},"body":{"dependencies.html":{}}}],["2.0.5",{"_index":1968,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1652,"title":{},"body":{"modules/StripeModule.html":{}}}],["200",{"_index":1880,"title":{},"body":{"controllers/UsersController.html":{}}}],["201",{"_index":1876,"title":{},"body":{"controllers/UsersController.html":{}}}],["2023",{"_index":871,"title":{},"body":{"classes/CreatePlanPriceDto.html":{}}}],["2024",{"_index":1650,"title":{},"body":{"modules/StripeModule.html":{}}}],["25",{"_index":2212,"title":{},"body":{"overview.html":{}}}],["256",{"_index":1523,"title":{},"body":{"classes/SecurityHelper.html":{}}}],["3",{"_index":889,"title":{},"body":{"classes/CreatePlanPriceDto.html":{},"classes/StringHelper.html":{}}}],["3.1.10",{"_index":1990,"title":{},"body":{"dependencies.html":{}}}],["3.2.3",{"_index":1964,"title":{},"body":{"dependencies.html":{}}}],["3/4",{"_index":1945,"title":{},"body":{"coverage.html":{}}}],["30t12:00:00z",{"_index":873,"title":{},"body":{"classes/CreatePlanPriceDto.html":{}}}],["4",{"_index":1543,"title":{},"body":{"classes/SecurityHelper.html":{}}}],["4.19.2",{"_index":1991,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":1984,"title":{},"body":{"dependencies.html":{}}}],["4.2.2",{"_index":1978,"title":{},"body":{"dependencies.html":{}}}],["4.7.5",{"_index":2004,"title":{},"body":{"dependencies.html":{}}}],["4.7.8",{"_index":1993,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":1877,"title":{},"body":{"controllers/UsersController.html":{}}}],["404",{"_index":1882,"title":{},"body":{"controllers/UsersController.html":{}}}],["456",{"_index":702,"title":{},"body":{"classes/CreateEstablishmentDto.html":{}}}],["5.1.1",{"_index":1981,"title":{},"body":{"dependencies.html":{}}}],["5.3.8",{"_index":1961,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":891,"title":{},"body":{"classes/CreatePlanPriceDto.html":{},"coverage.html":{}}}],["57",{"_index":2213,"title":{},"body":{"overview.html":{}}}],["6.2.1",{"_index":1974,"title":{},"body":{"dependencies.html":{}}}],["6.9.14",{"_index":1999,"title":{},"body":{"dependencies.html":{}}}],["60000",{"_index":1776,"title":{},"body":{"modules/ThrottlerConfig.html":{}}}],["67890",{"_index":739,"title":{},"body":{"classes/CreateEstablishmentDto.html":{}}}],["67890'})@isoptional()@isstring",{"_index":732,"title":{},"body":{"classes/CreateEstablishmentDto.html":{}}}],["7.4.0",{"_index":1973,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":2003,"title":{},"body":{"dependencies.html":{}}}],["7/8",{"_index":1950,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":1944,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1604,"title":{},"body":{"classes/StringHelper.html":{},"overview.html":{}}}],["8.5.2",{"_index":1997,"title":{},"body":{"dependencies.html":{}}}],["87",{"_index":1949,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":2255,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9.0.2",{"_index":1996,"title":{},"body":{"dependencies.html":{}}}],["9._",{"_index":2254,"title":{},"body":{"miscellaneous/variables.html":{}}}],["999",{"_index":853,"title":{},"body":{"classes/CreatePlanDto.html":{}}}],["999})@isnotempty()@isnumber",{"_index":824,"title":{},"body":{"classes/CreatePlanDto.html":{}}}],["9])))(?=.{6",{"_index":2248,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9]))|((?=.*[a",{"_index":2247,"title":{},"body":{"miscellaneous/variables.html":{}}}],["abcdefghijklmnopqrstuvwxyz",{"_index":1598,"title":{},"body":{"classes/StringHelper.html":{}}}],["abstract",{"_index":72,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["access",{"_index":309,"title":{},"body":{"guards/AuthGuard.html":{},"classes/CreatePlanDto.html":{},"injectables/Token.html":{},"miscellaneous/enumerations.html":{}}}],["accesstoken",{"_index":1808,"title":{},"body":{"injectables/Token.html":{}}}],["account",{"_index":396,"title":{},"body":{"interfaces/BaseProps.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"interfaces/InitPasswordProps.html":{},"injectables/MailHelper.html":{},"interfaces/ResetPasswordProps.html":{}}}],["action",{"_index":1487,"title":{},"body":{"classes/Responses.html":{},"interfaces/ResponsesProps.html":{},"miscellaneous/enumerations.html":{}}}],["active",{"_index":814,"title":{},"body":{"classes/CreatePlanDto.html":{},"classes/CreatePlanPriceDto.html":{},"classes/Plan.html":{},"classes/PlanPrice.html":{},"classes/StripePriceProps.html":{},"injectables/StripePriceService.html":{},"miscellaneous/enumerations.html":{}}}],["adapter",{"_index":1208,"title":{},"body":{"modules/MailModule.html":{}}}],["add",{"_index":611,"title":{},"body":{"injectables/ClientsService.html":{}}}],["additional",{"_index":765,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["address",{"_index":700,"title":{},"body":{"classes/CreateEstablishmentDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateOrganizationDto.html":{}}}],["address1",{"_index":517,"title":{},"body":{"classes/Client.html":{},"classes/CreateClientDto.html":{},"classes/CreateEstablishmentDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/Establishment.html":{},"classes/Organization.html":{}}}],["address2",{"_index":518,"title":{},"body":{"classes/Client.html":{},"classes/CreateClientDto.html":{},"classes/CreateEstablishmentDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/Establishment.html":{},"classes/Organization.html":{}}}],["aed",{"_index":2045,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["aes",{"_index":1522,"title":{},"body":{"classes/SecurityHelper.html":{}}}],["algorithm",{"_index":1516,"title":{},"body":{"classes/SecurityHelper.html":{}}}],["aliases",{"_index":2218,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allcharacters",{"_index":1602,"title":{},"body":{"classes/StringHelper.html":{}}}],["allowedroles",{"_index":324,"title":{},"body":{"guards/AuthGuard.html":{}}}],["allowedroles.includes(role",{"_index":327,"title":{},"body":{"guards/AuthGuard.html":{}}}],["amazing",{"_index":2189,"title":{},"body":{"index.html":{}}}],["amount",{"_index":815,"title":{},"body":{"classes/CreatePlanDto.html":{},"classes/CreatePlanPriceDto.html":{},"classes/PlanPrice.html":{},"classes/StripePriceProps.html":{},"injectables/StripePriceService.html":{}}}],["anonymizeandencryptip",{"_index":1518,"title":{},"body":{"classes/SecurityHelper.html":{}}}],["anonymizeandencryptip(ip",{"_index":1529,"title":{},"body":{"classes/SecurityHelper.html":{}}}],["anonymizedip",{"_index":1566,"title":{},"body":{"classes/SecurityHelper.html":{}}}],["anonymizeip",{"_index":1519,"title":{},"body":{"classes/SecurityHelper.html":{}}}],["anonymizeip(ip",{"_index":1531,"title":{},"body":{"classes/SecurityHelper.html":{}}}],["any).message",{"_index":973,"title":{},"body":{"injectables/CustomValidationPipe.html":{},"classes/GlobalExceptionFilter.html":{}}}],["apibearerauth",{"_index":482,"title":{},"body":{"controllers/BookerEmployeesController.html":{},"controllers/ClientsController.html":{},"controllers/EmployeesController.html":{},"controllers/EstablishmentsController.html":{},"controllers/OrganizationsController.html":{},"controllers/PlanPricesController.html":{},"controllers/PlansController.html":{},"controllers/PromoCodesController.html":{},"controllers/SubscriptionsController.html":{},"controllers/TeamsController.html":{},"controllers/UsersController.html":{}}}],["apioperation",{"_index":480,"title":{},"body":{"controllers/BookerEmployeesController.html":{},"controllers/ClientsController.html":{},"controllers/EmployeesController.html":{},"controllers/EstablishmentsController.html":{},"controllers/OrganizationsController.html":{},"controllers/PlanPricesController.html":{},"controllers/PlansController.html":{},"controllers/PromoCodesController.html":{},"controllers/SubscriptionsController.html":{},"controllers/TeamsController.html":{},"controllers/UsersController.html":{}}}],["apioperation({summary",{"_index":549,"title":{},"body":{"controllers/ClientsController.html":{},"controllers/PlansController.html":{},"controllers/UsersController.html":{}}}],["apiproperty",{"_index":651,"title":{},"body":{"classes/CreateBookerEmployeeDto.html":{},"classes/CreateClientDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEstablishmentDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreatePlanPriceDto.html":{},"classes/CreatePromoCodeDto.html":{},"classes/CreateSubscriptionDto.html":{},"classes/CreateTeamDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{}}}],["apiproperty({description",{"_index":635,"title":{},"body":{"classes/CreateBookerEmployeeDto.html":{},"classes/CreateClientDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEstablishmentDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreatePlanPriceDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{}}}],["apipropertyoptional",{"_index":652,"title":{},"body":{"classes/CreateBookerEmployeeDto.html":{},"classes/CreateClientDto.html":{},"classes/CreatePlanPriceDto.html":{},"classes/CreatePromoCodeDto.html":{},"classes/CreateSubscriptionDto.html":{},"classes/CreateTeamDto.html":{},"classes/CreateUserDto.html":{}}}],["apipropertyoptional({description",{"_index":870,"title":{},"body":{"classes/CreatePlanPriceDto.html":{},"classes/CreateUserDto.html":{}}}],["apiresponse",{"_index":481,"title":{},"body":{"controllers/BookerEmployeesController.html":{},"controllers/ClientsController.html":{},"controllers/EmployeesController.html":{},"controllers/EstablishmentsController.html":{},"controllers/OrganizationsController.html":{},"controllers/PlanPricesController.html":{},"controllers/PlansController.html":{},"controllers/PromoCodesController.html":{},"controllers/SubscriptionsController.html":{},"controllers/TeamsController.html":{},"controllers/UsersController.html":{}}}],["apitags",{"_index":479,"title":{},"body":{"controllers/BookerEmployeesController.html":{},"controllers/ClientsController.html":{},"controllers/EmployeesController.html":{},"controllers/EstablishmentsController.html":{},"controllers/OrganizationsController.html":{},"controllers/PlanPricesController.html":{},"controllers/PlansController.html":{},"controllers/PromoCodesController.html":{},"controllers/SubscriptionsController.html":{},"controllers/TeamsController.html":{},"controllers/UsersController.html":{}}}],["apitags(\"booker",{"_index":484,"title":{},"body":{"controllers/BookerEmployeesController.html":{}}}],["apitags(\"clients",{"_index":575,"title":{},"body":{"controllers/ClientsController.html":{}}}],["apitags(\"employees",{"_index":992,"title":{},"body":{"controllers/EmployeesController.html":{}}}],["apitags(\"establishments",{"_index":1035,"title":{},"body":{"controllers/EstablishmentsController.html":{}}}],["apitags(\"organizations",{"_index":1310,"title":{},"body":{"controllers/OrganizationsController.html":{}}}],["apitags(\"plan",{"_index":1362,"title":{},"body":{"controllers/PlanPricesController.html":{}}}],["apitags(\"plans",{"_index":1398,"title":{},"body":{"controllers/PlansController.html":{}}}],["apitags(\"promo",{"_index":1446,"title":{},"body":{"controllers/PromoCodesController.html":{}}}],["apitags(\"subscriptions",{"_index":1711,"title":{},"body":{"controllers/SubscriptionsController.html":{}}}],["apitags(\"teams",{"_index":1743,"title":{},"body":{"controllers/TeamsController.html":{}}}],["apitags(\"users",{"_index":1892,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiversion",{"_index":1649,"title":{},"body":{"modules/StripeModule.html":{}}}],["app",{"_index":2170,"title":{},"body":{"index.html":{}}}],["app_guard",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/BookerEmployeesController.html":{},"controllers/ClientsController.html":{},"controllers/EmployeesController.html":{},"controllers/EstablishmentsController.html":{},"controllers/OrganizationsController.html":{},"controllers/PlanPricesController.html":{},"controllers/PlansController.html":{},"controllers/PromoCodesController.html":{},"controllers/SubscriptionsController.html":{},"controllers/TeamsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["appcontroller:100",{"_index":1889,"title":{},"body":{"controllers/UsersController.html":{}}}],["appcontroller:104",{"_index":570,"title":{},"body":{"controllers/ClientsController.html":{}}}],["appcontroller:117",{"_index":1887,"title":{},"body":{"controllers/UsersController.html":{}}}],["appcontroller:123",{"_index":468,"title":{},"body":{"controllers/BookerEmployeesController.html":{},"controllers/EmployeesController.html":{},"controllers/EstablishmentsController.html":{},"controllers/OrganizationsController.html":{},"controllers/PlanPricesController.html":{},"controllers/PlansController.html":{},"controllers/PromoCodesController.html":{},"controllers/SubscriptionsController.html":{},"controllers/TeamsController.html":{}}}],["appcontroller:127",{"_index":566,"title":{},"body":{"controllers/ClientsController.html":{}}}],["appcontroller:193",{"_index":469,"title":{},"body":{"controllers/BookerEmployeesController.html":{},"controllers/EmployeesController.html":{},"controllers/EstablishmentsController.html":{},"controllers/OrganizationsController.html":{},"controllers/PlanPricesController.html":{},"controllers/PlansController.html":{},"controllers/PromoCodesController.html":{},"controllers/SubscriptionsController.html":{},"controllers/TeamsController.html":{}}}],["appcontroller:265",{"_index":471,"title":{},"body":{"controllers/BookerEmployeesController.html":{},"controllers/EmployeesController.html":{},"controllers/EstablishmentsController.html":{},"controllers/OrganizationsController.html":{},"controllers/PlanPricesController.html":{},"controllers/PlansController.html":{},"controllers/PromoCodesController.html":{},"controllers/SubscriptionsController.html":{},"controllers/TeamsController.html":{}}}],["appcontroller:338",{"_index":470,"title":{},"body":{"controllers/BookerEmployeesController.html":{},"controllers/EmployeesController.html":{},"controllers/EstablishmentsController.html":{},"controllers/OrganizationsController.html":{},"controllers/PlanPricesController.html":{},"controllers/PlansController.html":{},"controllers/PromoCodesController.html":{},"controllers/SubscriptionsController.html":{},"controllers/TeamsController.html":{}}}],["appcontroller:41",{"_index":467,"title":{},"body":{"controllers/BookerEmployeesController.html":{},"controllers/EmployeesController.html":{},"controllers/EstablishmentsController.html":{},"controllers/OrganizationsController.html":{},"controllers/PlanPricesController.html":{},"controllers/PromoCodesController.html":{},"controllers/SubscriptionsController.html":{},"controllers/TeamsController.html":{}}}],["appcontroller:53",{"_index":1878,"title":{},"body":{"controllers/UsersController.html":{}}}],["appcontroller:55",{"_index":555,"title":{},"body":{"controllers/ClientsController.html":{}}}],["appcontroller:59",{"_index":1385,"title":{},"body":{"controllers/PlansController.html":{}}}],["appcontroller:72",{"_index":559,"title":{},"body":{"controllers/ClientsController.html":{},"controllers/UsersController.html":{}}}],["appcontroller:84",{"_index":563,"title":{},"body":{"controllers/ClientsController.html":{},"controllers/UsersController.html":{}}}],["applications",{"_index":2162,"title":{},"body":{"index.html":{}}}],["appmodel",{"_index":227,"title":{},"body":{"injectables/AppService.html":{},"injectables/BookerEmployeesService.html":{},"injectables/ClientsService.html":{},"injectables/EmployeesService.html":{},"injectables/EstablishmentsService.html":{},"injectables/OrganizationsService.html":{},"injectables/PlanPricesService.html":{},"injectables/PlansService.html":{},"injectables/PromoCodesService.html":{},"injectables/SubscriptionsService.html":{},"injectables/TeamsService.html":{},"injectables/UsersService.html":{}}}],["appmodule",{"_index":147,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":57,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/BookerEmployeesService.html":{},"injectables/ClientsService.html":{},"injectables/EmployeesService.html":{},"injectables/EstablishmentsService.html":{},"injectables/OrganizationsService.html":{},"injectables/PlanPricesService.html":{},"injectables/PlansService.html":{},"injectables/PromoCodesService.html":{},"injectables/SubscriptionsService.html":{},"injectables/TeamsService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["appservice:15",{"_index":505,"title":{},"body":{"injectables/BookerEmployeesService.html":{},"injectables/ClientsService.html":{},"injectables/EmployeesService.html":{},"injectables/EstablishmentsService.html":{},"injectables/OrganizationsService.html":{},"injectables/PlanPricesService.html":{},"injectables/PlansService.html":{},"injectables/PromoCodesService.html":{},"injectables/SubscriptionsService.html":{},"injectables/TeamsService.html":{},"injectables/UsersService.html":{}}}],["appservice:26",{"_index":506,"title":{},"body":{"injectables/BookerEmployeesService.html":{},"injectables/ClientsService.html":{},"injectables/EmployeesService.html":{},"injectables/EstablishmentsService.html":{},"injectables/OrganizationsService.html":{},"injectables/PlanPricesService.html":{},"injectables/PlansService.html":{},"injectables/PromoCodesService.html":{},"injectables/SubscriptionsService.html":{},"injectables/TeamsService.html":{},"injectables/UsersService.html":{}}}],["appservice:30",{"_index":507,"title":{},"body":{"injectables/BookerEmployeesService.html":{},"injectables/ClientsService.html":{},"injectables/EmployeesService.html":{},"injectables/EstablishmentsService.html":{},"injectables/OrganizationsService.html":{},"injectables/PlanPricesService.html":{},"injectables/PlansService.html":{},"injectables/PromoCodesService.html":{},"injectables/SubscriptionsService.html":{},"injectables/TeamsService.html":{},"injectables/UsersService.html":{}}}],["appservice:38",{"_index":511,"title":{},"body":{"injectables/BookerEmployeesService.html":{},"injectables/ClientsService.html":{},"injectables/EmployeesService.html":{},"injectables/EstablishmentsService.html":{},"injectables/OrganizationsService.html":{},"injectables/PlanPricesService.html":{},"injectables/PlansService.html":{},"injectables/PromoCodesService.html":{},"injectables/SubscriptionsService.html":{},"injectables/TeamsService.html":{},"injectables/UsersService.html":{}}}],["appservice:51",{"_index":510,"title":{},"body":{"injectables/BookerEmployeesService.html":{},"injectables/ClientsService.html":{},"injectables/EmployeesService.html":{},"injectables/EstablishmentsService.html":{},"injectables/OrganizationsService.html":{},"injectables/PlanPricesService.html":{},"injectables/PlansService.html":{},"injectables/PromoCodesService.html":{},"injectables/SubscriptionsService.html":{},"injectables/TeamsService.html":{},"injectables/UsersService.html":{}}}],["appservice:55",{"_index":508,"title":{},"body":{"injectables/BookerEmployeesService.html":{},"injectables/ClientsService.html":{},"injectables/EmployeesService.html":{},"injectables/EstablishmentsService.html":{},"injectables/OrganizationsService.html":{},"injectables/PlanPricesService.html":{},"injectables/PlansService.html":{},"injectables/PromoCodesService.html":{},"injectables/SubscriptionsService.html":{},"injectables/TeamsService.html":{},"injectables/UsersService.html":{}}}],["appservice:75",{"_index":512,"title":{},"body":{"injectables/BookerEmployeesService.html":{},"injectables/ClientsService.html":{},"injectables/EmployeesService.html":{},"injectables/EstablishmentsService.html":{},"injectables/OrganizationsService.html":{},"injectables/PlanPricesService.html":{},"injectables/PlansService.html":{},"injectables/PromoCodesService.html":{},"injectables/SubscriptionsService.html":{},"injectables/TeamsService.html":{},"injectables/UsersService.html":{}}}],["appservice:84",{"_index":509,"title":{},"body":{"injectables/BookerEmployeesService.html":{},"injectables/ClientsService.html":{},"injectables/EmployeesService.html":{},"injectables/EstablishmentsService.html":{},"injectables/OrganizationsService.html":{},"injectables/PlanPricesService.html":{},"injectables/PlansService.html":{},"injectables/PromoCodesService.html":{},"injectables/SubscriptionsService.html":{},"injectables/TeamsService.html":{},"injectables/UsersService.html":{}}}],["archived",{"_index":2149,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["argon2",{"_index":1097,"title":{},"body":{"classes/Hash.html":{},"dependencies.html":{}}}],["argon2.argon2i",{"_index":1099,"title":{},"body":{"classes/Hash.html":{}}}],["argon2.hash(data",{"_index":1098,"title":{},"body":{"classes/Hash.html":{}}}],["argon2.verify(datahash",{"_index":1103,"title":{},"body":{"classes/Hash.html":{}}}],["argumentmetadata",{"_index":965,"title":{},"body":{"injectables/CustomValidationPipe.html":{}}}],["argumentshost",{"_index":1068,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["array",{"_index":225,"title":{},"body":{"injectables/AppService.html":{},"classes/Client.html":{},"classes/User.html":{}}}],["associated",{"_index":727,"title":{},"body":{"classes/CreateEstablishmentDto.html":{},"classes/CreateOrganizationDto.html":{}}}],["async",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"interfaces/BaseProps.html":{},"controllers/BookerEmployeesController.html":{},"injectables/BookerEmployeesService.html":{},"controllers/ClientsController.html":{},"injectables/ClientsService.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"injectables/CustomValidationPipe.html":{},"controllers/EmployeesController.html":{},"injectables/EmployeesService.html":{},"controllers/EstablishmentsController.html":{},"injectables/EstablishmentsService.html":{},"classes/Hash.html":{},"interfaces/InitPasswordProps.html":{},"classes/LogHelper.html":{},"injectables/LogsService.html":{},"injectables/MailHelper.html":{},"interfaces/MailProps.html":{},"injectables/MailService.html":{},"controllers/OrganizationsController.html":{},"injectables/OrganizationsService.html":{},"controllers/PlanPricesController.html":{},"injectables/PlanPricesService.html":{},"controllers/PlansController.html":{},"injectables/PlansService.html":{},"controllers/PromoCodesController.html":{},"injectables/PromoCodesService.html":{},"interfaces/ResetPasswordProps.html":{},"injectables/StripeCustomerService.html":{},"injectables/StripePriceService.html":{},"injectables/StripeProductService.html":{},"controllers/SubscriptionsController.html":{},"injectables/SubscriptionsService.html":{},"controllers/TeamsController.html":{},"injectables/TeamsService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/logProps.html":{}}}],["attachments",{"_index":1213,"title":{},"body":{"interfaces/MailProps.html":{},"injectables/MailService.html":{}}}],["attention",{"_index":2107,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["aud",{"_index":2020,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth",{"_index":366,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/CreateAuthClientDto.html":{},"classes/CreateAuthOrganizationDto.html":{},"modules/MailModule.html":{},"controllers/PlansController.html":{},"classes/UpdateAuthClientDto.html":{},"coverage.html":{}}}],["authcontroller",{"_index":382,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{}}}],["authentication",{"_index":352,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["authguard",{"_index":268,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["authheader",{"_index":347,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["authheader.split",{"_index":353,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["authheader.startswith(\"bearer",{"_index":349,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["authmiddleware",{"_index":328,"title":{"injectables/AuthMiddleware.html":{}},"body":{"injectables/AuthMiddleware.html":{},"modules/BookerEmployeesModule.html":{},"modules/ClientsModule.html":{},"modules/EmployeesModule.html":{},"modules/EstablishmentsModule.html":{},"modules/OrganizationsModule.html":{},"modules/PlanPricesModule.html":{},"modules/PlansModule.html":{},"modules/PromoCodesModule.html":{},"modules/SubscriptionsModule.html":{},"modules/TeamsModule.html":{},"coverage.html":{}}}],["authmodule",{"_index":158,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":2197,"title":{},"body":{"index.html":{},"properties.html":{}}}],["available",{"_index":2208,"title":{},"body":{"modules.html":{}}}],["await",{"_index":85,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"interfaces/BaseProps.html":{},"controllers/ClientsController.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"injectables/CustomValidationPipe.html":{},"classes/Hash.html":{},"interfaces/InitPasswordProps.html":{},"classes/LogHelper.html":{},"injectables/LogsService.html":{},"injectables/MailHelper.html":{},"interfaces/MailProps.html":{},"injectables/MailService.html":{},"controllers/PlansController.html":{},"interfaces/ResetPasswordProps.html":{},"injectables/StripeCustomerService.html":{},"injectables/StripePriceService.html":{},"injectables/StripeProductService.html":{},"injectables/UsersService.html":{},"interfaces/logProps.html":{}}}],["azn",{"_index":2065,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["backers",{"_index":2190,"title":{},"body":{"index.html":{}}}],["bad",{"_index":553,"title":{},"body":{"controllers/ClientsController.html":{},"controllers/PlansController.html":{},"controllers/UsersController.html":{}}}],["badrequestexception",{"_index":967,"title":{},"body":{"injectables/CustomValidationPipe.html":{}}}],["banned",{"_index":2146,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["barber",{"_index":715,"title":{},"body":{"classes/CreateEstablishmentDto.html":{}}}],["barberville",{"_index":740,"title":{},"body":{"classes/CreateEstablishmentDto.html":{}}}],["barberville'})@isoptional()@isstring",{"_index":710,"title":{},"body":{"classes/CreateEstablishmentDto.html":{}}}],["baseprops",{"_index":388,"title":{"interfaces/BaseProps.html":{}},"body":{"interfaces/BaseProps.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"interfaces/InitPasswordProps.html":{},"injectables/MailHelper.html":{},"interfaces/ResetPasswordProps.html":{},"coverage.html":{}}}],["basic",{"_index":887,"title":{},"body":{"classes/CreatePlanPriceDto.html":{}}}],["bcrypt",{"_index":1980,"title":{},"body":{"dependencies.html":{}}}],["bdt",{"_index":2059,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["before",{"_index":847,"title":{},"body":{"classes/CreatePlanDto.html":{}}}],["behind",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"coverage.html":{}}}],["between",{"_index":839,"title":{},"body":{"classes/CreatePlanDto.html":{},"classes/CreatePlanPriceDto.html":{}}}],["billing",{"_index":833,"title":{},"body":{"classes/CreatePlanDto.html":{},"classes/CreatePlanPriceDto.html":{}}}],["body",{"_index":50,"title":{},"body":{"controllers/AppController.html":{},"controllers/ClientsController.html":{},"controllers/PlansController.html":{},"controllers/UsersController.html":{}}}],["booker",{"_index":464,"title":{},"body":{"controllers/BookerEmployeesController.html":{},"injectables/BookerEmployeesService.html":{},"classes/CreateAuthOrganizationDto.html":{},"classes/CreateBookerEmployeeDto.html":{},"classes/UpdateBookerEmployeeDto.html":{},"coverage.html":{}}}],["booker_admin",{"_index":2141,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["booker_employee",{"_index":2140,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["booker_owner",{"_index":2143,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["booker_super_admin",{"_index":2142,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["bookeremployee",{"_index":438,"title":{"classes/BookerEmployee.html":{}},"body":{"classes/BookerEmployee.html":{},"injectables/BookerEmployeesService.html":{},"classes/CreateAuthOrganizationDto.html":{},"coverage.html":{}}}],["bookeremployeedocument",{"_index":456,"title":{},"body":{"classes/BookerEmployee.html":{},"controllers/BookerEmployeesController.html":{},"injectables/BookerEmployeesService.html":{},"miscellaneous/typealiases.html":{}}}],["bookeremployees",{"_index":487,"title":{},"body":{"controllers/BookerEmployeesController.html":{}}}],["bookeremployeeschema",{"_index":459,"title":{},"body":{"classes/BookerEmployee.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["bookeremployeescontroller",{"_index":461,"title":{"controllers/BookerEmployeesController.html":{}},"body":{"controllers/BookerEmployeesController.html":{},"modules/BookerEmployeesModule.html":{},"coverage.html":{}}}],["bookeremployeesmodel",{"_index":504,"title":{},"body":{"injectables/BookerEmployeesService.html":{}}}],["bookeremployeesmodule",{"_index":488,"title":{"modules/BookerEmployeesModule.html":{}},"body":{"modules/BookerEmployeesModule.html":{},"modules.html":{},"overview.html":{}}}],["bookeremployeesservice",{"_index":334,"title":{"injectables/BookerEmployeesService.html":{}},"body":{"injectables/AuthMiddleware.html":{},"controllers/BookerEmployeesController.html":{},"modules/BookerEmployeesModule.html":{},"injectables/BookerEmployeesService.html":{},"coverage.html":{},"overview.html":{}}}],["boolean",{"_index":315,"title":{},"body":{"guards/AuthGuard.html":{},"classes/Client.html":{},"classes/CreateClientDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreatePlanPriceDto.html":{},"classes/Employee.html":{},"classes/NotificationHelper.html":{},"classes/NumberHelper.html":{},"classes/Plan.html":{},"classes/PlanPrice.html":{},"classes/Responses.html":{},"interfaces/ResponsesProps.html":{},"classes/StripePriceProps.html":{},"injectables/Token.html":{}}}],["bootstrap",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookerEmployeesModule.html":{},"modules/ClientsModule.html":{},"modules/EmployeesModule.html":{},"modules/EstablishmentsModule.html":{},"modules/JwtModule.html":{},"modules/LogsModule.html":{},"modules/MailModule.html":{},"modules/OrganizationsModule.html":{},"modules/PlanPricesModule.html":{},"modules/PlansModule.html":{},"modules/PromoCodesModule.html":{},"modules/StripeModule.html":{},"modules/SubscriptionsModule.html":{},"modules/TeamsModule.html":{},"modules/ThrottlerConfig.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["break",{"_index":1493,"title":{},"body":{"classes/Responses.html":{},"interfaces/ResponsesProps.html":{}}}],["brl",{"_index":2027,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["browse",{"_index":2206,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2204,"title":{},"body":{"modules.html":{}}}],["buffer.concat",{"_index":1562,"title":{},"body":{"classes/SecurityHelper.html":{}}}],["buffer.concat([cipher.update(text",{"_index":1553,"title":{},"body":{"classes/SecurityHelper.html":{}}}],["buffer.from(iv",{"_index":1559,"title":{},"body":{"classes/SecurityHelper.html":{}}}],["buffer.from(this.encryptionkey",{"_index":1551,"title":{},"body":{"classes/SecurityHelper.html":{}}}],["building",{"_index":2157,"title":{},"body":{"index.html":{}}}],["cad",{"_index":2021,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["canactivate",{"_index":271,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canactivate(context",{"_index":273,"title":{},"body":{"guards/AuthGuard.html":{}}}],["capitalized",{"_index":1579,"title":{},"body":{"classes/StringHelper.html":{}}}],["capitalizefirstletter",{"_index":1570,"title":{},"body":{"classes/StringHelper.html":{}}}],["capitalizefirstletter(str",{"_index":1573,"title":{},"body":{"classes/StringHelper.html":{}}}],["capitalizes",{"_index":1575,"title":{},"body":{"classes/StringHelper.html":{}}}],["case",{"_index":1492,"title":{},"body":{"classes/Responses.html":{},"interfaces/ResponsesProps.html":{}}}],["catch",{"_index":115,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"controllers/ClientsController.html":{},"injectables/CustomValidationPipe.html":{},"classes/GlobalExceptionFilter.html":{},"classes/Hash.html":{},"classes/LogHelper.html":{},"injectables/LogsService.html":{},"controllers/PlansController.html":{},"injectables/Token.html":{},"injectables/UsersService.html":{},"interfaces/logProps.html":{}}}],["catch(exception",{"_index":1066,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["catégoriser",{"_index":2077,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["charged",{"_index":823,"title":{},"body":{"classes/CreatePlanDto.html":{},"classes/CreatePlanPriceDto.html":{}}}],["check",{"_index":1278,"title":{},"body":{"classes/NumberHelper.html":{}}}],["checks",{"_index":1275,"title":{},"body":{"classes/NumberHelper.html":{}}}],["chf",{"_index":2036,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cipher",{"_index":1548,"title":{},"body":{"classes/SecurityHelper.html":{}}}],["cipher.final",{"_index":1554,"title":{},"body":{"classes/SecurityHelper.html":{}}}],["city",{"_index":519,"title":{},"body":{"classes/Client.html":{},"classes/CreateClientDto.html":{},"classes/CreateEstablishmentDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/Establishment.html":{},"classes/Organization.html":{}}}],["city.'})@isoptional()@isstring",{"_index":719,"title":{},"body":{"classes/CreateEstablishmentDto.html":{}}}],["class",{"_index":73,"title":{"classes/BookerEmployee.html":{},"classes/Client.html":{},"classes/CreateAuthClientDto.html":{},"classes/CreateAuthOrganizationDto.html":{},"classes/CreateBookerEmployeeDto.html":{},"classes/CreateClientDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEstablishmentDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreatePlanPriceDto.html":{},"classes/CreatePromoCodeDto.html":{},"classes/CreateSubscriptionDto.html":{},"classes/CreateTeamDto.html":{},"classes/CreateUserDto.html":{},"classes/CustomFieldDto.html":{},"classes/CustomFieldValueDto.html":{},"classes/Employee.html":{},"classes/Establishment.html":{},"classes/FlagDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/GlobalExceptionFilter.html":{},"classes/Hash.html":{},"classes/Log.html":{},"classes/LogHelper.html":{},"classes/LoginUserDto.html":{},"classes/NotificationHelper.html":{},"classes/NumberHelper.html":{},"classes/Organization.html":{},"classes/Plan.html":{},"classes/PlanPrice.html":{},"classes/PromoCode.html":{},"classes/RefreshTokenDto.html":{},"classes/ResetPasswordDto.html":{},"classes/Responses.html":{},"classes/SecurityHelper.html":{},"classes/StringHelper.html":{},"classes/StripeCustomerProps.html":{},"classes/StripePriceProps.html":{},"classes/StripeProductProps.html":{},"classes/Subscription.html":{},"classes/Team.html":{},"classes/UpdateAuthClientDto.html":{},"classes/UpdateBookerEmployeeDto.html":{},"classes/UpdateClientDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEstablishmentDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UpdatePlanDto.html":{},"classes/UpdatePlanPriceDto.html":{},"classes/UpdatePromoCodeDto.html":{},"classes/UpdateSubscriptionDto.html":{},"classes/UpdateTeamDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"interfaces/BaseProps.html":{},"classes/BookerEmployee.html":{},"controllers/BookerEmployeesController.html":{},"modules/BookerEmployeesModule.html":{},"injectables/BookerEmployeesService.html":{},"classes/Client.html":{},"controllers/ClientsController.html":{},"modules/ClientsModule.html":{},"injectables/ClientsService.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"classes/CreateAuthClientDto.html":{},"classes/CreateAuthOrganizationDto.html":{},"classes/CreateBookerEmployeeDto.html":{},"classes/CreateClientDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEstablishmentDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreatePlanPriceDto.html":{},"classes/CreatePromoCodeDto.html":{},"classes/CreateSubscriptionDto.html":{},"classes/CreateTeamDto.html":{},"classes/CreateUserDto.html":{},"classes/CustomFieldDto.html":{},"classes/CustomFieldValueDto.html":{},"injectables/CustomValidationPipe.html":{},"classes/Employee.html":{},"controllers/EmployeesController.html":{},"modules/EmployeesModule.html":{},"injectables/EmployeesService.html":{},"classes/Establishment.html":{},"controllers/EstablishmentsController.html":{},"modules/EstablishmentsModule.html":{},"injectables/EstablishmentsService.html":{},"classes/FlagDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/GlobalExceptionFilter.html":{},"classes/Hash.html":{},"interfaces/InitPasswordProps.html":{},"modules/JwtModule.html":{},"classes/Log.html":{},"classes/LogHelper.html":{},"classes/LoginUserDto.html":{},"modules/LogsModule.html":{},"injectables/LogsService.html":{},"injectables/MailHelper.html":{},"modules/MailModule.html":{},"interfaces/MailProps.html":{},"injectables/MailService.html":{},"modules/MongooseConfig.html":{},"classes/NotificationHelper.html":{},"classes/NumberHelper.html":{},"classes/Organization.html":{},"controllers/OrganizationsController.html":{},"modules/OrganizationsModule.html":{},"injectables/OrganizationsService.html":{},"classes/Plan.html":{},"classes/PlanPrice.html":{},"controllers/PlanPricesController.html":{},"modules/PlanPricesModule.html":{},"injectables/PlanPricesService.html":{},"controllers/PlansController.html":{},"modules/PlansModule.html":{},"injectables/PlansService.html":{},"classes/PromoCode.html":{},"controllers/PromoCodesController.html":{},"modules/PromoCodesModule.html":{},"injectables/PromoCodesService.html":{},"classes/RefreshTokenDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/ResetPasswordProps.html":{},"classes/Responses.html":{},"interfaces/ResponsesProps.html":{},"classes/SecurityHelper.html":{},"classes/StringHelper.html":{},"classes/StripeCustomerProps.html":{},"injectables/StripeCustomerService.html":{},"modules/StripeModule.html":{},"injectables/StripePlanService.html":{},"injectables/StripePlanService-1.html":{},"injectables/StripePlanService-2.html":{},"classes/StripePriceProps.html":{},"injectables/StripePriceService.html":{},"classes/StripeProductProps.html":{},"injectables/StripeProductService.html":{},"classes/Subscription.html":{},"controllers/SubscriptionsController.html":{},"modules/SubscriptionsModule.html":{},"injectables/SubscriptionsService.html":{},"classes/Team.html":{},"controllers/TeamsController.html":{},"modules/TeamsModule.html":{},"injectables/TeamsService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"modules/ThrottlerConfig.html":{},"injectables/Token.html":{},"classes/UpdateAuthClientDto.html":{},"classes/UpdateBookerEmployeeDto.html":{},"classes/UpdateClientDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEstablishmentDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UpdatePlanDto.html":{},"classes/UpdatePlanPriceDto.html":{},"classes/UpdatePromoCodeDto.html":{},"classes/UpdateSubscriptionDto.html":{},"classes/UpdateTeamDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"interfaces/logProps.html":{}}}],["classes",{"_index":439,"title":{},"body":{"classes/BookerEmployee.html":{},"classes/Client.html":{},"classes/CreateAuthClientDto.html":{},"classes/CreateAuthOrganizationDto.html":{},"classes/CreateBookerEmployeeDto.html":{},"classes/CreateClientDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEstablishmentDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreatePlanPriceDto.html":{},"classes/CreatePromoCodeDto.html":{},"classes/CreateSubscriptionDto.html":{},"classes/CreateTeamDto.html":{},"classes/CreateUserDto.html":{},"classes/CustomFieldDto.html":{},"classes/CustomFieldValueDto.html":{},"classes/Employee.html":{},"classes/Establishment.html":{},"classes/FlagDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/GlobalExceptionFilter.html":{},"classes/Hash.html":{},"classes/Log.html":{},"classes/LogHelper.html":{},"classes/LoginUserDto.html":{},"classes/NotificationHelper.html":{},"classes/NumberHelper.html":{},"classes/Organization.html":{},"classes/Plan.html":{},"classes/PlanPrice.html":{},"classes/PromoCode.html":{},"classes/RefreshTokenDto.html":{},"classes/ResetPasswordDto.html":{},"classes/Responses.html":{},"classes/SecurityHelper.html":{},"classes/StringHelper.html":{},"classes/StripeCustomerProps.html":{},"classes/StripePriceProps.html":{},"classes/StripeProductProps.html":{},"classes/Subscription.html":{},"classes/Team.html":{},"classes/UpdateAuthClientDto.html":{},"classes/UpdateBookerEmployeeDto.html":{},"classes/UpdateClientDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEstablishmentDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UpdatePlanDto.html":{},"classes/UpdatePlanPriceDto.html":{},"classes/UpdatePromoCodeDto.html":{},"classes/UpdateSubscriptionDto.html":{},"classes/UpdateTeamDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"overview.html":{}}}],["client",{"_index":401,"title":{"classes/Client.html":{}},"body":{"interfaces/BaseProps.html":{},"classes/Client.html":{},"controllers/ClientsController.html":{},"injectables/ClientsService.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"classes/CreateClientDto.html":{},"classes/Hash.html":{},"interfaces/InitPasswordProps.html":{},"injectables/MailHelper.html":{},"modules/MongooseConfig.html":{},"controllers/PlansController.html":{},"interfaces/ResetPasswordProps.html":{},"classes/Responses.html":{},"interfaces/ResponsesProps.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["client'})@apiresponse({status",{"_index":550,"title":{},"body":{"controllers/ClientsController.html":{}}}],["client'})@isnotempty()@isstring",{"_index":662,"title":{},"body":{"classes/CreateClientDto.html":{}}}],["client'})@isoptional()@isstring",{"_index":657,"title":{},"body":{"classes/CreateClientDto.html":{}}}],["client.'})@apiresponse({status",{"_index":561,"title":{},"body":{"controllers/ClientsController.html":{}}}],["client.dto",{"_index":572,"title":{},"body":{"controllers/ClientsController.html":{},"injectables/ClientsService.html":{},"classes/CreateAuthClientDto.html":{},"classes/UpdateAuthClientDto.html":{},"classes/UpdateClientDto.html":{}}}],["client.dto.ts",{"_index":618,"title":{},"body":{"classes/CreateAuthClientDto.html":{},"classes/CreateClientDto.html":{},"classes/UpdateAuthClientDto.html":{},"classes/UpdateClientDto.html":{},"coverage.html":{}}}],["client.dto.ts:14",{"_index":663,"title":{},"body":{"classes/CreateClientDto.html":{}}}],["client.dto.ts:19",{"_index":664,"title":{},"body":{"classes/CreateClientDto.html":{}}}],["client.dto.ts:24",{"_index":658,"title":{},"body":{"classes/CreateClientDto.html":{}}}],["client.dto.ts:29",{"_index":659,"title":{},"body":{"classes/CreateClientDto.html":{}}}],["client.dto.ts:34",{"_index":671,"title":{},"body":{"classes/CreateClientDto.html":{}}}],["client.dto.ts:39",{"_index":660,"title":{},"body":{"classes/CreateClientDto.html":{}}}],["client.dto.ts:44",{"_index":661,"title":{},"body":{"classes/CreateClientDto.html":{}}}],["client.dto.ts:49",{"_index":667,"title":{},"body":{"classes/CreateClientDto.html":{}}}],["client.dto.ts:54",{"_index":669,"title":{},"body":{"classes/CreateClientDto.html":{}}}],["client.dto.ts:9",{"_index":673,"title":{},"body":{"classes/CreateClientDto.html":{}}}],["client.id.tostring",{"_index":595,"title":{},"body":{"controllers/ClientsController.html":{}}}],["client.name",{"_index":1256,"title":{},"body":{"modules/MongooseConfig.html":{}}}],["clientdocument",{"_index":538,"title":{},"body":{"classes/Client.html":{},"controllers/ClientsController.html":{},"injectables/ClientsService.html":{},"classes/LogHelper.html":{},"interfaces/logProps.html":{},"miscellaneous/typealiases.html":{}}}],["clientmodel",{"_index":609,"title":{},"body":{"injectables/ClientsService.html":{}}}],["clients",{"_index":546,"title":{},"body":{"controllers/ClientsController.html":{}}}],["clients\".touppercase()}controller",{"_index":597,"title":{},"body":{"controllers/ClientsController.html":{}}}],["clients'})@apiresponse({status",{"_index":556,"title":{},"body":{"controllers/ClientsController.html":{}}}],["clients.'})@apiresponse({status",{"_index":557,"title":{},"body":{"controllers/ClientsController.html":{}}}],["clientschema",{"_index":542,"title":{},"body":{"classes/Client.html":{},"modules/MongooseConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["clientscontroller",{"_index":544,"title":{"controllers/ClientsController.html":{}},"body":{"controllers/ClientsController.html":{},"modules/ClientsModule.html":{},"coverage.html":{}}}],["clientsmodule",{"_index":159,"title":{"modules/ClientsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ClientsModule.html":{},"modules.html":{},"overview.html":{}}}],["clientsservice",{"_index":332,"title":{"injectables/ClientsService.html":{}},"body":{"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"controllers/ClientsController.html":{},"modules/ClientsModule.html":{},"injectables/ClientsService.html":{},"coverage.html":{},"overview.html":{}}}],["clp",{"_index":2043,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cluster_appmodule",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_exports",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":375,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":376,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":377,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_bookeremployeesmodule",{"_index":489,"title":{},"body":{"modules/BookerEmployeesModule.html":{},"overview.html":{}}}],["cluster_bookeremployeesmodule_exports",{"_index":490,"title":{},"body":{"modules/BookerEmployeesModule.html":{},"overview.html":{}}}],["cluster_bookeremployeesmodule_providers",{"_index":491,"title":{},"body":{"modules/BookerEmployeesModule.html":{},"overview.html":{}}}],["cluster_clientsmodule",{"_index":598,"title":{},"body":{"modules/ClientsModule.html":{},"overview.html":{}}}],["cluster_clientsmodule_exports",{"_index":599,"title":{},"body":{"modules/ClientsModule.html":{},"overview.html":{}}}],["cluster_clientsmodule_providers",{"_index":600,"title":{},"body":{"modules/ClientsModule.html":{}}}],["cluster_employeesmodule",{"_index":996,"title":{},"body":{"modules/EmployeesModule.html":{},"overview.html":{}}}],["cluster_employeesmodule_providers",{"_index":997,"title":{},"body":{"modules/EmployeesModule.html":{},"overview.html":{}}}],["cluster_establishmentsmodule",{"_index":1039,"title":{},"body":{"modules/EstablishmentsModule.html":{},"overview.html":{}}}],["cluster_establishmentsmodule_providers",{"_index":1040,"title":{},"body":{"modules/EstablishmentsModule.html":{},"overview.html":{}}}],["cluster_jwtmodule",{"_index":1110,"title":{},"body":{"modules/JwtModule.html":{},"overview.html":{}}}],["cluster_jwtmodule_exports",{"_index":1112,"title":{},"body":{"modules/JwtModule.html":{},"overview.html":{}}}],["cluster_jwtmodule_imports",{"_index":1111,"title":{},"body":{"modules/JwtModule.html":{},"overview.html":{}}}],["cluster_logsmodule",{"_index":1158,"title":{},"body":{"modules/LogsModule.html":{},"overview.html":{}}}],["cluster_logsmodule_exports",{"_index":1159,"title":{},"body":{"modules/LogsModule.html":{},"overview.html":{}}}],["cluster_logsmodule_providers",{"_index":1160,"title":{},"body":{"modules/LogsModule.html":{}}}],["cluster_mailmodule",{"_index":1186,"title":{},"body":{"modules/MailModule.html":{}}}],["cluster_mailmodule_providers",{"_index":1187,"title":{},"body":{"modules/MailModule.html":{}}}],["cluster_organizationsmodule",{"_index":1314,"title":{},"body":{"modules/OrganizationsModule.html":{},"overview.html":{}}}],["cluster_organizationsmodule_providers",{"_index":1315,"title":{},"body":{"modules/OrganizationsModule.html":{},"overview.html":{}}}],["cluster_planpricesmodule",{"_index":1367,"title":{},"body":{"modules/PlanPricesModule.html":{},"overview.html":{}}}],["cluster_planpricesmodule_exports",{"_index":1368,"title":{},"body":{"modules/PlanPricesModule.html":{},"overview.html":{}}}],["cluster_planpricesmodule_providers",{"_index":1369,"title":{},"body":{"modules/PlanPricesModule.html":{},"overview.html":{}}}],["cluster_plansmodule",{"_index":1409,"title":{},"body":{"modules/PlansModule.html":{},"overview.html":{}}}],["cluster_plansmodule_exports",{"_index":1410,"title":{},"body":{"modules/PlansModule.html":{},"overview.html":{}}}],["cluster_plansmodule_providers",{"_index":1411,"title":{},"body":{"modules/PlansModule.html":{},"overview.html":{}}}],["cluster_promocodesmodule",{"_index":1451,"title":{},"body":{"modules/PromoCodesModule.html":{},"overview.html":{}}}],["cluster_promocodesmodule_providers",{"_index":1452,"title":{},"body":{"modules/PromoCodesModule.html":{},"overview.html":{}}}],["cluster_stripemodule",{"_index":1641,"title":{},"body":{"modules/StripeModule.html":{},"overview.html":{}}}],["cluster_stripemodule_exports",{"_index":1642,"title":{},"body":{"modules/StripeModule.html":{},"overview.html":{}}}],["cluster_stripemodule_providers",{"_index":1643,"title":{},"body":{"modules/StripeModule.html":{},"overview.html":{}}}],["cluster_subscriptionsmodule",{"_index":1714,"title":{},"body":{"modules/SubscriptionsModule.html":{},"overview.html":{}}}],["cluster_subscriptionsmodule_providers",{"_index":1715,"title":{},"body":{"modules/SubscriptionsModule.html":{},"overview.html":{}}}],["cluster_teamsmodule",{"_index":1747,"title":{},"body":{"modules/TeamsModule.html":{},"overview.html":{}}}],["cluster_teamsmodule_providers",{"_index":1748,"title":{},"body":{"modules/TeamsModule.html":{},"overview.html":{}}}],["cluster_throttlerconfig",{"_index":1770,"title":{},"body":{"modules/ThrottlerConfig.html":{},"overview.html":{}}}],["cluster_throttlerconfig_exports",{"_index":1771,"title":{},"body":{"modules/ThrottlerConfig.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":1897,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":1899,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":1900,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":1898,"title":{},"body":{"modules/UsersModule.html":{}}}],["cny",{"_index":2024,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["code",{"_index":111,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthMiddleware.html":{},"controllers/ClientsController.html":{},"classes/CreateClientDto.html":{},"classes/CreateEstablishmentDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/GlobalExceptionFilter.html":{},"controllers/PlansController.html":{},"classes/Responses.html":{},"interfaces/ResponsesProps.html":{},"miscellaneous/enumerations.html":{}}}],["code.dto",{"_index":1441,"title":{},"body":{"controllers/PromoCodesController.html":{},"injectables/PromoCodesService.html":{},"classes/UpdatePromoCodeDto.html":{}}}],["code.dto.ts",{"_index":910,"title":{},"body":{"classes/CreatePromoCodeDto.html":{},"classes/UpdatePromoCodeDto.html":{},"coverage.html":{}}}],["code.entity",{"_index":1444,"title":{},"body":{"controllers/PromoCodesController.html":{},"injectables/PromoCodesService.html":{}}}],["code.entity.ts",{"_index":1428,"title":{},"body":{"classes/PromoCode.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["code.entity.ts:12",{"_index":1429,"title":{},"body":{"classes/PromoCode.html":{}}}],["code.entity.ts:13",{"_index":1430,"title":{},"body":{"classes/PromoCode.html":{}}}],["code.ts",{"_index":1657,"title":{},"body":{"injectables/StripePlanService-1.html":{},"coverage.html":{}}}],["codemessage",{"_index":1486,"title":{},"body":{"classes/Responses.html":{},"interfaces/ResponsesProps.html":{}}}],["codes",{"_index":1437,"title":{},"body":{"controllers/PromoCodesController.html":{}}}],["codes.controller",{"_index":1455,"title":{},"body":{"modules/PromoCodesModule.html":{}}}],["codes.controller.ts",{"_index":1436,"title":{},"body":{"controllers/PromoCodesController.html":{},"coverage.html":{}}}],["codes.module.ts",{"_index":1453,"title":{},"body":{"modules/PromoCodesModule.html":{}}}],["codes.module.ts:13",{"_index":1454,"title":{},"body":{"modules/PromoCodesModule.html":{}}}],["codes.service",{"_index":1440,"title":{},"body":{"controllers/PromoCodesController.html":{},"modules/PromoCodesModule.html":{}}}],["codes.service.ts",{"_index":1457,"title":{},"body":{"injectables/PromoCodesService.html":{},"coverage.html":{}}}],["codes.service.ts:17",{"_index":1459,"title":{},"body":{"injectables/PromoCodesService.html":{}}}],["codes/dto/create",{"_index":908,"title":{},"body":{"classes/CreatePromoCodeDto.html":{},"controllers/PromoCodesController.html":{},"injectables/PromoCodesService.html":{},"classes/UpdatePromoCodeDto.html":{},"coverage.html":{}}}],["codes/dto/update",{"_index":1443,"title":{},"body":{"controllers/PromoCodesController.html":{},"injectables/PromoCodesService.html":{},"classes/UpdatePromoCodeDto.html":{},"coverage.html":{}}}],["codes/entities/promo",{"_index":1427,"title":{},"body":{"classes/PromoCode.html":{},"controllers/PromoCodesController.html":{},"injectables/PromoCodesService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["codes/promo",{"_index":1435,"title":{},"body":{"controllers/PromoCodesController.html":{},"modules/PromoCodesModule.html":{},"injectables/PromoCodesService.html":{},"coverage.html":{}}}],["color",{"_index":1053,"title":{},"body":{"classes/FlagDto.html":{}}}],["company",{"_index":589,"title":{},"body":{"controllers/ClientsController.html":{},"classes/CreateClientDto.html":{},"classes/CreateOrganizationDto.html":{}}}],["companyid",{"_index":679,"title":{},"body":{"classes/CreateClientDto.html":{}}}],["compare",{"_index":1092,"title":{},"body":{"classes/Hash.html":{}}}],["compared",{"_index":1093,"title":{},"body":{"classes/Hash.html":{}}}],["config",{"_index":1215,"title":{},"body":{"interfaces/MailProps.html":{},"injectables/MailService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["config.email.sendemail",{"_index":1218,"title":{},"body":{"interfaces/MailProps.html":{},"injectables/MailService.html":{}}}],["config/config",{"_index":1216,"title":{},"body":{"interfaces/MailProps.html":{},"injectables/MailService.html":{}}}],["config/database/mongoose.config",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["config/security/throttler.config",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":177,"title":{},"body":{"modules/AppModule.html":{},"modules/MongooseConfig.html":{}}}],["configmodule.forroot",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["configs",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"modules/MongooseConfig.html":{}}}],["configservice",{"_index":1234,"title":{},"body":{"modules/MongooseConfig.html":{},"modules/StripeModule.html":{}}}],["configservice.get(settings.stripe_public_key",{"_index":1648,"title":{},"body":{"modules/StripeModule.html":{}}}],["configure",{"_index":493,"title":{},"body":{"modules/BookerEmployeesModule.html":{},"modules/EmployeesModule.html":{},"modules/EstablishmentsModule.html":{},"modules/OrganizationsModule.html":{},"modules/PlanPricesModule.html":{},"modules/PlansModule.html":{},"modules/PromoCodesModule.html":{},"modules/SubscriptionsModule.html":{},"modules/TeamsModule.html":{}}}],["configure(consumer",{"_index":494,"title":{},"body":{"modules/BookerEmployeesModule.html":{},"modules/ClientsModule.html":{},"modules/EmployeesModule.html":{},"modules/EstablishmentsModule.html":{},"modules/OrganizationsModule.html":{},"modules/PlanPricesModule.html":{},"modules/PlansModule.html":{},"modules/PromoCodesModule.html":{},"modules/SubscriptionsModule.html":{},"modules/TeamsModule.html":{}}}],["confirmaccountclientprops",{"_index":406,"title":{"interfaces/ConfirmAccountClientProps.html":{}},"body":{"interfaces/BaseProps.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"interfaces/InitPasswordProps.html":{},"injectables/MailHelper.html":{},"interfaces/ResetPasswordProps.html":{},"coverage.html":{}}}],["confirmaccountorganizationprops",{"_index":420,"title":{"interfaces/ConfirmAccountOrganizationProps.html":{}},"body":{"interfaces/BaseProps.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"interfaces/InitPasswordProps.html":{},"injectables/MailHelper.html":{},"interfaces/ResetPasswordProps.html":{},"coverage.html":{}}}],["confirmaccountprops",{"_index":403,"title":{},"body":{"interfaces/BaseProps.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"interfaces/InitPasswordProps.html":{},"injectables/MailHelper.html":{},"interfaces/ResetPasswordProps.html":{}}}],["confirmation",{"_index":399,"title":{},"body":{"interfaces/BaseProps.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"interfaces/InitPasswordProps.html":{},"injectables/MailHelper.html":{},"interfaces/ResetPasswordProps.html":{}}}],["confirmation_account",{"_index":2131,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["connection",{"_index":54,"title":{},"body":{"controllers/AppController.html":{},"controllers/BookerEmployeesController.html":{},"controllers/ClientsController.html":{},"controllers/EmployeesController.html":{},"controllers/EstablishmentsController.html":{},"controllers/OrganizationsController.html":{},"controllers/PlanPricesController.html":{},"controllers/PlansController.html":{},"controllers/PromoCodesController.html":{},"controllers/SubscriptionsController.html":{},"controllers/TeamsController.html":{},"controllers/UsersController.html":{}}}],["console",{"_index":1445,"title":{},"body":{"controllers/PromoCodesController.html":{},"controllers/TeamsController.html":{}}}],["console.error",{"_index":118,"title":{},"body":{"controllers/AppController.html":{},"controllers/ClientsController.html":{},"classes/LogHelper.html":{},"interfaces/logProps.html":{}}}],["console.error(\"appservice",{"_index":246,"title":{},"body":{"injectables/AppService.html":{}}}],["console.error(\"logsservice",{"_index":1178,"title":{},"body":{"injectables/LogsService.html":{}}}],["console.error(`planscontroller",{"_index":1408,"title":{},"body":{"controllers/PlansController.html":{}}}],["console.log",{"_index":1500,"title":{},"body":{"classes/Responses.html":{},"interfaces/ResponsesProps.html":{},"injectables/UsersService.html":{}}}],["console.log(\"update",{"_index":585,"title":{},"body":{"controllers/ClientsController.html":{}}}],["console.log(error",{"_index":1108,"title":{},"body":{"classes/Hash.html":{},"injectables/Token.html":{},"injectables/UsersService.html":{}}}],["console.log(error.message",{"_index":1100,"title":{},"body":{"classes/Hash.html":{}}}],["console.log(token",{"_index":355,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["const",{"_index":81,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"interfaces/BaseProps.html":{},"classes/BookerEmployee.html":{},"classes/Client.html":{},"controllers/ClientsController.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"injectables/CustomValidationPipe.html":{},"classes/Employee.html":{},"classes/Establishment.html":{},"classes/GlobalExceptionFilter.html":{},"classes/Hash.html":{},"interfaces/InitPasswordProps.html":{},"classes/Log.html":{},"injectables/LogsService.html":{},"injectables/MailHelper.html":{},"interfaces/MailProps.html":{},"injectables/MailService.html":{},"classes/NumberHelper.html":{},"classes/Organization.html":{},"classes/Plan.html":{},"classes/PlanPrice.html":{},"controllers/PlansController.html":{},"classes/PromoCode.html":{},"interfaces/ResetPasswordProps.html":{},"classes/Responses.html":{},"interfaces/ResponsesProps.html":{},"classes/SecurityHelper.html":{},"classes/StringHelper.html":{},"injectables/StripeCustomerService.html":{},"injectables/StripePriceService.html":{},"injectables/StripeProductService.html":{},"classes/Subscription.html":{},"classes/Team.html":{},"injectables/Token.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constants/regex",{"_index":936,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/ResetPasswordDto.html":{},"classes/StringHelper.html":{}}}],["constants/settings",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"interfaces/BaseProps.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"interfaces/InitPasswordProps.html":{},"modules/JwtModule.html":{},"injectables/MailHelper.html":{},"modules/MailModule.html":{},"interfaces/MailProps.html":{},"injectables/MailService.html":{},"modules/MongooseConfig.html":{},"interfaces/ResetPasswordProps.html":{},"modules/StripeModule.html":{},"injectables/Token.html":{}}}],["constructor",{"_index":76,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"controllers/BookerEmployeesController.html":{},"injectables/BookerEmployeesService.html":{},"controllers/ClientsController.html":{},"injectables/ClientsService.html":{},"controllers/EmployeesController.html":{},"injectables/EmployeesService.html":{},"controllers/EstablishmentsController.html":{},"injectables/EstablishmentsService.html":{},"classes/LogHelper.html":{},"injectables/LogsService.html":{},"injectables/MailHelper.html":{},"injectables/MailService.html":{},"controllers/OrganizationsController.html":{},"injectables/OrganizationsService.html":{},"controllers/PlanPricesController.html":{},"injectables/PlanPricesService.html":{},"controllers/PlansController.html":{},"injectables/PlansService.html":{},"controllers/PromoCodesController.html":{},"injectables/PromoCodesService.html":{},"injectables/StripeCustomerService.html":{},"injectables/StripePriceService.html":{},"injectables/StripeProductService.html":{},"controllers/SubscriptionsController.html":{},"injectables/SubscriptionsService.html":{},"controllers/TeamsController.html":{},"injectables/TeamsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constructor(@inject(\"stripe_client",{"_index":1636,"title":{},"body":{"injectables/StripeCustomerService.html":{},"injectables/StripePriceService.html":{},"injectables/StripeProductService.html":{}}}],["constructor(appmodel",{"_index":222,"title":{},"body":{"injectables/AppService.html":{}}}],["constructor(bookeremployeesmodel",{"_index":502,"title":{},"body":{"injectables/BookerEmployeesService.html":{}}}],["constructor(clientmodel",{"_index":607,"title":{},"body":{"injectables/ClientsService.html":{}}}],["constructor(employeesmodel",{"_index":1003,"title":{},"body":{"injectables/EmployeesService.html":{}}}],["constructor(establishmentsmodel",{"_index":1046,"title":{},"body":{"injectables/EstablishmentsService.html":{}}}],["constructor(logsmodel",{"_index":1163,"title":{},"body":{"injectables/LogsService.html":{}}}],["constructor(logsservice",{"_index":1134,"title":{},"body":{"classes/LogHelper.html":{}}}],["constructor(mailerservice",{"_index":1230,"title":{},"body":{"injectables/MailService.html":{}}}],["constructor(mailservice",{"_index":1180,"title":{},"body":{"injectables/MailHelper.html":{}}}],["constructor(organizationsmodel",{"_index":1321,"title":{},"body":{"injectables/OrganizationsService.html":{}}}],["constructor(planpricesmodel",{"_index":1375,"title":{},"body":{"injectables/PlanPricesService.html":{}}}],["constructor(plansmodel",{"_index":1421,"title":{},"body":{"injectables/PlansService.html":{}}}],["constructor(private",{"_index":395,"title":{},"body":{"interfaces/BaseProps.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"interfaces/InitPasswordProps.html":{},"classes/LogHelper.html":{},"injectables/MailHelper.html":{},"interfaces/MailProps.html":{},"injectables/MailService.html":{},"interfaces/ResetPasswordProps.html":{},"interfaces/logProps.html":{}}}],["constructor(promocodesmodel",{"_index":1458,"title":{},"body":{"injectables/PromoCodesService.html":{}}}],["constructor(stripe",{"_index":1625,"title":{},"body":{"injectables/StripeCustomerService.html":{},"injectables/StripePriceService.html":{},"injectables/StripeProductService.html":{}}}],["constructor(subscriptionsmodel",{"_index":1721,"title":{},"body":{"injectables/SubscriptionsService.html":{}}}],["constructor(teamsmodel",{"_index":1754,"title":{},"body":{"injectables/TeamsService.html":{}}}],["constructor(usersmodel",{"_index":1906,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":331,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["consumer",{"_index":496,"title":{},"body":{"modules/BookerEmployeesModule.html":{},"modules/EmployeesModule.html":{},"modules/EstablishmentsModule.html":{},"modules/OrganizationsModule.html":{},"modules/PlanPricesModule.html":{},"modules/PlansModule.html":{},"modules/PromoCodesModule.html":{},"modules/SubscriptionsModule.html":{},"modules/TeamsModule.html":{}}}],["consumer.apply(authmiddleware).forroutes(bookeremployeescontroller",{"_index":500,"title":{},"body":{"modules/BookerEmployeesModule.html":{}}}],["consumer.apply(authmiddleware).forroutes(clientscontroller",{"_index":605,"title":{},"body":{"modules/ClientsModule.html":{}}}],["consumer.apply(authmiddleware).forroutes(employeescontroller",{"_index":1001,"title":{},"body":{"modules/EmployeesModule.html":{}}}],["consumer.apply(authmiddleware).forroutes(establishmentscontroller",{"_index":1044,"title":{},"body":{"modules/EstablishmentsModule.html":{}}}],["consumer.apply(authmiddleware).forroutes(organizationscontroller",{"_index":1319,"title":{},"body":{"modules/OrganizationsModule.html":{}}}],["consumer.apply(authmiddleware).forroutes(planpricescontroller",{"_index":1373,"title":{},"body":{"modules/PlanPricesModule.html":{}}}],["consumer.apply(authmiddleware).forroutes(planscontroller",{"_index":1419,"title":{},"body":{"modules/PlansModule.html":{}}}],["consumer.apply(authmiddleware).forroutes(promocodescontroller",{"_index":1456,"title":{},"body":{"modules/PromoCodesModule.html":{}}}],["consumer.apply(authmiddleware).forroutes(subscriptionscontroller",{"_index":1719,"title":{},"body":{"modules/SubscriptionsModule.html":{}}}],["consumer.apply(authmiddleware).forroutes(teamscontroller",{"_index":1752,"title":{},"body":{"modules/TeamsModule.html":{}}}],["context",{"_index":101,"title":{},"body":{"controllers/AppController.html":{},"guards/AuthGuard.html":{},"classes/CreateLogDto.html":{},"classes/Log.html":{},"classes/LogHelper.html":{},"interfaces/MailProps.html":{},"injectables/MailService.html":{},"controllers/PlansController.html":{},"interfaces/logProps.html":{}}}],["context.gethandler",{"_index":301,"title":{},"body":{"guards/AuthGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":293,"title":{},"body":{"guards/AuthGuard.html":{}}}],["continuer",{"_index":2118,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/BookerEmployeesController.html":{},"controllers/ClientsController.html":{},"controllers/EmployeesController.html":{},"controllers/EstablishmentsController.html":{},"controllers/OrganizationsController.html":{},"controllers/PlanPricesController.html":{},"controllers/PlansController.html":{},"controllers/PromoCodesController.html":{},"controllers/SubscriptionsController.html":{},"controllers/TeamsController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/BookerEmployeesController.html":{},"controllers/ClientsController.html":{},"controllers/EmployeesController.html":{},"controllers/EstablishmentsController.html":{},"controllers/OrganizationsController.html":{},"controllers/PlanPricesController.html":{},"controllers/PlansController.html":{},"controllers/PromoCodesController.html":{},"controllers/SubscriptionsController.html":{},"controllers/TeamsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller(\"booker",{"_index":485,"title":{},"body":{"controllers/BookerEmployeesController.html":{}}}],["controller(\"clients",{"_index":576,"title":{},"body":{"controllers/ClientsController.html":{}}}],["controller(\"employees",{"_index":993,"title":{},"body":{"controllers/EmployeesController.html":{}}}],["controller(\"establishments",{"_index":1036,"title":{},"body":{"controllers/EstablishmentsController.html":{}}}],["controller(\"organizations",{"_index":1311,"title":{},"body":{"controllers/OrganizationsController.html":{}}}],["controller(\"plan",{"_index":1363,"title":{},"body":{"controllers/PlanPricesController.html":{}}}],["controller(\"plans",{"_index":1399,"title":{},"body":{"controllers/PlansController.html":{}}}],["controller(\"promo",{"_index":1447,"title":{},"body":{"controllers/PromoCodesController.html":{}}}],["controller(\"subscriptions",{"_index":1712,"title":{},"body":{"controllers/SubscriptionsController.html":{}}}],["controller(\"teams",{"_index":1744,"title":{},"body":{"controllers/TeamsController.html":{}}}],["controller(\"users",{"_index":1893,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"controllers/BookerEmployeesController.html":{},"modules/BookerEmployeesModule.html":{},"controllers/ClientsController.html":{},"modules/ClientsModule.html":{},"controllers/EmployeesController.html":{},"modules/EmployeesModule.html":{},"controllers/EstablishmentsController.html":{},"modules/EstablishmentsModule.html":{},"controllers/OrganizationsController.html":{},"modules/OrganizationsModule.html":{},"controllers/PlanPricesController.html":{},"modules/PlanPricesModule.html":{},"controllers/PlansController.html":{},"modules/PlansModule.html":{},"controllers/PromoCodesController.html":{},"modules/PromoCodesModule.html":{},"modules/StripeModule.html":{},"controllers/SubscriptionsController.html":{},"modules/SubscriptionsModule.html":{},"controllers/TeamsController.html":{},"modules/TeamsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["convert",{"_index":1284,"title":{},"body":{"classes/NumberHelper.html":{}}}],["cop",{"_index":2046,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["country",{"_index":520,"title":{},"body":{"classes/Client.html":{},"classes/CreateClientDto.html":{},"classes/CreateEstablishmentDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/Establishment.html":{},"classes/Organization.html":{}}}],["coverage",{"_index":1924,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["cozy",{"_index":714,"title":{},"body":{"classes/CreateEstablishmentDto.html":{}}}],["create",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BookerEmployeesController.html":{},"injectables/BookerEmployeesService.html":{},"controllers/ClientsController.html":{},"injectables/ClientsService.html":{},"controllers/EmployeesController.html":{},"injectables/EmployeesService.html":{},"controllers/EstablishmentsController.html":{},"injectables/EstablishmentsService.html":{},"classes/LogHelper.html":{},"injectables/LogsService.html":{},"controllers/OrganizationsController.html":{},"injectables/OrganizationsService.html":{},"controllers/PlanPricesController.html":{},"injectables/PlanPricesService.html":{},"controllers/PlansController.html":{},"injectables/PlansService.html":{},"controllers/PromoCodesController.html":{},"injectables/PromoCodesService.html":{},"injectables/StripeCustomerService.html":{},"injectables/StripePriceService.html":{},"injectables/StripeProductService.html":{},"controllers/SubscriptionsController.html":{},"injectables/SubscriptionsService.html":{},"controllers/TeamsController.html":{},"injectables/TeamsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/logProps.html":{}}}],["create(createclientdto",{"_index":547,"title":{},"body":{"controllers/ClientsController.html":{}}}],["create(createdto",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BookerEmployeesController.html":{},"injectables/BookerEmployeesService.html":{},"injectables/ClientsService.html":{},"controllers/EmployeesController.html":{},"injectables/EmployeesService.html":{},"controllers/EstablishmentsController.html":{},"injectables/EstablishmentsService.html":{},"controllers/OrganizationsController.html":{},"injectables/OrganizationsService.html":{},"controllers/PlanPricesController.html":{},"injectables/PlanPricesService.html":{},"injectables/PlansService.html":{},"controllers/PromoCodesController.html":{},"injectables/PromoCodesService.html":{},"controllers/SubscriptionsController.html":{},"injectables/SubscriptionsService.html":{},"controllers/TeamsController.html":{},"injectables/TeamsService.html":{},"injectables/UsersService.html":{}}}],["create(createlogdto",{"_index":1166,"title":{},"body":{"injectables/LogsService.html":{}}}],["create(createplandto",{"_index":1383,"title":{},"body":{"controllers/PlansController.html":{}}}],["create(createuserdto",{"_index":1874,"title":{},"body":{"controllers/UsersController.html":{}}}],["create(stripecustomerprops",{"_index":1627,"title":{},"body":{"injectables/StripeCustomerService.html":{}}}],["create(stripepriceprops",{"_index":1672,"title":{},"body":{"injectables/StripePriceService.html":{}}}],["create(stripeproductprops",{"_index":1690,"title":{},"body":{"injectables/StripeProductService.html":{}}}],["create_password",{"_index":2148,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["createauthclientdto",{"_index":616,"title":{"classes/CreateAuthClientDto.html":{}},"body":{"classes/CreateAuthClientDto.html":{},"classes/UpdateAuthClientDto.html":{},"coverage.html":{}}}],["createauthorganizationdto",{"_index":623,"title":{"classes/CreateAuthOrganizationDto.html":{}},"body":{"classes/CreateAuthOrganizationDto.html":{},"coverage.html":{}}}],["createbookeremployeedto",{"_index":472,"title":{"classes/CreateBookerEmployeeDto.html":{}},"body":{"controllers/BookerEmployeesController.html":{},"injectables/BookerEmployeesService.html":{},"classes/CreateAuthOrganizationDto.html":{},"classes/CreateBookerEmployeeDto.html":{},"classes/UpdateBookerEmployeeDto.html":{},"coverage.html":{}}}],["createclientdto",{"_index":548,"title":{"classes/CreateClientDto.html":{}},"body":{"controllers/ClientsController.html":{},"injectables/ClientsService.html":{},"classes/CreateAuthClientDto.html":{},"classes/CreateClientDto.html":{},"classes/UpdateClientDto.html":{},"coverage.html":{}}}],["created",{"_index":99,"title":{},"body":{"controllers/AppController.html":{},"controllers/ClientsController.html":{},"classes/CreateLogDto.html":{},"classes/CreatePlanPriceDto.html":{},"injectables/LogsService.html":{},"controllers/PlansController.html":{},"classes/Responses.html":{},"interfaces/ResponsesProps.html":{},"controllers/UsersController.html":{}}}],["created.'})@apiresponse({status",{"_index":552,"title":{},"body":{"controllers/ClientsController.html":{},"controllers/PlansController.html":{},"controllers/UsersController.html":{}}}],["created.save",{"_index":1177,"title":{},"body":{"injectables/LogsService.html":{}}}],["createdat",{"_index":443,"title":{},"body":{"classes/BookerEmployee.html":{},"classes/Client.html":{},"classes/CreatePlanPriceDto.html":{},"classes/Employee.html":{},"classes/Establishment.html":{},"classes/Log.html":{},"classes/Organization.html":{},"classes/Plan.html":{},"classes/PlanPrice.html":{},"classes/PromoCode.html":{},"classes/Subscription.html":{},"classes/Team.html":{},"classes/User.html":{}}}],["createdmodel",{"_index":242,"title":{},"body":{"injectables/AppService.html":{}}}],["createdmodel.save",{"_index":244,"title":{},"body":{"injectables/AppService.html":{}}}],["createdto",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BookerEmployeesController.html":{},"injectables/BookerEmployeesService.html":{},"injectables/ClientsService.html":{},"controllers/EmployeesController.html":{},"injectables/EmployeesService.html":{},"controllers/EstablishmentsController.html":{},"injectables/EstablishmentsService.html":{},"controllers/OrganizationsController.html":{},"injectables/OrganizationsService.html":{},"controllers/PlanPricesController.html":{},"injectables/PlanPricesService.html":{},"injectables/PlansService.html":{},"controllers/PromoCodesController.html":{},"injectables/PromoCodesService.html":{},"controllers/SubscriptionsController.html":{},"injectables/SubscriptionsService.html":{},"controllers/TeamsController.html":{},"injectables/TeamsService.html":{},"injectables/UsersService.html":{}}}],["createemployeedto",{"_index":685,"title":{"classes/CreateEmployeeDto.html":{}},"body":{"classes/CreateEmployeeDto.html":{},"controllers/EmployeesController.html":{},"injectables/EmployeesService.html":{},"classes/UpdateEmployeeDto.html":{},"coverage.html":{}}}],["createestablishmentdto",{"_index":693,"title":{"classes/CreateEstablishmentDto.html":{}},"body":{"classes/CreateEstablishmentDto.html":{},"controllers/EstablishmentsController.html":{},"injectables/EstablishmentsService.html":{},"classes/UpdateEstablishmentDto.html":{},"coverage.html":{}}}],["createlogdto",{"_index":744,"title":{"classes/CreateLogDto.html":{}},"body":{"classes/CreateLogDto.html":{},"injectables/LogsService.html":{},"classes/UpdateLogDto.html":{},"coverage.html":{}}}],["createlogdto.ip",{"_index":1174,"title":{},"body":{"injectables/LogsService.html":{}}}],["createorganizationdto",{"_index":628,"title":{"classes/CreateOrganizationDto.html":{}},"body":{"classes/CreateAuthOrganizationDto.html":{},"classes/CreateOrganizationDto.html":{},"controllers/OrganizationsController.html":{},"injectables/OrganizationsService.html":{},"classes/UpdateOrganizationDto.html":{},"coverage.html":{}}}],["createplandto",{"_index":811,"title":{"classes/CreatePlanDto.html":{}},"body":{"classes/CreatePlanDto.html":{},"controllers/PlansController.html":{},"injectables/PlansService.html":{},"classes/UpdatePlanDto.html":{},"coverage.html":{}}}],["createplanpricedto",{"_index":856,"title":{"classes/CreatePlanPriceDto.html":{}},"body":{"classes/CreatePlanPriceDto.html":{},"controllers/PlanPricesController.html":{},"injectables/PlanPricesService.html":{},"classes/UpdatePlanPriceDto.html":{},"coverage.html":{}}}],["createpromocodedto",{"_index":906,"title":{"classes/CreatePromoCodeDto.html":{}},"body":{"classes/CreatePromoCodeDto.html":{},"controllers/PromoCodesController.html":{},"injectables/PromoCodesService.html":{},"classes/UpdatePromoCodeDto.html":{},"coverage.html":{}}}],["createsubscriptiondto",{"_index":911,"title":{"classes/CreateSubscriptionDto.html":{}},"body":{"classes/CreateSubscriptionDto.html":{},"controllers/SubscriptionsController.html":{},"injectables/SubscriptionsService.html":{},"classes/UpdateSubscriptionDto.html":{},"coverage.html":{}}}],["createteamdto",{"_index":914,"title":{"classes/CreateTeamDto.html":{}},"body":{"classes/CreateTeamDto.html":{},"controllers/TeamsController.html":{},"injectables/TeamsService.html":{},"classes/UpdateTeamDto.html":{},"coverage.html":{}}}],["createuserdto",{"_index":620,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateAuthClientDto.html":{},"classes/CreateAuthOrganizationDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["createuserdto.role",{"_index":1895,"title":{},"body":{"controllers/UsersController.html":{}}}],["creating",{"_index":124,"title":{},"body":{"controllers/AppController.html":{},"controllers/PlansController.html":{}}}],["critical",{"_index":2111,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["critique",{"_index":2123,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["critiques",{"_index":2109,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["crypto",{"_index":1539,"title":{},"body":{"classes/SecurityHelper.html":{},"dependencies.html":{}}}],["crypto.createcipheriv",{"_index":1549,"title":{},"body":{"classes/SecurityHelper.html":{}}}],["crypto.createdecipheriv",{"_index":1558,"title":{},"body":{"classes/SecurityHelper.html":{}}}],["crypto.randombytes(16",{"_index":1547,"title":{},"body":{"classes/SecurityHelper.html":{}}}],["csurf",{"_index":1985,"title":{},"body":{"dependencies.html":{}}}],["ctr",{"_index":1524,"title":{},"body":{"classes/SecurityHelper.html":{}}}],["ctx",{"_index":1072,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["ctx.getrequest",{"_index":1075,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":1074,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["currency",{"_index":816,"title":{},"body":{"classes/CreatePlanDto.html":{},"classes/CreatePlanPriceDto.html":{},"classes/PlanPrice.html":{},"classes/StripePriceProps.html":{},"injectables/StripePriceService.html":{}}}],["currencyenum",{"_index":878,"title":{},"body":{"classes/CreatePlanPriceDto.html":{},"classes/StripePriceProps.html":{},"miscellaneous/enumerations.html":{}}}],["currently",{"_index":820,"title":{},"body":{"classes/CreatePlanDto.html":{}}}],["custom",{"_index":680,"title":{},"body":{"classes/CreateClientDto.html":{}}}],["customer",{"_index":296,"title":{},"body":{"guards/AuthGuard.html":{},"modules/MongooseConfig.html":{}}}],["customer.interface",{"_index":1635,"title":{},"body":{"injectables/StripeCustomerService.html":{}}}],["customer.interface.ts",{"_index":1619,"title":{},"body":{"classes/StripeCustomerProps.html":{},"coverage.html":{}}}],["customer.interface.ts:2",{"_index":1621,"title":{},"body":{"classes/StripeCustomerProps.html":{}}}],["customer.interface.ts:3",{"_index":1620,"title":{},"body":{"classes/StripeCustomerProps.html":{}}}],["customer.name",{"_index":1259,"title":{},"body":{"modules/MongooseConfig.html":{}}}],["customer.service.ts",{"_index":1623,"title":{},"body":{"injectables/StripeCustomerService.html":{},"coverage.html":{}}}],["customer.service.ts:18",{"_index":1632,"title":{},"body":{"injectables/StripeCustomerService.html":{}}}],["customer.service.ts:22",{"_index":1633,"title":{},"body":{"injectables/StripeCustomerService.html":{}}}],["customer.service.ts:31",{"_index":1630,"title":{},"body":{"injectables/StripeCustomerService.html":{}}}],["customer.service.ts:6",{"_index":1626,"title":{},"body":{"injectables/StripeCustomerService.html":{}}}],["customer.service.ts:9",{"_index":1628,"title":{},"body":{"injectables/StripeCustomerService.html":{}}}],["customerschema",{"_index":1239,"title":{},"body":{"modules/MongooseConfig.html":{}}}],["customersmodule",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"modules/ClientsModule.html":{}}}],["customersservice",{"_index":283,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/ClientsModule.html":{}}}],["customfield",{"_index":1235,"title":{},"body":{"modules/MongooseConfig.html":{}}}],["customfield.name",{"_index":1258,"title":{},"body":{"modules/MongooseConfig.html":{}}}],["customfielddto",{"_index":942,"title":{"classes/CustomFieldDto.html":{}},"body":{"classes/CustomFieldDto.html":{},"coverage.html":{}}}],["customfieldid",{"_index":956,"title":{},"body":{"classes/CustomFieldValueDto.html":{}}}],["customfieldschema",{"_index":1236,"title":{},"body":{"modules/MongooseConfig.html":{}}}],["customfieldsmodule",{"_index":185,"title":{},"body":{"modules/AppModule.html":{},"modules/ClientsModule.html":{}}}],["customfieldsservice",{"_index":603,"title":{},"body":{"modules/ClientsModule.html":{}}}],["customfieldvaluedto",{"_index":674,"title":{"classes/CustomFieldValueDto.html":{}},"body":{"classes/CreateClientDto.html":{},"classes/CustomFieldValueDto.html":{},"coverage.html":{}}}],["customfieldvalues",{"_index":541,"title":{},"body":{"classes/Client.html":{},"classes/CreateClientDto.html":{}}}],["customvalidationpipe",{"_index":959,"title":{"injectables/CustomValidationPipe.html":{}},"body":{"injectables/CustomValidationPipe.html":{},"coverage.html":{}}}],["cycle",{"_index":884,"title":{},"body":{"classes/CreatePlanPriceDto.html":{}}}],["czk",{"_index":2041,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["d'alerte",{"_index":2098,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["d'urgence",{"_index":2122,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dans",{"_index":2074,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["data",{"_index":89,"title":{},"body":{"controllers/AppController.html":{},"controllers/ClientsController.html":{},"classes/Hash.html":{},"classes/Responses.html":{},"interfaces/ResponsesProps.html":{}}}],["data.length",{"_index":129,"title":{},"body":{"controllers/AppController.html":{}}}],["data?.length",{"_index":596,"title":{},"body":{"controllers/ClientsController.html":{}}}],["datahash",{"_index":1090,"title":{},"body":{"classes/Hash.html":{}}}],["datatocompare",{"_index":1101,"title":{},"body":{"classes/Hash.html":{}}}],["date",{"_index":446,"title":{},"body":{"classes/BookerEmployee.html":{},"classes/Client.html":{},"classes/CreatePlanPriceDto.html":{},"classes/Employee.html":{},"classes/Establishment.html":{},"classes/Log.html":{},"classes/Organization.html":{},"classes/Plan.html":{},"classes/PlanPrice.html":{},"classes/PromoCode.html":{},"classes/Subscription.html":{},"classes/Team.html":{},"injectables/Token.html":{},"classes/User.html":{}}}],["day",{"_index":2068,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["days",{"_index":846,"title":{},"body":{"classes/CreatePlanDto.html":{},"classes/CreatePlanPriceDto.html":{}}}],["de",{"_index":2072,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["debug",{"_index":2088,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["decipher",{"_index":1557,"title":{},"body":{"classes/SecurityHelper.html":{}}}],["decipher.final",{"_index":1564,"title":{},"body":{"classes/SecurityHelper.html":{}}}],["decipher.update(buffer.from(encrypted",{"_index":1563,"title":{},"body":{"classes/SecurityHelper.html":{}}}],["declarations",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookerEmployeesModule.html":{},"modules/ClientsModule.html":{},"modules/EmployeesModule.html":{},"modules/EstablishmentsModule.html":{},"modules/JwtModule.html":{},"modules/LogsModule.html":{},"modules/MailModule.html":{},"modules/OrganizationsModule.html":{},"modules/PlanPricesModule.html":{},"modules/PlansModule.html":{},"modules/PromoCodesModule.html":{},"modules/StripeModule.html":{},"modules/SubscriptionsModule.html":{},"modules/TeamsModule.html":{},"modules/ThrottlerConfig.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decodedtoken",{"_index":1821,"title":{},"body":{"injectables/Token.html":{}}}],["decodedtoken.exp",{"_index":1823,"title":{},"body":{"injectables/Token.html":{}}}],["decorators",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"classes/BookerEmployee.html":{},"controllers/BookerEmployeesController.html":{},"classes/Client.html":{},"controllers/ClientsController.html":{},"classes/CreateAuthOrganizationDto.html":{},"classes/CreateBookerEmployeeDto.html":{},"classes/CreateClientDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEstablishmentDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreatePlanPriceDto.html":{},"classes/CreateUserDto.html":{},"classes/CustomFieldDto.html":{},"classes/CustomFieldValueDto.html":{},"classes/Employee.html":{},"controllers/EmployeesController.html":{},"classes/Establishment.html":{},"controllers/EstablishmentsController.html":{},"classes/FlagDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/Log.html":{},"classes/LoginUserDto.html":{},"classes/Organization.html":{},"controllers/OrganizationsController.html":{},"classes/Plan.html":{},"classes/PlanPrice.html":{},"controllers/PlanPricesController.html":{},"controllers/PlansController.html":{},"controllers/PromoCodesController.html":{},"classes/RefreshTokenDto.html":{},"classes/ResetPasswordDto.html":{},"controllers/SubscriptionsController.html":{},"controllers/TeamsController.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["decorators/ownership.decorator",{"_index":291,"title":{},"body":{"guards/AuthGuard.html":{}}}],["decorators/roles.decorator",{"_index":289,"title":{},"body":{"guards/AuthGuard.html":{}}}],["decrypt",{"_index":1520,"title":{},"body":{"classes/SecurityHelper.html":{}}}],["decrypt(encryptedtext",{"_index":1533,"title":{},"body":{"classes/SecurityHelper.html":{}}}],["decrypted",{"_index":1561,"title":{},"body":{"classes/SecurityHelper.html":{}}}],["decrypted.tostring",{"_index":1565,"title":{},"body":{"classes/SecurityHelper.html":{}}}],["default",{"_index":539,"title":{},"body":{"classes/Client.html":{},"classes/CreatePlanPriceDto.html":{},"classes/Establishment.html":{},"classes/Hash.html":{},"injectables/MailHelper.html":{},"classes/Organization.html":{},"classes/Responses.html":{},"interfaces/ResponsesProps.html":{},"classes/SecurityHelper.html":{},"injectables/Token.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["default_encryption_key",{"_index":1527,"title":{},"body":{"classes/SecurityHelper.html":{}}}],["defaults",{"_index":1203,"title":{},"body":{"modules/MailModule.html":{}}}],["defined",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"classes/BookerEmployee.html":{},"controllers/BookerEmployeesController.html":{},"modules/BookerEmployeesModule.html":{},"injectables/BookerEmployeesService.html":{},"classes/Client.html":{},"controllers/ClientsController.html":{},"injectables/ClientsService.html":{},"classes/CreateAuthOrganizationDto.html":{},"classes/CreateBookerEmployeeDto.html":{},"classes/CreateClientDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEstablishmentDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreatePlanPriceDto.html":{},"classes/CreateUserDto.html":{},"classes/CustomFieldDto.html":{},"classes/CustomFieldValueDto.html":{},"injectables/CustomValidationPipe.html":{},"classes/Employee.html":{},"controllers/EmployeesController.html":{},"modules/EmployeesModule.html":{},"injectables/EmployeesService.html":{},"classes/Establishment.html":{},"controllers/EstablishmentsController.html":{},"modules/EstablishmentsModule.html":{},"injectables/EstablishmentsService.html":{},"classes/FlagDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/GlobalExceptionFilter.html":{},"classes/Hash.html":{},"classes/Log.html":{},"classes/LogHelper.html":{},"classes/LoginUserDto.html":{},"injectables/LogsService.html":{},"injectables/MailHelper.html":{},"injectables/MailService.html":{},"classes/NotificationHelper.html":{},"classes/NumberHelper.html":{},"classes/Organization.html":{},"controllers/OrganizationsController.html":{},"modules/OrganizationsModule.html":{},"injectables/OrganizationsService.html":{},"classes/Plan.html":{},"classes/PlanPrice.html":{},"controllers/PlanPricesController.html":{},"modules/PlanPricesModule.html":{},"injectables/PlanPricesService.html":{},"controllers/PlansController.html":{},"modules/PlansModule.html":{},"injectables/PlansService.html":{},"classes/PromoCode.html":{},"controllers/PromoCodesController.html":{},"modules/PromoCodesModule.html":{},"injectables/PromoCodesService.html":{},"classes/RefreshTokenDto.html":{},"classes/ResetPasswordDto.html":{},"classes/Responses.html":{},"classes/SecurityHelper.html":{},"classes/StringHelper.html":{},"classes/StripeCustomerProps.html":{},"injectables/StripeCustomerService.html":{},"classes/StripePriceProps.html":{},"injectables/StripePriceService.html":{},"classes/StripeProductProps.html":{},"injectables/StripeProductService.html":{},"classes/Subscription.html":{},"controllers/SubscriptionsController.html":{},"modules/SubscriptionsModule.html":{},"injectables/SubscriptionsService.html":{},"classes/Team.html":{},"controllers/TeamsController.html":{},"modules/TeamsModule.html":{},"injectables/TeamsService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"injectables/Token.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":49,"title":{},"body":{"controllers/AppController.html":{},"controllers/ClientsController.html":{},"classes/Responses.html":{},"interfaces/ResponsesProps.html":{},"injectables/StripeCustomerService.html":{},"injectables/StripePriceService.html":{},"injectables/StripeProductService.html":{},"controllers/UsersController.html":{}}}],["delete(\":id",{"_index":141,"title":{},"body":{"controllers/AppController.html":{},"controllers/ClientsController.html":{},"controllers/UsersController.html":{}}}],["delete(':id",{"_index":41,"title":{},"body":{"controllers/AppController.html":{},"controllers/BookerEmployeesController.html":{},"controllers/EmployeesController.html":{},"controllers/EstablishmentsController.html":{},"controllers/OrganizationsController.html":{},"controllers/PlanPricesController.html":{},"controllers/PlansController.html":{},"controllers/PromoCodesController.html":{},"controllers/SubscriptionsController.html":{},"controllers/TeamsController.html":{}}}],["delete(id",{"_index":1629,"title":{},"body":{"injectables/StripeCustomerService.html":{},"injectables/StripePriceService.html":{},"injectables/StripeProductService.html":{}}}],["deleted",{"_index":587,"title":{},"body":{"controllers/ClientsController.html":{},"classes/Responses.html":{},"interfaces/ResponsesProps.html":{},"controllers/UsersController.html":{}}}],["deleted.'})@apiresponse({status",{"_index":564,"title":{},"body":{"controllers/ClientsController.html":{},"controllers/UsersController.html":{}}}],["dependencies",{"_index":149,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookerEmployeesModule.html":{},"modules/ClientsModule.html":{},"modules/EmployeesModule.html":{},"modules/EstablishmentsModule.html":{},"modules/JwtModule.html":{},"modules/LogsModule.html":{},"modules/MailModule.html":{},"modules/OrganizationsModule.html":{},"modules/PlanPricesModule.html":{},"modules/PlansModule.html":{},"modules/PromoCodesModule.html":{},"modules/StripeModule.html":{},"modules/SubscriptionsModule.html":{},"modules/TeamsModule.html":{},"modules/ThrottlerConfig.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["des",{"_index":2127,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["description",{"_index":397,"title":{},"body":{"interfaces/BaseProps.html":{},"controllers/ClientsController.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"classes/CreateBookerEmployeeDto.html":{},"classes/CreateClientDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEstablishmentDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreatePlanPriceDto.html":{},"classes/CreateUserDto.html":{},"classes/Establishment.html":{},"classes/Hash.html":{},"interfaces/InitPasswordProps.html":{},"classes/LoginUserDto.html":{},"injectables/MailHelper.html":{},"classes/NumberHelper.html":{},"classes/Organization.html":{},"classes/Plan.html":{},"controllers/PlansController.html":{},"interfaces/ResetPasswordProps.html":{},"classes/StringHelper.html":{},"controllers/UsersController.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":2171,"title":{},"body":{"index.html":{}}}],["digit",{"_index":1276,"title":{},"body":{"classes/NumberHelper.html":{}}}],["dir",{"_index":1205,"title":{},"body":{"modules/MailModule.html":{}}}],["disponibles",{"_index":2081,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dkk",{"_index":2034,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["document",{"_index":55,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/BookerEmployee.html":{},"classes/Client.html":{},"classes/CreateAuthClientDto.html":{},"classes/Employee.html":{},"classes/Establishment.html":{},"classes/Log.html":{},"classes/Organization.html":{},"classes/Plan.html":{},"classes/PlanPrice.html":{},"classes/PromoCode.html":{},"classes/Subscription.html":{},"classes/Team.html":{},"classes/User.html":{}}}],["documentation",{"_index":1925,"title":{},"body":{"coverage.html":{}}}],["doe",{"_index":654,"title":{},"body":{"classes/CreateBookerEmployeeDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateLogDto.html":{}}}],["doe'})@isnotempty()@isstring",{"_index":642,"title":{},"body":{"classes/CreateBookerEmployeeDto.html":{},"classes/CreateEmployeeDto.html":{}}}],["doe'})@isoptional()@isstring",{"_index":758,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["dotenv",{"_index":1987,"title":{},"body":{"dependencies.html":{}}}],["dto/update",{"_index":1916,"title":{},"body":{"injectables/UsersService.html":{}}}],["dtos/custom",{"_index":675,"title":{},"body":{"classes/CreateClientDto.html":{}}}],["du",{"_index":2087,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dzd",{"_index":2052,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["débogage",{"_index":2091,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["détaill",{"_index":2086,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["e.g",{"_index":748,"title":{},"body":{"classes/CreateLogDto.html":{},"classes/CreatePlanDto.html":{}}}],["e2e",{"_index":2179,"title":{},"body":{"index.html":{}}}],["each",{"_index":684,"title":{},"body":{"classes/CreateClientDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreatePlanPriceDto.html":{}}}],["efficient",{"_index":2158,"title":{},"body":{"index.html":{}}}],["egp",{"_index":2053,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ejs",{"_index":1989,"title":{},"body":{"dependencies.html":{}}}],["email",{"_index":400,"title":{},"body":{"interfaces/BaseProps.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"classes/CreateClientDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateUserDto.html":{},"classes/ForgotPasswordDto.html":{},"interfaces/InitPasswordProps.html":{},"classes/LoginUserDto.html":{},"injectables/MailHelper.html":{},"interfaces/ResetPasswordProps.html":{},"classes/StripeCustomerProps.html":{},"injectables/StripeCustomerService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["emergency",{"_index":2120,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["employee",{"_index":637,"title":{"classes/Employee.html":{}},"body":{"classes/CreateBookerEmployeeDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/Employee.html":{},"injectables/EmployeesService.html":{},"coverage.html":{}}}],["employee.dto",{"_index":474,"title":{},"body":{"controllers/BookerEmployeesController.html":{},"injectables/BookerEmployeesService.html":{},"classes/CreateAuthOrganizationDto.html":{},"controllers/EmployeesController.html":{},"injectables/EmployeesService.html":{},"classes/UpdateBookerEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["employee.dto.ts",{"_index":634,"title":{},"body":{"classes/CreateBookerEmployeeDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/UpdateBookerEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{},"coverage.html":{}}}],["employee.dto.ts:11",{"_index":645,"title":{},"body":{"classes/CreateBookerEmployeeDto.html":{},"classes/CreateEmployeeDto.html":{}}}],["employee.dto.ts:19",{"_index":643,"title":{},"body":{"classes/CreateBookerEmployeeDto.html":{},"classes/CreateEmployeeDto.html":{}}}],["employee.dto.ts:27",{"_index":640,"title":{},"body":{"classes/CreateBookerEmployeeDto.html":{},"classes/CreateEmployeeDto.html":{}}}],["employee.dto.ts:35",{"_index":689,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["employee.dto.ts:43",{"_index":691,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["employee.entity",{"_index":477,"title":{},"body":{"controllers/BookerEmployeesController.html":{},"injectables/BookerEmployeesService.html":{}}}],["employee.entity.ts",{"_index":442,"title":{},"body":{"classes/BookerEmployee.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["employee.entity.ts:11",{"_index":453,"title":{},"body":{"classes/BookerEmployee.html":{}}}],["employee.entity.ts:14",{"_index":450,"title":{},"body":{"classes/BookerEmployee.html":{}}}],["employee.entity.ts:17",{"_index":449,"title":{},"body":{"classes/BookerEmployee.html":{}}}],["employee.entity.ts:19",{"_index":447,"title":{},"body":{"classes/BookerEmployee.html":{}}}],["employee.entity.ts:20",{"_index":451,"title":{},"body":{"classes/BookerEmployee.html":{}}}],["employeedocument",{"_index":983,"title":{},"body":{"classes/Employee.html":{},"controllers/EmployeesController.html":{},"injectables/EmployeesService.html":{},"classes/LogHelper.html":{},"interfaces/logProps.html":{},"miscellaneous/typealiases.html":{}}}],["employees",{"_index":465,"title":{},"body":{"controllers/BookerEmployeesController.html":{},"controllers/EmployeesController.html":{}}}],["employees.controller",{"_index":499,"title":{},"body":{"modules/BookerEmployeesModule.html":{}}}],["employees.controller.ts",{"_index":462,"title":{},"body":{"controllers/BookerEmployeesController.html":{},"coverage.html":{}}}],["employees.module.ts",{"_index":492,"title":{},"body":{"modules/BookerEmployeesModule.html":{}}}],["employees.module.ts:13",{"_index":495,"title":{},"body":{"modules/BookerEmployeesModule.html":{}}}],["employees.service",{"_index":345,"title":{},"body":{"injectables/AuthMiddleware.html":{},"controllers/BookerEmployeesController.html":{},"modules/BookerEmployeesModule.html":{}}}],["employees.service.ts",{"_index":501,"title":{},"body":{"injectables/BookerEmployeesService.html":{},"coverage.html":{}}}],["employees.service.ts:17",{"_index":503,"title":{},"body":{"injectables/BookerEmployeesService.html":{}}}],["employees/booker",{"_index":344,"title":{},"body":{"injectables/AuthMiddleware.html":{},"controllers/BookerEmployeesController.html":{},"modules/BookerEmployeesModule.html":{},"injectables/BookerEmployeesService.html":{},"coverage.html":{}}}],["employees/dto/create",{"_index":473,"title":{},"body":{"controllers/BookerEmployeesController.html":{},"injectables/BookerEmployeesService.html":{},"classes/CreateAuthOrganizationDto.html":{},"classes/CreateBookerEmployeeDto.html":{},"classes/UpdateBookerEmployeeDto.html":{},"coverage.html":{}}}],["employees/dto/update",{"_index":476,"title":{},"body":{"controllers/BookerEmployeesController.html":{},"injectables/BookerEmployeesService.html":{},"classes/UpdateBookerEmployeeDto.html":{},"coverage.html":{}}}],["employees/entities/booker",{"_index":441,"title":{},"body":{"classes/BookerEmployee.html":{},"controllers/BookerEmployeesController.html":{},"injectables/BookerEmployeesService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["employeeschema",{"_index":984,"title":{},"body":{"classes/Employee.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["employeescontroller",{"_index":986,"title":{"controllers/EmployeesController.html":{}},"body":{"controllers/EmployeesController.html":{},"modules/EmployeesModule.html":{},"coverage.html":{}}}],["employeesmodel",{"_index":1005,"title":{},"body":{"injectables/EmployeesService.html":{}}}],["employeesmodule",{"_index":995,"title":{"modules/EmployeesModule.html":{}},"body":{"modules/EmployeesModule.html":{},"modules.html":{},"overview.html":{}}}],["employeesservice",{"_index":333,"title":{"injectables/EmployeesService.html":{}},"body":{"injectables/AuthMiddleware.html":{},"controllers/EmployeesController.html":{},"modules/EmployeesModule.html":{},"injectables/EmployeesService.html":{},"coverage.html":{},"overview.html":{}}}],["encrypt",{"_index":1521,"title":{},"body":{"classes/SecurityHelper.html":{}}}],["encrypt(text",{"_index":1536,"title":{},"body":{"classes/SecurityHelper.html":{}}}],["encrypted",{"_index":1552,"title":{},"body":{"classes/SecurityHelper.html":{}}}],["encryptedtext",{"_index":1535,"title":{},"body":{"classes/SecurityHelper.html":{}}}],["encryptedtext.split",{"_index":1556,"title":{},"body":{"classes/SecurityHelper.html":{}}}],["encryptionkey",{"_index":1517,"title":{},"body":{"classes/SecurityHelper.html":{}}}],["enum",{"_index":877,"title":{},"body":{"classes/CreatePlanPriceDto.html":{},"classes/CreateUserDto.html":{},"classes/Log.html":{},"classes/User.html":{}}}],["enumerations",{"_index":2007,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/currency.enum",{"_index":898,"title":{},"body":{"classes/CreatePlanPriceDto.html":{},"classes/StripePriceProps.html":{}}}],["enums/interval.enum",{"_index":899,"title":{},"body":{"classes/CreatePlanPriceDto.html":{}}}],["enums/log",{"_index":65,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateLogDto.html":{},"classes/Log.html":{},"classes/LogHelper.html":{},"controllers/PlansController.html":{},"interfaces/logProps.html":{}}}],["enums/token",{"_index":1801,"title":{},"body":{"injectables/Token.html":{}}}],["enums/user",{"_index":286,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"classes/CreateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["env",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["err",{"_index":374,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["erreurs",{"_index":2100,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":116,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"controllers/ClientsController.html":{},"classes/CreateLogDto.html":{},"injectables/CustomValidationPipe.html":{},"classes/GlobalExceptionFilter.html":{},"classes/Hash.html":{},"injectables/LogsService.html":{},"classes/NotificationHelper.html":{},"controllers/PlansController.html":{},"classes/Responses.html":{},"interfaces/ResponsesProps.html":{},"injectables/Token.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["error(\"an",{"_index":1806,"title":{},"body":{"injectables/Token.html":{}}}],["error(\"failed",{"_index":1405,"title":{},"body":{"controllers/PlansController.html":{}}}],["error(\"not",{"_index":105,"title":{},"body":{"controllers/AppController.html":{},"controllers/ClientsController.html":{}}}],["error(\"token",{"_index":1819,"title":{},"body":{"injectables/Token.html":{}}}],["error.getresponse",{"_index":972,"title":{},"body":{"injectables/CustomValidationPipe.html":{}}}],["error.message",{"_index":120,"title":{},"body":{"controllers/AppController.html":{},"controllers/ClientsController.html":{},"controllers/PlansController.html":{}}}],["errors",{"_index":971,"title":{},"body":{"injectables/CustomValidationPipe.html":{}}}],["establishment",{"_index":701,"title":{"classes/Establishment.html":{}},"body":{"classes/CreateEstablishmentDto.html":{},"classes/Establishment.html":{},"injectables/EstablishmentsService.html":{},"coverage.html":{}}}],["establishment.dto",{"_index":1031,"title":{},"body":{"controllers/EstablishmentsController.html":{},"injectables/EstablishmentsService.html":{},"classes/UpdateEstablishmentDto.html":{}}}],["establishment.dto.ts",{"_index":695,"title":{},"body":{"classes/CreateEstablishmentDto.html":{},"classes/UpdateEstablishmentDto.html":{},"coverage.html":{}}}],["establishment.dto.ts:11",{"_index":726,"title":{},"body":{"classes/CreateEstablishmentDto.html":{}}}],["establishment.dto.ts:19",{"_index":720,"title":{},"body":{"classes/CreateEstablishmentDto.html":{}}}],["establishment.dto.ts:27",{"_index":735,"title":{},"body":{"classes/CreateEstablishmentDto.html":{}}}],["establishment.dto.ts:35",{"_index":731,"title":{},"body":{"classes/CreateEstablishmentDto.html":{}}}],["establishment.dto.ts:43",{"_index":705,"title":{},"body":{"classes/CreateEstablishmentDto.html":{}}}],["establishment.dto.ts:51",{"_index":709,"title":{},"body":{"classes/CreateEstablishmentDto.html":{}}}],["establishment.dto.ts:59",{"_index":733,"title":{},"body":{"classes/CreateEstablishmentDto.html":{}}}],["establishment.dto.ts:67",{"_index":711,"title":{},"body":{"classes/CreateEstablishmentDto.html":{}}}],["establishment.dto.ts:75",{"_index":713,"title":{},"body":{"classes/CreateEstablishmentDto.html":{}}}],["establishment.dto.ts:83",{"_index":723,"title":{},"body":{"classes/CreateEstablishmentDto.html":{}}}],["establishment.dto.ts:91",{"_index":729,"title":{},"body":{"classes/CreateEstablishmentDto.html":{}}}],["establishmentdocument",{"_index":1022,"title":{},"body":{"classes/Establishment.html":{},"controllers/EstablishmentsController.html":{},"injectables/EstablishmentsService.html":{},"miscellaneous/typealiases.html":{}}}],["establishments",{"_index":1027,"title":{},"body":{"controllers/EstablishmentsController.html":{}}}],["establishmentschema",{"_index":1023,"title":{},"body":{"classes/Establishment.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["establishmentscontroller",{"_index":1025,"title":{"controllers/EstablishmentsController.html":{}},"body":{"controllers/EstablishmentsController.html":{},"modules/EstablishmentsModule.html":{},"coverage.html":{}}}],["establishmentsmodel",{"_index":1048,"title":{},"body":{"injectables/EstablishmentsService.html":{}}}],["establishmentsmodule",{"_index":1038,"title":{"modules/EstablishmentsModule.html":{}},"body":{"modules/EstablishmentsModule.html":{},"modules.html":{},"overview.html":{}}}],["establishmentsservice",{"_index":1028,"title":{"injectables/EstablishmentsService.html":{}},"body":{"controllers/EstablishmentsController.html":{},"modules/EstablishmentsModule.html":{},"injectables/EstablishmentsService.html":{},"coverage.html":{},"overview.html":{}}}],["eur",{"_index":2018,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["example",{"_index":638,"title":{},"body":{"classes/CreateBookerEmployeeDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEstablishmentDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreatePlanPriceDto.html":{},"index.html":{}}}],["exception",{"_index":1070,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["exception.getresponse",{"_index":1079,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["exception.getstatus",{"_index":1078,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["exception.message",{"_index":1080,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["exceptionfilter",{"_index":1065,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["excludepassword",{"_index":1865,"title":{},"body":{"classes/User.html":{}}}],["exec",{"_index":251,"title":{},"body":{"injectables/AppService.html":{},"injectables/UsersService.html":{}}}],["executioncontext",{"_index":274,"title":{},"body":{"guards/AuthGuard.html":{}}}],["expiration",{"_index":1824,"title":{},"body":{"injectables/Token.html":{}}}],["expired",{"_index":362,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["expiresin",{"_index":1790,"title":{},"body":{"injectables/Token.html":{}}}],["export",{"_index":71,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"interfaces/BaseProps.html":{},"classes/BookerEmployee.html":{},"controllers/BookerEmployeesController.html":{},"modules/BookerEmployeesModule.html":{},"injectables/BookerEmployeesService.html":{},"classes/Client.html":{},"controllers/ClientsController.html":{},"modules/ClientsModule.html":{},"injectables/ClientsService.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"classes/CreateAuthClientDto.html":{},"classes/CreateAuthOrganizationDto.html":{},"classes/CreateBookerEmployeeDto.html":{},"classes/CreateClientDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEstablishmentDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreatePlanPriceDto.html":{},"classes/CreatePromoCodeDto.html":{},"classes/CreateSubscriptionDto.html":{},"classes/CreateTeamDto.html":{},"classes/CreateUserDto.html":{},"classes/CustomFieldDto.html":{},"classes/CustomFieldValueDto.html":{},"injectables/CustomValidationPipe.html":{},"classes/Employee.html":{},"controllers/EmployeesController.html":{},"modules/EmployeesModule.html":{},"injectables/EmployeesService.html":{},"classes/Establishment.html":{},"controllers/EstablishmentsController.html":{},"modules/EstablishmentsModule.html":{},"injectables/EstablishmentsService.html":{},"classes/FlagDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/GlobalExceptionFilter.html":{},"classes/Hash.html":{},"interfaces/InitPasswordProps.html":{},"modules/JwtModule.html":{},"classes/Log.html":{},"classes/LogHelper.html":{},"classes/LoginUserDto.html":{},"modules/LogsModule.html":{},"injectables/LogsService.html":{},"injectables/MailHelper.html":{},"modules/MailModule.html":{},"interfaces/MailProps.html":{},"injectables/MailService.html":{},"modules/MongooseConfig.html":{},"classes/NotificationHelper.html":{},"classes/NumberHelper.html":{},"classes/Organization.html":{},"controllers/OrganizationsController.html":{},"modules/OrganizationsModule.html":{},"injectables/OrganizationsService.html":{},"classes/Plan.html":{},"classes/PlanPrice.html":{},"controllers/PlanPricesController.html":{},"modules/PlanPricesModule.html":{},"injectables/PlanPricesService.html":{},"controllers/PlansController.html":{},"modules/PlansModule.html":{},"injectables/PlansService.html":{},"classes/PromoCode.html":{},"controllers/PromoCodesController.html":{},"modules/PromoCodesModule.html":{},"injectables/PromoCodesService.html":{},"classes/RefreshTokenDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/ResetPasswordProps.html":{},"classes/Responses.html":{},"interfaces/ResponsesProps.html":{},"classes/SecurityHelper.html":{},"classes/StringHelper.html":{},"classes/StripeCustomerProps.html":{},"injectables/StripeCustomerService.html":{},"modules/StripeModule.html":{},"injectables/StripePlanService.html":{},"injectables/StripePlanService-1.html":{},"injectables/StripePlanService-2.html":{},"classes/StripePriceProps.html":{},"injectables/StripePriceService.html":{},"classes/StripeProductProps.html":{},"injectables/StripeProductService.html":{},"classes/Subscription.html":{},"controllers/SubscriptionsController.html":{},"modules/SubscriptionsModule.html":{},"injectables/SubscriptionsService.html":{},"classes/Team.html":{},"controllers/TeamsController.html":{},"modules/TeamsModule.html":{},"injectables/TeamsService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"modules/ThrottlerConfig.html":{},"injectables/Token.html":{},"classes/UpdateAuthClientDto.html":{},"classes/UpdateBookerEmployeeDto.html":{},"classes/UpdateClientDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEstablishmentDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UpdatePlanDto.html":{},"classes/UpdatePlanPriceDto.html":{},"classes/UpdatePromoCodeDto.html":{},"classes/UpdateSubscriptionDto.html":{},"classes/UpdateTeamDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/logProps.html":{}}}],["exports",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookerEmployeesModule.html":{},"modules/ClientsModule.html":{},"modules/EmployeesModule.html":{},"modules/EstablishmentsModule.html":{},"modules/JwtModule.html":{},"modules/LogsModule.html":{},"modules/MailModule.html":{},"modules/MongooseConfig.html":{},"modules/OrganizationsModule.html":{},"modules/PlanPricesModule.html":{},"modules/PlansModule.html":{},"modules/PromoCodesModule.html":{},"modules/StripeModule.html":{},"modules/SubscriptionsModule.html":{},"modules/TeamsModule.html":{},"modules/ThrottlerConfig.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":59,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthMiddleware.html":{},"controllers/BookerEmployeesController.html":{},"controllers/ClientsController.html":{},"controllers/EmployeesController.html":{},"controllers/EstablishmentsController.html":{},"classes/GlobalExceptionFilter.html":{},"controllers/OrganizationsController.html":{},"controllers/PlanPricesController.html":{},"controllers/PlansController.html":{},"controllers/PromoCodesController.html":{},"classes/Responses.html":{},"interfaces/ResponsesProps.html":{},"controllers/SubscriptionsController.html":{},"controllers/TeamsController.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["extends",{"_index":435,"title":{},"body":{"interfaces/BaseProps.html":{},"controllers/BookerEmployeesController.html":{},"injectables/BookerEmployeesService.html":{},"controllers/ClientsController.html":{},"injectables/ClientsService.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"classes/CreateAuthClientDto.html":{},"injectables/CustomValidationPipe.html":{},"controllers/EmployeesController.html":{},"injectables/EmployeesService.html":{},"controllers/EstablishmentsController.html":{},"injectables/EstablishmentsService.html":{},"interfaces/InitPasswordProps.html":{},"injectables/MailHelper.html":{},"controllers/OrganizationsController.html":{},"injectables/OrganizationsService.html":{},"controllers/PlanPricesController.html":{},"injectables/PlanPricesService.html":{},"controllers/PlansController.html":{},"injectables/PlansService.html":{},"controllers/PromoCodesController.html":{},"injectables/PromoCodesService.html":{},"interfaces/ResetPasswordProps.html":{},"controllers/SubscriptionsController.html":{},"injectables/SubscriptionsService.html":{},"controllers/TeamsController.html":{},"injectables/TeamsService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"classes/UpdateAuthClientDto.html":{},"classes/UpdateBookerEmployeeDto.html":{},"classes/UpdateClientDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEstablishmentDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UpdatePlanDto.html":{},"classes/UpdatePlanPriceDto.html":{},"classes/UpdatePromoCodeDto.html":{},"classes/UpdateSubscriptionDto.html":{},"classes/UpdateTeamDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["failed",{"_index":1152,"title":{},"body":{"classes/LogHelper.html":{},"controllers/PlansController.html":{},"interfaces/logProps.html":{}}}],["false",{"_index":692,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"interfaces/MailProps.html":{},"injectables/MailService.html":{},"classes/NotificationHelper.html":{},"classes/NumberHelper.html":{},"classes/Responses.html":{},"interfaces/ResponsesProps.html":{},"classes/User.html":{}}}],["false})@isoptional()@isboolean",{"_index":690,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["fatal",{"_index":2108,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["features",{"_index":829,"title":{},"body":{"classes/CreatePlanDto.html":{}}}],["field",{"_index":676,"title":{},"body":{"classes/CreateClientDto.html":{},"classes/CustomFieldValueDto.html":{},"coverage.html":{}}}],["field.dto.ts",{"_index":944,"title":{},"body":{"classes/CustomFieldDto.html":{},"coverage.html":{}}}],["field.dto.ts:16",{"_index":948,"title":{},"body":{"classes/CustomFieldDto.html":{}}}],["field.dto.ts:20",{"_index":951,"title":{},"body":{"classes/CustomFieldDto.html":{}}}],["field.dto.ts:23",{"_index":952,"title":{},"body":{"classes/CustomFieldDto.html":{}}}],["field.dto.ts:27",{"_index":950,"title":{},"body":{"classes/CustomFieldDto.html":{}}}],["field.entity",{"_index":1238,"title":{},"body":{"modules/MongooseConfig.html":{}}}],["fields.module",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"modules/ClientsModule.html":{}}}],["fields.service",{"_index":604,"title":{},"body":{"modules/ClientsModule.html":{}}}],["fields/custom",{"_index":187,"title":{},"body":{"modules/AppModule.html":{},"modules/ClientsModule.html":{}}}],["fields/entities/custom",{"_index":1237,"title":{},"body":{"modules/MongooseConfig.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"interfaces/BaseProps.html":{},"classes/BookerEmployee.html":{},"controllers/BookerEmployeesController.html":{},"modules/BookerEmployeesModule.html":{},"injectables/BookerEmployeesService.html":{},"classes/Client.html":{},"controllers/ClientsController.html":{},"modules/ClientsModule.html":{},"injectables/ClientsService.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"classes/CreateAuthClientDto.html":{},"classes/CreateAuthOrganizationDto.html":{},"classes/CreateBookerEmployeeDto.html":{},"classes/CreateClientDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEstablishmentDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreatePlanPriceDto.html":{},"classes/CreatePromoCodeDto.html":{},"classes/CreateSubscriptionDto.html":{},"classes/CreateTeamDto.html":{},"classes/CreateUserDto.html":{},"classes/CustomFieldDto.html":{},"classes/CustomFieldValueDto.html":{},"injectables/CustomValidationPipe.html":{},"classes/Employee.html":{},"controllers/EmployeesController.html":{},"modules/EmployeesModule.html":{},"injectables/EmployeesService.html":{},"classes/Establishment.html":{},"controllers/EstablishmentsController.html":{},"modules/EstablishmentsModule.html":{},"injectables/EstablishmentsService.html":{},"classes/FlagDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/GlobalExceptionFilter.html":{},"classes/Hash.html":{},"interfaces/InitPasswordProps.html":{},"modules/JwtModule.html":{},"classes/Log.html":{},"classes/LogHelper.html":{},"classes/LoginUserDto.html":{},"modules/LogsModule.html":{},"injectables/LogsService.html":{},"injectables/MailHelper.html":{},"modules/MailModule.html":{},"interfaces/MailProps.html":{},"injectables/MailService.html":{},"modules/MongooseConfig.html":{},"classes/NotificationHelper.html":{},"classes/NumberHelper.html":{},"classes/Organization.html":{},"controllers/OrganizationsController.html":{},"modules/OrganizationsModule.html":{},"injectables/OrganizationsService.html":{},"classes/Plan.html":{},"classes/PlanPrice.html":{},"controllers/PlanPricesController.html":{},"modules/PlanPricesModule.html":{},"injectables/PlanPricesService.html":{},"controllers/PlansController.html":{},"modules/PlansModule.html":{},"injectables/PlansService.html":{},"classes/PromoCode.html":{},"controllers/PromoCodesController.html":{},"modules/PromoCodesModule.html":{},"injectables/PromoCodesService.html":{},"classes/RefreshTokenDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/ResetPasswordProps.html":{},"classes/Responses.html":{},"interfaces/ResponsesProps.html":{},"classes/SecurityHelper.html":{},"classes/StringHelper.html":{},"classes/StripeCustomerProps.html":{},"injectables/StripeCustomerService.html":{},"modules/StripeModule.html":{},"injectables/StripePlanService.html":{},"injectables/StripePlanService-1.html":{},"injectables/StripePlanService-2.html":{},"classes/StripePriceProps.html":{},"injectables/StripePriceService.html":{},"classes/StripeProductProps.html":{},"injectables/StripeProductService.html":{},"classes/Subscription.html":{},"controllers/SubscriptionsController.html":{},"modules/SubscriptionsModule.html":{},"injectables/SubscriptionsService.html":{},"classes/Team.html":{},"controllers/TeamsController.html":{},"modules/TeamsModule.html":{},"injectables/TeamsService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"modules/ThrottlerConfig.html":{},"injectables/Token.html":{},"classes/UpdateAuthClientDto.html":{},"classes/UpdateBookerEmployeeDto.html":{},"classes/UpdateClientDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEstablishmentDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UpdatePlanDto.html":{},"classes/UpdatePlanPriceDto.html":{},"classes/UpdatePromoCodeDto.html":{},"classes/UpdateSubscriptionDto.html":{},"classes/UpdateTeamDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"interfaces/logProps.html":{}}}],["finally",{"_index":125,"title":{},"body":{"controllers/AppController.html":{}}}],["find",{"_index":259,"title":{},"body":{"injectables/AppService.html":{}}}],["find(where",{"_index":261,"title":{},"body":{"injectables/AppService.html":{}}}],["findall",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BookerEmployeesController.html":{},"injectables/BookerEmployeesService.html":{},"controllers/ClientsController.html":{},"injectables/ClientsService.html":{},"controllers/EmployeesController.html":{},"injectables/EmployeesService.html":{},"controllers/EstablishmentsController.html":{},"injectables/EstablishmentsService.html":{},"controllers/OrganizationsController.html":{},"injectables/OrganizationsService.html":{},"controllers/PlanPricesController.html":{},"injectables/PlanPricesService.html":{},"controllers/PlansController.html":{},"injectables/PlansService.html":{},"controllers/PromoCodesController.html":{},"injectables/PromoCodesService.html":{},"controllers/SubscriptionsController.html":{},"injectables/SubscriptionsService.html":{},"controllers/TeamsController.html":{},"injectables/TeamsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findall(@res",{"_index":127,"title":{},"body":{"controllers/AppController.html":{},"controllers/ClientsController.html":{}}}],["findall(res",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"controllers/BookerEmployeesController.html":{},"controllers/ClientsController.html":{},"controllers/EmployeesController.html":{},"controllers/EstablishmentsController.html":{},"controllers/OrganizationsController.html":{},"controllers/PlanPricesController.html":{},"controllers/PlansController.html":{},"controllers/PromoCodesController.html":{},"controllers/SubscriptionsController.html":{},"controllers/TeamsController.html":{},"controllers/UsersController.html":{}}}],["findallowner",{"_index":593,"title":{},"body":{"controllers/ClientsController.html":{}}}],["findallowner(@res",{"_index":591,"title":{},"body":{"controllers/ClientsController.html":{}}}],["findbyid(id",{"_index":249,"title":{},"body":{"injectables/AppService.html":{}}}],["findbyidandupdate(id",{"_index":254,"title":{},"body":{"injectables/AppService.html":{}}}],["findone",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BookerEmployeesController.html":{},"injectables/BookerEmployeesService.html":{},"controllers/ClientsController.html":{},"injectables/ClientsService.html":{},"controllers/EmployeesController.html":{},"injectables/EmployeesService.html":{},"controllers/EstablishmentsController.html":{},"injectables/EstablishmentsService.html":{},"controllers/OrganizationsController.html":{},"injectables/OrganizationsService.html":{},"controllers/PlanPricesController.html":{},"injectables/PlanPricesService.html":{},"controllers/PlansController.html":{},"injectables/PlansService.html":{},"controllers/PromoCodesController.html":{},"injectables/PromoCodesService.html":{},"controllers/SubscriptionsController.html":{},"injectables/SubscriptionsService.html":{},"controllers/TeamsController.html":{},"injectables/TeamsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone(id",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BookerEmployeesController.html":{},"injectables/BookerEmployeesService.html":{},"controllers/ClientsController.html":{},"injectables/ClientsService.html":{},"controllers/EmployeesController.html":{},"injectables/EmployeesService.html":{},"controllers/EstablishmentsController.html":{},"injectables/EstablishmentsService.html":{},"controllers/OrganizationsController.html":{},"injectables/OrganizationsService.html":{},"controllers/PlanPricesController.html":{},"injectables/PlanPricesService.html":{},"controllers/PlansController.html":{},"injectables/PlansService.html":{},"controllers/PromoCodesController.html":{},"injectables/PromoCodesService.html":{},"controllers/SubscriptionsController.html":{},"injectables/SubscriptionsService.html":{},"controllers/TeamsController.html":{},"injectables/TeamsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findoneandupdate",{"_index":1923,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyemail",{"_index":1904,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyemail(email",{"_index":1909,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebysupabaseuid",{"_index":1905,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebysupabaseuid(uid",{"_index":1911,"title":{},"body":{"injectables/UsersService.html":{}}}],["findwhere",{"_index":219,"title":{},"body":{"injectables/AppService.html":{},"injectables/BookerEmployeesService.html":{},"injectables/ClientsService.html":{},"injectables/EmployeesService.html":{},"injectables/EstablishmentsService.html":{},"injectables/OrganizationsService.html":{},"injectables/PlanPricesService.html":{},"injectables/PlansService.html":{},"injectables/PromoCodesService.html":{},"injectables/SubscriptionsService.html":{},"injectables/TeamsService.html":{},"injectables/UsersService.html":{}}}],["findwhere(undefined",{"_index":232,"title":{},"body":{"injectables/AppService.html":{},"injectables/BookerEmployeesService.html":{},"injectables/ClientsService.html":{},"injectables/EmployeesService.html":{},"injectables/EstablishmentsService.html":{},"injectables/OrganizationsService.html":{},"injectables/PlanPricesService.html":{},"injectables/PlansService.html":{},"injectables/PromoCodesService.html":{},"injectables/SubscriptionsService.html":{},"injectables/TeamsService.html":{},"injectables/UsersService.html":{}}}],["firebaseservice",{"_index":279,"title":{},"body":{"guards/AuthGuard.html":{}}}],["first",{"_index":636,"title":{},"body":{"classes/CreateBookerEmployeeDto.html":{},"classes/CreateClientDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEstablishmentDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/StringHelper.html":{}}}],["firstname",{"_index":415,"title":{},"body":{"interfaces/BaseProps.html":{},"classes/BookerEmployee.html":{},"classes/Client.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"classes/CreateBookerEmployeeDto.html":{},"classes/CreateClientDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateLogDto.html":{},"classes/Employee.html":{},"interfaces/InitPasswordProps.html":{},"classes/Log.html":{},"classes/LogHelper.html":{},"injectables/MailHelper.html":{},"interfaces/ResetPasswordProps.html":{},"interfaces/logProps.html":{}}}],["flagdto",{"_index":1051,"title":{"classes/FlagDto.html":{}},"body":{"classes/FlagDto.html":{},"coverage.html":{}}}],["floor",{"_index":707,"title":{},"body":{"classes/CreateEstablishmentDto.html":{}}}],["fonctionnement",{"_index":2094,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["forbiddenexception",{"_index":277,"title":{},"body":{"guards/AuthGuard.html":{}}}],["forbiddenexception('you",{"_index":307,"title":{},"body":{"guards/AuthGuard.html":{}}}],["forgotpassworddto",{"_index":1057,"title":{"classes/ForgotPasswordDto.html":{}},"body":{"classes/ForgotPasswordDto.html":{},"coverage.html":{}}}],["format",{"_index":874,"title":{},"body":{"classes/CreatePlanPriceDto.html":{}}}],["found",{"_index":106,"title":{},"body":{"controllers/AppController.html":{},"controllers/ClientsController.html":{},"classes/StringHelper.html":{},"controllers/UsersController.html":{}}}],["found.'})@apibearerauth()@delete(':id",{"_index":565,"title":{},"body":{"controllers/ClientsController.html":{}}}],["found.'})@apibearerauth()@get",{"_index":558,"title":{},"body":{"controllers/ClientsController.html":{}}}],["found.'})@apibearerauth()@get(':id",{"_index":562,"title":{},"body":{"controllers/ClientsController.html":{}}}],["found.'})@apibearerauth()@put(':id",{"_index":569,"title":{},"body":{"controllers/ClientsController.html":{}}}],["found.'})@delete(':id",{"_index":1886,"title":{},"body":{"controllers/UsersController.html":{}}}],["found.'})@get",{"_index":1883,"title":{},"body":{"controllers/UsersController.html":{}}}],["found.'})@get(':id",{"_index":1885,"title":{},"body":{"controllers/UsersController.html":{}}}],["found.'})@put(':id",{"_index":1888,"title":{},"body":{"controllers/UsersController.html":{}}}],["framework",{"_index":2156,"title":{},"body":{"index.html":{}}}],["function",{"_index":1866,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["functions",{"_index":2150,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gbp",{"_index":2019,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["gel",{"_index":2066,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["generate",{"_index":1614,"title":{},"body":{"classes/StringHelper.html":{}}}],["generateaccesstoken",{"_index":1779,"title":{},"body":{"injectables/Token.html":{}}}],["generateaccesstoken(payload",{"_index":1785,"title":{},"body":{"injectables/Token.html":{}}}],["generated",{"_index":755,"title":{},"body":{"classes/CreateLogDto.html":{},"classes/StringHelper.html":{}}}],["generatepassword",{"_index":1571,"title":{},"body":{"classes/StringHelper.html":{}}}],["generaterefreshtoken",{"_index":1780,"title":{},"body":{"injectables/Token.html":{}}}],["generaterefreshtoken(payload",{"_index":1787,"title":{},"body":{"injectables/Token.html":{}}}],["generates",{"_index":1581,"title":{},"body":{"classes/StringHelper.html":{}}}],["generatetoken",{"_index":1781,"title":{},"body":{"injectables/Token.html":{}}}],["generatetoken(data",{"_index":1104,"title":{},"body":{"classes/Hash.html":{}}}],["generatetoken(payload",{"_index":1789,"title":{},"body":{"injectables/Token.html":{}}}],["generating",{"_index":1807,"title":{},"body":{"injectables/Token.html":{}}}],["get(\":id",{"_index":136,"title":{},"body":{"controllers/AppController.html":{},"controllers/ClientsController.html":{},"controllers/UsersController.html":{}}}],["get(\"me/all",{"_index":590,"title":{},"body":{"controllers/ClientsController.html":{}}}],["get(':id",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"controllers/BookerEmployeesController.html":{},"controllers/EmployeesController.html":{},"controllers/EstablishmentsController.html":{},"controllers/OrganizationsController.html":{},"controllers/PlanPricesController.html":{},"controllers/PlansController.html":{},"controllers/PromoCodesController.html":{},"controllers/SubscriptionsController.html":{},"controllers/TeamsController.html":{}}}],["getpayload",{"_index":1782,"title":{},"body":{"injectables/Token.html":{}}}],["getpayload(token",{"_index":1793,"title":{},"body":{"injectables/Token.html":{}}}],["getresponse",{"_index":1476,"title":{},"body":{"classes/Responses.html":{}}}],["getresponse(params",{"_index":1478,"title":{},"body":{"classes/Responses.html":{},"interfaces/ResponsesProps.html":{}}}],["getstatustext",{"_index":1477,"title":{},"body":{"classes/Responses.html":{}}}],["getstatustext(statuscode",{"_index":1481,"title":{},"body":{"classes/Responses.html":{},"interfaces/ResponsesProps.html":{}}}],["getting",{"_index":2152,"title":{"index.html":{}},"body":{}}],["gettracker",{"_index":1762,"title":{},"body":{"injectables/ThrottlerBehindProxyGuard.html":{}}}],["gettracker(req",{"_index":1763,"title":{},"body":{"injectables/ThrottlerBehindProxyGuard.html":{}}}],["global",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"modules/JwtModule.html":{},"modules/LogsModule.html":{},"modules/MailModule.html":{},"modules/MongooseConfig.html":{},"modules/StripeModule.html":{},"modules/ThrottlerConfig.html":{}}}],["globalexceptionfilter",{"_index":1063,"title":{"classes/GlobalExceptionFilter.html":{}},"body":{"classes/GlobalExceptionFilter.html":{},"coverage.html":{}}}],["graph",{"_index":2207,"title":{},"body":{"modules.html":{}}}],["graves",{"_index":2114,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["grow",{"_index":2186,"title":{},"body":{"index.html":{}}}],["guard",{"_index":267,"title":{"guards/AuthGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":269,"title":{},"body":{"guards/AuthGuard.html":{}}}],["guards/auth.guard",{"_index":1891,"title":{},"body":{"controllers/UsersController.html":{}}}],["guards/throttler",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["générales",{"_index":2092,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["handlebars",{"_index":1992,"title":{},"body":{"dependencies.html":{}}}],["handlebarsadapter",{"_index":1193,"title":{},"body":{"modules/MailModule.html":{}}}],["hash",{"_index":1084,"title":{"classes/Hash.html":{}},"body":{"classes/Hash.html":{},"coverage.html":{}}}],["hashcomparedata",{"_index":1087,"title":{},"body":{"classes/Hash.html":{}}}],["hashcomparedata(data",{"_index":1089,"title":{},"body":{"classes/Hash.html":{}}}],["hashdata",{"_index":1088,"title":{},"body":{"classes/Hash.html":{}}}],["hashdata(data",{"_index":1094,"title":{},"body":{"classes/Hash.html":{}}}],["hashed",{"_index":1096,"title":{},"body":{"classes/Hash.html":{}}}],["hasrole(userrole",{"_index":313,"title":{},"body":{"guards/AuthGuard.html":{}}}],["heart",{"_index":718,"title":{},"body":{"classes/CreateEstablishmentDto.html":{}}}],["helpers/crypto.helper",{"_index":1172,"title":{},"body":{"injectables/LogsService.html":{}}}],["helpers/log.helper",{"_index":68,"title":{},"body":{"controllers/AppController.html":{},"controllers/BookerEmployeesController.html":{},"controllers/ClientsController.html":{},"controllers/EmployeesController.html":{},"controllers/EstablishmentsController.html":{},"controllers/OrganizationsController.html":{},"controllers/PlanPricesController.html":{},"controllers/PlansController.html":{},"controllers/PromoCodesController.html":{},"controllers/SubscriptionsController.html":{},"controllers/TeamsController.html":{},"controllers/UsersController.html":{}}}],["helpers/responses.helper",{"_index":61,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthMiddleware.html":{},"classes/GlobalExceptionFilter.html":{},"controllers/PlansController.html":{}}}],["helpers/string.helper",{"_index":63,"title":{},"body":{"controllers/AppController.html":{},"classes/Responses.html":{},"interfaces/ResponsesProps.html":{}}}],["helpers/token.helper",{"_index":341,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["here",{"_index":2194,"title":{},"body":{"index.html":{}}}],["hex",{"_index":1560,"title":{},"body":{"classes/SecurityHelper.html":{}}}],["hkd",{"_index":2031,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["host",{"_index":1067,"title":{},"body":{"classes/GlobalExceptionFilter.html":{},"modules/MailModule.html":{}}}],["host.switchtohttp",{"_index":1073,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["httpexception",{"_index":1071,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["https://example.com/establishment",{"_index":721,"title":{},"body":{"classes/CreateEstablishmentDto.html":{}}}],["https://example.com/logo.png",{"_index":806,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["https://example.com/logo.png'})@isoptional()@isstring",{"_index":791,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["https://mainstreetbarbers.com",{"_index":736,"title":{},"body":{"classes/CreateEstablishmentDto.html":{}}}],["https://mainstreetbarbers.com'})@isoptional()@isstring",{"_index":734,"title":{},"body":{"classes/CreateEstablishmentDto.html":{}}}],["https://nestjs.com",{"_index":2200,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":52,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthMiddleware.html":{},"controllers/ClientsController.html":{},"classes/GlobalExceptionFilter.html":{},"controllers/PlansController.html":{},"classes/Responses.html":{},"interfaces/ResponsesProps.html":{}}}],["httpstatus.bad_request",{"_index":580,"title":{},"body":{"controllers/ClientsController.html":{},"controllers/PlansController.html":{}}}],["httpstatus.created",{"_index":112,"title":{},"body":{"controllers/AppController.html":{},"controllers/ClientsController.html":{},"controllers/PlansController.html":{}}}],["httpstatus.internal_server_error",{"_index":122,"title":{},"body":{"controllers/AppController.html":{},"controllers/ClientsController.html":{},"classes/GlobalExceptionFilter.html":{},"controllers/PlansController.html":{}}}],["httpstatus.no_content",{"_index":143,"title":{},"body":{"controllers/AppController.html":{}}}],["httpstatus.not_found",{"_index":135,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthMiddleware.html":{},"controllers/ClientsController.html":{}}}],["httpstatus.ok",{"_index":132,"title":{},"body":{"controllers/AppController.html":{},"controllers/ClientsController.html":{}}}],["httpstatus.unprocessable_entity",{"_index":121,"title":{},"body":{"controllers/AppController.html":{}}}],["httpstatus[key",{"_index":1513,"title":{},"body":{"classes/Responses.html":{},"interfaces/ResponsesProps.html":{}}}],["huf",{"_index":2040,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["id",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BookerEmployeesController.html":{},"injectables/BookerEmployeesService.html":{},"controllers/ClientsController.html":{},"injectables/ClientsService.html":{},"classes/CreateBookerEmployeeDto.html":{},"classes/CreateClientDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEstablishmentDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateOrganizationDto.html":{},"controllers/EmployeesController.html":{},"injectables/EmployeesService.html":{},"controllers/EstablishmentsController.html":{},"injectables/EstablishmentsService.html":{},"classes/Hash.html":{},"controllers/OrganizationsController.html":{},"injectables/OrganizationsService.html":{},"controllers/PlanPricesController.html":{},"injectables/PlanPricesService.html":{},"controllers/PlansController.html":{},"injectables/PlansService.html":{},"controllers/PromoCodesController.html":{},"injectables/PromoCodesService.html":{},"injectables/StripeCustomerService.html":{},"injectables/StripePriceService.html":{},"injectables/StripeProductService.html":{},"controllers/SubscriptionsController.html":{},"injectables/SubscriptionsService.html":{},"controllers/TeamsController.html":{},"injectables/TeamsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["id'})@apiresponse({status",{"_index":560,"title":{},"body":{"controllers/ClientsController.html":{},"controllers/UsersController.html":{}}}],["identifier",{"_index":1926,"title":{},"body":{"coverage.html":{}}}],["idr",{"_index":2039,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["if(params.attachments",{"_index":1224,"title":{},"body":{"interfaces/MailProps.html":{},"injectables/MailService.html":{}}}],["ils",{"_index":2042,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["immédiate",{"_index":2116,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["implements",{"_index":292,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"classes/GlobalExceptionFilter.html":{}}}],["import",{"_index":47,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"interfaces/BaseProps.html":{},"classes/BookerEmployee.html":{},"controllers/BookerEmployeesController.html":{},"modules/BookerEmployeesModule.html":{},"injectables/BookerEmployeesService.html":{},"classes/Client.html":{},"controllers/ClientsController.html":{},"modules/ClientsModule.html":{},"injectables/ClientsService.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"classes/CreateAuthClientDto.html":{},"classes/CreateAuthOrganizationDto.html":{},"classes/CreateBookerEmployeeDto.html":{},"classes/CreateClientDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEstablishmentDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreatePlanPriceDto.html":{},"classes/CreatePromoCodeDto.html":{},"classes/CreateSubscriptionDto.html":{},"classes/CreateTeamDto.html":{},"classes/CreateUserDto.html":{},"classes/CustomFieldDto.html":{},"classes/CustomFieldValueDto.html":{},"injectables/CustomValidationPipe.html":{},"classes/Employee.html":{},"controllers/EmployeesController.html":{},"modules/EmployeesModule.html":{},"injectables/EmployeesService.html":{},"classes/Establishment.html":{},"controllers/EstablishmentsController.html":{},"modules/EstablishmentsModule.html":{},"injectables/EstablishmentsService.html":{},"classes/FlagDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/GlobalExceptionFilter.html":{},"classes/Hash.html":{},"interfaces/InitPasswordProps.html":{},"modules/JwtModule.html":{},"classes/Log.html":{},"classes/LogHelper.html":{},"classes/LoginUserDto.html":{},"modules/LogsModule.html":{},"injectables/LogsService.html":{},"injectables/MailHelper.html":{},"modules/MailModule.html":{},"interfaces/MailProps.html":{},"injectables/MailService.html":{},"modules/MongooseConfig.html":{},"classes/Organization.html":{},"controllers/OrganizationsController.html":{},"modules/OrganizationsModule.html":{},"injectables/OrganizationsService.html":{},"classes/Plan.html":{},"classes/PlanPrice.html":{},"controllers/PlanPricesController.html":{},"modules/PlanPricesModule.html":{},"injectables/PlanPricesService.html":{},"controllers/PlansController.html":{},"modules/PlansModule.html":{},"injectables/PlansService.html":{},"classes/PromoCode.html":{},"controllers/PromoCodesController.html":{},"modules/PromoCodesModule.html":{},"injectables/PromoCodesService.html":{},"classes/RefreshTokenDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/ResetPasswordProps.html":{},"classes/Responses.html":{},"interfaces/ResponsesProps.html":{},"classes/SecurityHelper.html":{},"classes/StringHelper.html":{},"injectables/StripeCustomerService.html":{},"modules/StripeModule.html":{},"injectables/StripePlanService.html":{},"injectables/StripePlanService-1.html":{},"injectables/StripePlanService-2.html":{},"classes/StripePriceProps.html":{},"injectables/StripePriceService.html":{},"injectables/StripeProductService.html":{},"classes/Subscription.html":{},"controllers/SubscriptionsController.html":{},"modules/SubscriptionsModule.html":{},"injectables/SubscriptionsService.html":{},"classes/Team.html":{},"controllers/TeamsController.html":{},"modules/TeamsModule.html":{},"injectables/TeamsService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"modules/ThrottlerConfig.html":{},"injectables/Token.html":{},"classes/UpdateAuthClientDto.html":{},"classes/UpdateBookerEmployeeDto.html":{},"classes/UpdateClientDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEstablishmentDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UpdatePlanDto.html":{},"classes/UpdatePlanPriceDto.html":{},"classes/UpdatePromoCodeDto.html":{},"classes/UpdateSubscriptionDto.html":{},"classes/UpdateTeamDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/logProps.html":{}}}],["imports",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookerEmployeesModule.html":{},"modules/ClientsModule.html":{},"modules/EmployeesModule.html":{},"modules/EstablishmentsModule.html":{},"modules/JwtModule.html":{},"modules/LogsModule.html":{},"modules/MailModule.html":{},"modules/MongooseConfig.html":{},"modules/OrganizationsModule.html":{},"modules/PlanPricesModule.html":{},"modules/PlansModule.html":{},"modules/PromoCodesModule.html":{},"modules/StripeModule.html":{},"modules/SubscriptionsModule.html":{},"modules/TeamsModule.html":{},"modules/ThrottlerConfig.html":{},"modules/UsersModule.html":{}}}],["inactive",{"_index":2144,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["inc",{"_index":804,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["inc.'})@isnotempty()@isstring",{"_index":798,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["incidents",{"_index":2128,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"interfaces/BaseProps.html":{},"classes/BookerEmployee.html":{},"controllers/BookerEmployeesController.html":{},"injectables/BookerEmployeesService.html":{},"classes/Client.html":{},"controllers/ClientsController.html":{},"injectables/ClientsService.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"classes/CreateAuthOrganizationDto.html":{},"classes/CreateBookerEmployeeDto.html":{},"classes/CreateClientDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEstablishmentDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreatePlanPriceDto.html":{},"classes/CreateUserDto.html":{},"classes/CustomFieldDto.html":{},"classes/CustomFieldValueDto.html":{},"injectables/CustomValidationPipe.html":{},"classes/Employee.html":{},"controllers/EmployeesController.html":{},"injectables/EmployeesService.html":{},"classes/Establishment.html":{},"controllers/EstablishmentsController.html":{},"injectables/EstablishmentsService.html":{},"classes/FlagDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/GlobalExceptionFilter.html":{},"classes/Hash.html":{},"interfaces/InitPasswordProps.html":{},"classes/Log.html":{},"classes/LogHelper.html":{},"classes/LoginUserDto.html":{},"injectables/LogsService.html":{},"injectables/MailHelper.html":{},"interfaces/MailProps.html":{},"injectables/MailService.html":{},"classes/NotificationHelper.html":{},"classes/NumberHelper.html":{},"classes/Organization.html":{},"controllers/OrganizationsController.html":{},"injectables/OrganizationsService.html":{},"classes/Plan.html":{},"classes/PlanPrice.html":{},"controllers/PlanPricesController.html":{},"injectables/PlanPricesService.html":{},"controllers/PlansController.html":{},"injectables/PlansService.html":{},"classes/PromoCode.html":{},"controllers/PromoCodesController.html":{},"injectables/PromoCodesService.html":{},"classes/RefreshTokenDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/ResetPasswordProps.html":{},"classes/Responses.html":{},"interfaces/ResponsesProps.html":{},"classes/SecurityHelper.html":{},"classes/StringHelper.html":{},"classes/StripeCustomerProps.html":{},"injectables/StripeCustomerService.html":{},"classes/StripePriceProps.html":{},"injectables/StripePriceService.html":{},"classes/StripeProductProps.html":{},"injectables/StripeProductService.html":{},"classes/Subscription.html":{},"controllers/SubscriptionsController.html":{},"injectables/SubscriptionsService.html":{},"classes/Team.html":{},"controllers/TeamsController.html":{},"injectables/TeamsService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"injectables/Token.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"interfaces/logProps.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicates",{"_index":687,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreatePlanPriceDto.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"interfaces/BaseProps.html":{},"classes/BookerEmployee.html":{},"controllers/BookerEmployeesController.html":{},"modules/BookerEmployeesModule.html":{},"injectables/BookerEmployeesService.html":{},"classes/Client.html":{},"controllers/ClientsController.html":{},"modules/ClientsModule.html":{},"injectables/ClientsService.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"classes/CreateAuthClientDto.html":{},"classes/CreateAuthOrganizationDto.html":{},"classes/CreateBookerEmployeeDto.html":{},"classes/CreateClientDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEstablishmentDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreatePlanPriceDto.html":{},"classes/CreatePromoCodeDto.html":{},"classes/CreateSubscriptionDto.html":{},"classes/CreateTeamDto.html":{},"classes/CreateUserDto.html":{},"classes/CustomFieldDto.html":{},"classes/CustomFieldValueDto.html":{},"injectables/CustomValidationPipe.html":{},"classes/Employee.html":{},"controllers/EmployeesController.html":{},"modules/EmployeesModule.html":{},"injectables/EmployeesService.html":{},"classes/Establishment.html":{},"controllers/EstablishmentsController.html":{},"modules/EstablishmentsModule.html":{},"injectables/EstablishmentsService.html":{},"classes/FlagDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/GlobalExceptionFilter.html":{},"classes/Hash.html":{},"interfaces/InitPasswordProps.html":{},"modules/JwtModule.html":{},"classes/Log.html":{},"classes/LogHelper.html":{},"classes/LoginUserDto.html":{},"modules/LogsModule.html":{},"injectables/LogsService.html":{},"injectables/MailHelper.html":{},"modules/MailModule.html":{},"interfaces/MailProps.html":{},"injectables/MailService.html":{},"modules/MongooseConfig.html":{},"classes/NotificationHelper.html":{},"classes/NumberHelper.html":{},"classes/Organization.html":{},"controllers/OrganizationsController.html":{},"modules/OrganizationsModule.html":{},"injectables/OrganizationsService.html":{},"classes/Plan.html":{},"classes/PlanPrice.html":{},"controllers/PlanPricesController.html":{},"modules/PlanPricesModule.html":{},"injectables/PlanPricesService.html":{},"controllers/PlansController.html":{},"modules/PlansModule.html":{},"injectables/PlansService.html":{},"classes/PromoCode.html":{},"controllers/PromoCodesController.html":{},"modules/PromoCodesModule.html":{},"injectables/PromoCodesService.html":{},"classes/RefreshTokenDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/ResetPasswordProps.html":{},"classes/Responses.html":{},"interfaces/ResponsesProps.html":{},"classes/SecurityHelper.html":{},"classes/StringHelper.html":{},"classes/StripeCustomerProps.html":{},"injectables/StripeCustomerService.html":{},"modules/StripeModule.html":{},"injectables/StripePlanService.html":{},"injectables/StripePlanService-1.html":{},"injectables/StripePlanService-2.html":{},"classes/StripePriceProps.html":{},"injectables/StripePriceService.html":{},"classes/StripeProductProps.html":{},"injectables/StripeProductService.html":{},"classes/Subscription.html":{},"controllers/SubscriptionsController.html":{},"modules/SubscriptionsModule.html":{},"injectables/SubscriptionsService.html":{},"classes/Team.html":{},"controllers/TeamsController.html":{},"modules/TeamsModule.html":{},"injectables/TeamsService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"modules/ThrottlerConfig.html":{},"injectables/Token.html":{},"classes/UpdateAuthClientDto.html":{},"classes/UpdateBookerEmployeeDto.html":{},"classes/UpdateClientDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEstablishmentDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UpdatePlanDto.html":{},"classes/UpdatePlanPriceDto.html":{},"classes/UpdatePromoCodeDto.html":{},"classes/UpdateSubscriptionDto.html":{},"classes/UpdateTeamDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"interfaces/logProps.html":{}}}],["info'})@isnotempty({message",{"_index":760,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["informations",{"_index":2089,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["inherited",{"_index":466,"title":{},"body":{"controllers/BookerEmployeesController.html":{},"injectables/BookerEmployeesService.html":{},"controllers/ClientsController.html":{},"injectables/ClientsService.html":{},"controllers/EmployeesController.html":{},"injectables/EmployeesService.html":{},"controllers/EstablishmentsController.html":{},"injectables/EstablishmentsService.html":{},"controllers/OrganizationsController.html":{},"injectables/OrganizationsService.html":{},"controllers/PlanPricesController.html":{},"injectables/PlanPricesService.html":{},"controllers/PlansController.html":{},"injectables/PlansService.html":{},"controllers/PromoCodesController.html":{},"injectables/PromoCodesService.html":{},"controllers/SubscriptionsController.html":{},"injectables/SubscriptionsService.html":{},"controllers/TeamsController.html":{},"injectables/TeamsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["init",{"_index":432,"title":{},"body":{"interfaces/BaseProps.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"interfaces/InitPasswordProps.html":{},"injectables/MailHelper.html":{},"interfaces/ResetPasswordProps.html":{}}}],["init_password",{"_index":2133,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["initpasswordprops",{"_index":431,"title":{"interfaces/InitPasswordProps.html":{}},"body":{"interfaces/BaseProps.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"interfaces/InitPasswordProps.html":{},"injectables/MailHelper.html":{},"interfaces/ResetPasswordProps.html":{},"coverage.html":{}}}],["inject",{"_index":1634,"title":{},"body":{"injectables/StripeCustomerService.html":{},"modules/StripeModule.html":{},"injectables/StripePriceService.html":{},"injectables/StripeProductService.html":{}}}],["injectable",{"_index":216,"title":{"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"injectables/BookerEmployeesService.html":{},"injectables/ClientsService.html":{},"injectables/CustomValidationPipe.html":{},"injectables/EmployeesService.html":{},"injectables/EstablishmentsService.html":{},"injectables/LogsService.html":{},"injectables/MailHelper.html":{},"injectables/MailService.html":{},"injectables/OrganizationsService.html":{},"injectables/PlanPricesService.html":{},"injectables/PlansService.html":{},"injectables/PromoCodesService.html":{},"injectables/StripeCustomerService.html":{},"injectables/StripePlanService.html":{},"injectables/StripePlanService-1.html":{},"injectables/StripePlanService-2.html":{},"injectables/StripePriceService.html":{},"injectables/StripeProductService.html":{},"injectables/SubscriptionsService.html":{},"injectables/TeamsService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"injectables/Token.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"interfaces/BaseProps.html":{},"injectables/BookerEmployeesService.html":{},"injectables/ClientsService.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"injectables/CustomValidationPipe.html":{},"injectables/EmployeesService.html":{},"injectables/EstablishmentsService.html":{},"interfaces/InitPasswordProps.html":{},"injectables/LogsService.html":{},"injectables/MailHelper.html":{},"interfaces/MailProps.html":{},"injectables/MailService.html":{},"injectables/OrganizationsService.html":{},"injectables/PlanPricesService.html":{},"injectables/PlansService.html":{},"injectables/PromoCodesService.html":{},"interfaces/ResetPasswordProps.html":{},"injectables/StripeCustomerService.html":{},"injectables/StripePlanService.html":{},"injectables/StripePlanService-1.html":{},"injectables/StripePlanService-2.html":{},"injectables/StripePriceService.html":{},"injectables/StripeProductService.html":{},"injectables/SubscriptionsService.html":{},"injectables/TeamsService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"injectables/Token.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":217,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"injectables/BookerEmployeesService.html":{},"injectables/ClientsService.html":{},"injectables/CustomValidationPipe.html":{},"injectables/EmployeesService.html":{},"injectables/EstablishmentsService.html":{},"injectables/LogsService.html":{},"injectables/MailHelper.html":{},"injectables/MailService.html":{},"injectables/OrganizationsService.html":{},"injectables/PlanPricesService.html":{},"injectables/PlansService.html":{},"injectables/PromoCodesService.html":{},"injectables/StripeCustomerService.html":{},"injectables/StripePlanService.html":{},"injectables/StripePlanService-1.html":{},"injectables/StripePlanService-2.html":{},"injectables/StripePriceService.html":{},"injectables/StripeProductService.html":{},"injectables/SubscriptionsService.html":{},"injectables/TeamsService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"injectables/Token.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectconnection",{"_index":69,"title":{},"body":{"controllers/AppController.html":{}}}],["injectmodel",{"_index":513,"title":{},"body":{"injectables/BookerEmployeesService.html":{},"injectables/ClientsService.html":{},"injectables/EmployeesService.html":{},"injectables/EstablishmentsService.html":{},"injectables/LogsService.html":{},"injectables/OrganizationsService.html":{},"injectables/PlanPricesService.html":{},"injectables/PlansService.html":{},"injectables/PromoCodesService.html":{},"injectables/SubscriptionsService.html":{},"injectables/TeamsService.html":{},"injectables/UsersService.html":{}}}],["injectmodel(bookeremployee.name",{"_index":514,"title":{},"body":{"injectables/BookerEmployeesService.html":{}}}],["injectmodel(client.name",{"_index":614,"title":{},"body":{"injectables/ClientsService.html":{}}}],["injectmodel(employee.name",{"_index":1006,"title":{},"body":{"injectables/EmployeesService.html":{}}}],["injectmodel(establishment.name",{"_index":1049,"title":{},"body":{"injectables/EstablishmentsService.html":{}}}],["injectmodel(log.name",{"_index":1173,"title":{},"body":{"injectables/LogsService.html":{}}}],["injectmodel(organization.name",{"_index":1324,"title":{},"body":{"injectables/OrganizationsService.html":{}}}],["injectmodel(plan.name",{"_index":1424,"title":{},"body":{"injectables/PlansService.html":{}}}],["injectmodel(planprice.name",{"_index":1378,"title":{},"body":{"injectables/PlanPricesService.html":{}}}],["injectmodel(promocode.name",{"_index":1461,"title":{},"body":{"injectables/PromoCodesService.html":{}}}],["injectmodel(subscription.name",{"_index":1724,"title":{},"body":{"injectables/SubscriptionsService.html":{}}}],["injectmodel(team.name",{"_index":1757,"title":{},"body":{"injectables/TeamsService.html":{}}}],["injectmodel(user.name",{"_index":1917,"title":{},"body":{"injectables/UsersService.html":{}}}],["innovation",{"_index":779,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["innovations",{"_index":805,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["innovations.'})@isoptional()@isstring",{"_index":789,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["innovators",{"_index":797,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["inquirer",{"_index":1994,"title":{},"body":{"dependencies.html":{}}}],["inquirer/prompts",{"_index":1960,"title":{},"body":{"dependencies.html":{}}}],["inr",{"_index":2023,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["installation",{"_index":2167,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":2169,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":970,"title":{},"body":{"injectables/CustomValidationPipe.html":{},"classes/GlobalExceptionFilter.html":{}}}],["interface",{"_index":387,"title":{"interfaces/BaseProps.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"interfaces/InitPasswordProps.html":{},"interfaces/MailProps.html":{},"interfaces/ResetPasswordProps.html":{},"interfaces/ResponsesProps.html":{},"interfaces/logProps.html":{}},"body":{"interfaces/BaseProps.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"interfaces/InitPasswordProps.html":{},"classes/LogHelper.html":{},"injectables/MailHelper.html":{},"interfaces/MailProps.html":{},"injectables/MailService.html":{},"interfaces/ResetPasswordProps.html":{},"classes/Responses.html":{},"interfaces/ResponsesProps.html":{},"coverage.html":{},"interfaces/logProps.html":{}}}],["interfaces",{"_index":389,"title":{},"body":{"interfaces/BaseProps.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"interfaces/InitPasswordProps.html":{},"injectables/MailHelper.html":{},"interfaces/MailProps.html":{},"interfaces/ResetPasswordProps.html":{},"interfaces/ResponsesProps.html":{},"interfaces/logProps.html":{},"overview.html":{}}}],["intersectiontype",{"_index":619,"title":{},"body":{"classes/CreateAuthClientDto.html":{}}}],["interval",{"_index":817,"title":{},"body":{"classes/CreatePlanDto.html":{},"classes/CreatePlanPriceDto.html":{},"classes/PlanPrice.html":{},"classes/StripePriceProps.html":{},"injectables/StripePriceService.html":{}}}],["interval_count",{"_index":1681,"title":{},"body":{"injectables/StripePriceService.html":{}}}],["intervalcount",{"_index":818,"title":{},"body":{"classes/CreatePlanDto.html":{},"classes/CreatePlanPriceDto.html":{},"classes/PlanPrice.html":{},"classes/StripePriceProps.html":{},"injectables/StripePriceService.html":{}}}],["intervalenum",{"_index":881,"title":{},"body":{"classes/CreatePlanPriceDto.html":{},"miscellaneous/enumerations.html":{}}}],["intervals",{"_index":838,"title":{},"body":{"classes/CreatePlanDto.html":{},"classes/CreatePlanPriceDto.html":{}}}],["intervaltype",{"_index":1668,"title":{},"body":{"classes/StripePriceProps.html":{},"miscellaneous/typealiases.html":{}}}],["invalid",{"_index":351,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/CreateLogDto.html":{}}}],["ip",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"controllers/BookerEmployeesController.html":{},"controllers/ClientsController.html":{},"classes/CreateLogDto.html":{},"controllers/EmployeesController.html":{},"controllers/EstablishmentsController.html":{},"classes/Log.html":{},"classes/LogHelper.html":{},"controllers/OrganizationsController.html":{},"controllers/PlanPricesController.html":{},"controllers/PlansController.html":{},"controllers/PromoCodesController.html":{},"classes/SecurityHelper.html":{},"controllers/SubscriptionsController.html":{},"controllers/TeamsController.html":{},"controllers/UsersController.html":{},"interfaces/logProps.html":{}}}],["ip.split",{"_index":1541,"title":{},"body":{"classes/SecurityHelper.html":{}}}],["is_public_key",{"_index":1936,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isalpha",{"_index":933,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isarray",{"_index":953,"title":{},"body":{"classes/CustomFieldDto.html":{},"classes/CustomFieldValueDto.html":{},"classes/FlagDto.html":{}}}],["isboolean",{"_index":648,"title":{},"body":{"classes/CreateBookerEmployeeDto.html":{},"classes/CreateClientDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreatePlanPriceDto.html":{}}}],["isdate",{"_index":954,"title":{},"body":{"classes/CustomFieldDto.html":{},"classes/CustomFieldValueDto.html":{},"classes/FlagDto.html":{}}}],["isemail",{"_index":1062,"title":{},"body":{"classes/ForgotPasswordDto.html":{}}}],["isemail()@isnotempty",{"_index":1060,"title":{},"body":{"classes/ForgotPasswordDto.html":{}}}],["isenum",{"_index":771,"title":{},"body":{"classes/CreateLogDto.html":{},"classes/CreatePlanPriceDto.html":{},"classes/CreateUserDto.html":{}}}],["isenum(currencyenum",{"_index":903,"title":{},"body":{"classes/CreatePlanPriceDto.html":{}}}],["isenum(intervalenum",{"_index":904,"title":{},"body":{"classes/CreatePlanPriceDto.html":{}}}],["isenum(loglevelenum",{"_index":774,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["isenum(userroleenum",{"_index":941,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isexpired",{"_index":360,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/Token.html":{}}}],["isglobal",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["isnotempty",{"_index":646,"title":{},"body":{"classes/CreateBookerEmployeeDto.html":{},"classes/CreateClientDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEstablishmentDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreatePromoCodeDto.html":{},"classes/CreateSubscriptionDto.html":{},"classes/CreateTeamDto.html":{},"classes/CreateUserDto.html":{},"classes/CustomFieldDto.html":{},"classes/CustomFieldValueDto.html":{},"classes/FlagDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/LoginUserDto.html":{},"classes/RefreshTokenDto.html":{},"classes/ResetPasswordDto.html":{}}}],["isnotempty()@isstring",{"_index":1467,"title":{},"body":{"classes/RefreshTokenDto.html":{},"classes/ResetPasswordDto.html":{}}}],["isnotempty()@isstring()@matches(regex.password",{"_index":1472,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["isnumber",{"_index":851,"title":{},"body":{"classes/CreatePlanDto.html":{},"classes/CreatePlanPriceDto.html":{},"classes/CustomFieldDto.html":{},"classes/CustomFieldValueDto.html":{},"classes/FlagDto.html":{}}}],["isobject",{"_index":682,"title":{},"body":{"classes/CreateClientDto.html":{},"classes/CreateLogDto.html":{},"classes/CustomFieldDto.html":{},"classes/CustomFieldValueDto.html":{},"classes/FlagDto.html":{}}}],["isoptional",{"_index":649,"title":{},"body":{"classes/CreateBookerEmployeeDto.html":{},"classes/CreateClientDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEstablishmentDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreatePlanPriceDto.html":{},"classes/CreatePromoCodeDto.html":{},"classes/CreateSubscriptionDto.html":{},"classes/CreateTeamDto.html":{},"classes/CreateUserDto.html":{},"classes/CustomFieldDto.html":{},"classes/CustomFieldValueDto.html":{},"classes/FlagDto.html":{}}}],["isoptional()@isobject({message",{"_index":767,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["isoptional()@isstring",{"_index":672,"title":{},"body":{"classes/CreateClientDto.html":{}}}],["isphonerequired",{"_index":1266,"title":{},"body":{"classes/NotificationHelper.html":{}}}],["isphonerequired(phone",{"_index":1267,"title":{},"body":{"classes/NotificationHelper.html":{}}}],["ispublic",{"_index":2240,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isstring",{"_index":647,"title":{},"body":{"classes/CreateBookerEmployeeDto.html":{},"classes/CreateClientDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEstablishmentDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreatePlanPriceDto.html":{},"classes/CustomFieldDto.html":{},"classes/CustomFieldValueDto.html":{},"classes/FlagDto.html":{},"classes/RefreshTokenDto.html":{},"classes/ResetPasswordDto.html":{}}}],["isstring()@isnotempty",{"_index":947,"title":{},"body":{"classes/CustomFieldDto.html":{},"classes/CustomFieldValueDto.html":{},"classes/FlagDto.html":{}}}],["isstring()@isoptional",{"_index":949,"title":{},"body":{"classes/CustomFieldDto.html":{}}}],["istokenexpired",{"_index":1783,"title":{},"body":{"injectables/Token.html":{}}}],["istokenexpired(token",{"_index":1795,"title":{},"body":{"injectables/Token.html":{}}}],["isvalid",{"_index":358,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["iv",{"_index":1546,"title":{},"body":{"classes/SecurityHelper.html":{}}}],["iv.tostring(\"hex\")}:${encrypted.tostring(\"hex",{"_index":1555,"title":{},"body":{"classes/SecurityHelper.html":{}}}],["john",{"_index":655,"title":{},"body":{"classes/CreateBookerEmployeeDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateLogDto.html":{}}}],["john'})@isnotempty()@isstring",{"_index":639,"title":{},"body":{"classes/CreateBookerEmployeeDto.html":{},"classes/CreateEmployeeDto.html":{}}}],["john'})@isoptional()@isstring",{"_index":753,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["join",{"_index":1192,"title":{},"body":{"modules/MailModule.html":{},"classes/StringHelper.html":{},"index.html":{}}}],["join(__dirname",{"_index":1206,"title":{},"body":{"modules/MailModule.html":{}}}],["jpy",{"_index":2022,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["js",{"_index":1977,"title":{},"body":{"dependencies.html":{}}}],["jsonwebtoken",{"_index":1803,"title":{},"body":{"injectables/Token.html":{},"dependencies.html":{}}}],["jwt",{"_index":1113,"title":{},"body":{"modules/JwtModule.html":{},"injectables/Token.html":{},"overview.html":{}}}],["jwt.decode(token",{"_index":1822,"title":{},"body":{"injectables/Token.html":{}}}],["jwt.register",{"_index":1116,"title":{},"body":{"modules/JwtModule.html":{}}}],["jwt.sign",{"_index":1811,"title":{},"body":{"injectables/Token.html":{}}}],["jwt.sign(payload",{"_index":1804,"title":{},"body":{"injectables/Token.html":{}}}],["jwt.verify(token",{"_index":1816,"title":{},"body":{"injectables/Token.html":{}}}],["jwtmodule",{"_index":1109,"title":{"modules/JwtModule.html":{}},"body":{"modules/JwtModule.html":{},"modules.html":{},"overview.html":{}}}],["kamil",{"_index":2198,"title":{},"body":{"index.html":{}}}],["kes",{"_index":2054,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["key",{"_index":1512,"title":{},"body":{"classes/Responses.html":{},"interfaces/ResponsesProps.html":{}}}],["krw",{"_index":2038,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["kzt",{"_index":2056,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["l'application",{"_index":2075,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["last",{"_index":641,"title":{},"body":{"classes/CreateBookerEmployeeDto.html":{},"classes/CreateClientDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateLogDto.html":{},"classes/CreatePlanPriceDto.html":{},"classes/StringHelper.html":{}}}],["lastindex",{"_index":1591,"title":{},"body":{"classes/StringHelper.html":{}}}],["lastname",{"_index":444,"title":{},"body":{"classes/BookerEmployee.html":{},"classes/Client.html":{},"classes/CreateBookerEmployeeDto.html":{},"classes/CreateClientDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateLogDto.html":{},"classes/Employee.html":{},"classes/Log.html":{},"classes/LogHelper.html":{},"interfaces/logProps.html":{}}}],["lbp",{"_index":2061,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["le",{"_index":2090,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["leading",{"_index":787,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["legend",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookerEmployeesModule.html":{},"modules/ClientsModule.html":{},"modules/EmployeesModule.html":{},"modules/EstablishmentsModule.html":{},"modules/JwtModule.html":{},"modules/LogsModule.html":{},"modules/MailModule.html":{},"modules/OrganizationsModule.html":{},"modules/PlanPricesModule.html":{},"modules/PlansModule.html":{},"modules/PromoCodesModule.html":{},"modules/StripeModule.html":{},"modules/SubscriptionsModule.html":{},"modules/TeamsModule.html":{},"modules/ThrottlerConfig.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["les",{"_index":2078,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["letter",{"_index":1576,"title":{},"body":{"classes/StringHelper.html":{}}}],["level",{"_index":96,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateLogDto.html":{},"classes/Log.html":{},"classes/LogHelper.html":{},"controllers/PlansController.html":{},"interfaces/logProps.html":{}}}],["level.enum",{"_index":66,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateLogDto.html":{},"classes/Log.html":{},"classes/LogHelper.html":{},"controllers/PlansController.html":{},"interfaces/logProps.html":{}}}],["level.enum.ts",{"_index":2011,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["license",{"_index":2203,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":2183,"title":{},"body":{"index.html":{}}}],["limit",{"_index":258,"title":{},"body":{"injectables/AppService.html":{},"modules/ThrottlerConfig.html":{}}}],["limit(limit",{"_index":263,"title":{},"body":{"injectables/AppService.html":{}}}],["literal",{"_index":233,"title":{},"body":{"injectables/AppService.html":{},"injectables/BookerEmployeesService.html":{},"injectables/ClientsService.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"injectables/EmployeesService.html":{},"injectables/EstablishmentsService.html":{},"interfaces/InitPasswordProps.html":{},"injectables/OrganizationsService.html":{},"injectables/PlanPricesService.html":{},"injectables/PlansService.html":{},"injectables/PromoCodesService.html":{},"interfaces/ResetPasswordProps.html":{},"injectables/SubscriptionsService.html":{},"injectables/TeamsService.html":{},"injectables/UsersService.html":{}}}],["liées",{"_index":2126,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["located",{"_index":717,"title":{},"body":{"classes/CreateEstablishmentDto.html":{}}}],["log",{"_index":747,"title":{"classes/Log.html":{}},"body":{"classes/CreateLogDto.html":{},"classes/Log.html":{},"classes/LogHelper.html":{},"injectables/LogsService.html":{},"modules/MongooseConfig.html":{},"controllers/PromoCodesController.html":{},"controllers/TeamsController.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"interfaces/logProps.html":{}}}],["log(logprops",{"_index":1136,"title":{},"body":{"classes/LogHelper.html":{},"interfaces/logProps.html":{}}}],["log.dto",{"_index":1170,"title":{},"body":{"injectables/LogsService.html":{},"classes/UpdateLogDto.html":{}}}],["log.dto.ts",{"_index":746,"title":{},"body":{"classes/CreateLogDto.html":{},"classes/UpdateLogDto.html":{},"coverage.html":{}}}],["log.dto.ts:19",{"_index":757,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:27",{"_index":770,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:35",{"_index":754,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:43",{"_index":759,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:51",{"_index":762,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:59",{"_index":764,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:67",{"_index":752,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:75",{"_index":768,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.name",{"_index":1257,"title":{},"body":{"modules/MongooseConfig.html":{}}}],["logdocument",{"_index":1130,"title":{},"body":{"classes/Log.html":{},"injectables/LogsService.html":{},"miscellaneous/typealiases.html":{}}}],["logerror",{"_index":1151,"title":{},"body":{"classes/LogHelper.html":{},"interfaces/logProps.html":{}}}],["loghelper",{"_index":67,"title":{"classes/LogHelper.html":{}},"body":{"controllers/AppController.html":{},"controllers/BookerEmployeesController.html":{},"controllers/ClientsController.html":{},"controllers/EmployeesController.html":{},"controllers/EstablishmentsController.html":{},"classes/LogHelper.html":{},"controllers/OrganizationsController.html":{},"controllers/PlanPricesController.html":{},"controllers/PlansController.html":{},"controllers/PromoCodesController.html":{},"controllers/SubscriptionsController.html":{},"controllers/TeamsController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"interfaces/logProps.html":{}}}],["loginuserdto",{"_index":1153,"title":{"classes/LoginUserDto.html":{}},"body":{"classes/LoginUserDto.html":{},"coverage.html":{}}}],["loglevelenum",{"_index":64,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateLogDto.html":{},"classes/Log.html":{},"classes/LogHelper.html":{},"controllers/PlansController.html":{},"miscellaneous/enumerations.html":{},"interfaces/logProps.html":{}}}],["loglevelenum.error",{"_index":97,"title":{},"body":{"controllers/AppController.html":{}}}],["loglevelenum.info",{"_index":107,"title":{},"body":{"controllers/AppController.html":{},"controllers/PlansController.html":{}}}],["logo",{"_index":696,"title":{},"body":{"classes/CreateEstablishmentDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/Establishment.html":{},"classes/Organization.html":{}}}],["logo.png",{"_index":742,"title":{},"body":{"classes/CreateEstablishmentDto.html":{}}}],["logo.png'})@isoptional()@isstring",{"_index":722,"title":{},"body":{"classes/CreateEstablishmentDto.html":{}}}],["logprops",{"_index":1137,"title":{"interfaces/logProps.html":{}},"body":{"classes/LogHelper.html":{},"coverage.html":{},"interfaces/logProps.html":{}}}],["logprops.context",{"_index":1149,"title":{},"body":{"classes/LogHelper.html":{},"interfaces/logProps.html":{}}}],["logprops.ip",{"_index":1142,"title":{},"body":{"classes/LogHelper.html":{},"interfaces/logProps.html":{}}}],["logprops.level",{"_index":1147,"title":{},"body":{"classes/LogHelper.html":{},"interfaces/logProps.html":{}}}],["logprops.message",{"_index":1148,"title":{},"body":{"classes/LogHelper.html":{},"interfaces/logProps.html":{}}}],["logprops.metadata",{"_index":1150,"title":{},"body":{"classes/LogHelper.html":{},"interfaces/logProps.html":{}}}],["logprops.user._id.tostring",{"_index":1144,"title":{},"body":{"classes/LogHelper.html":{},"interfaces/logProps.html":{}}}],["logprops.userinfos.firstname",{"_index":1145,"title":{},"body":{"classes/LogHelper.html":{},"interfaces/logProps.html":{}}}],["logprops.userinfos.lastname",{"_index":1146,"title":{},"body":{"classes/LogHelper.html":{},"interfaces/logProps.html":{}}}],["logschema",{"_index":1131,"title":{},"body":{"classes/Log.html":{},"modules/MongooseConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logsmodel",{"_index":1165,"title":{},"body":{"injectables/LogsService.html":{}}}],["logsmodule",{"_index":160,"title":{"modules/LogsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LogsModule.html":{},"modules.html":{},"overview.html":{}}}],["logsservice",{"_index":378,"title":{"injectables/LogsService.html":{}},"body":{"modules/AuthModule.html":{},"classes/LogHelper.html":{},"modules/LogsModule.html":{},"injectables/LogsService.html":{},"controllers/PlansController.html":{},"coverage.html":{},"interfaces/logProps.html":{},"overview.html":{}}}],["lowercaseletters",{"_index":1597,"title":{},"body":{"classes/StringHelper.html":{}}}],["lowercaseletters.length",{"_index":1606,"title":{},"body":{"classes/StringHelper.html":{}}}],["mailer",{"_index":1227,"title":{},"body":{"interfaces/MailProps.html":{},"injectables/MailService.html":{}}}],["mailermodule",{"_index":1189,"title":{},"body":{"modules/MailModule.html":{}}}],["mailermodule.forroot",{"_index":1195,"title":{},"body":{"modules/MailModule.html":{}}}],["mailerservice",{"_index":1214,"title":{},"body":{"interfaces/MailProps.html":{},"injectables/MailService.html":{}}}],["mailhelper",{"_index":379,"title":{"injectables/MailHelper.html":{}},"body":{"modules/AuthModule.html":{},"interfaces/BaseProps.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"interfaces/InitPasswordProps.html":{},"injectables/MailHelper.html":{},"modules/MailModule.html":{},"interfaces/ResetPasswordProps.html":{},"coverage.html":{},"overview.html":{}}}],["mailmodule",{"_index":161,"title":{"modules/MailModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules.html":{},"overview.html":{}}}],["mailoptions",{"_index":1219,"title":{},"body":{"interfaces/MailProps.html":{},"injectables/MailService.html":{}}}],["mailoptions[\"attachments",{"_index":1225,"title":{},"body":{"interfaces/MailProps.html":{},"injectables/MailService.html":{}}}],["mailprops",{"_index":1211,"title":{"interfaces/MailProps.html":{}},"body":{"interfaces/MailProps.html":{},"injectables/MailService.html":{},"coverage.html":{}}}],["mailservice",{"_index":380,"title":{"injectables/MailService.html":{}},"body":{"modules/AuthModule.html":{},"interfaces/BaseProps.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"interfaces/InitPasswordProps.html":{},"injectables/MailHelper.html":{},"modules/MailModule.html":{},"interfaces/MailProps.html":{},"injectables/MailService.html":{},"interfaces/ResetPasswordProps.html":{},"coverage.html":{},"overview.html":{}}}],["main",{"_index":703,"title":{},"body":{"classes/CreateEstablishmentDto.html":{}}}],["mais",{"_index":2104,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["manager",{"_index":793,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["manager_001",{"_index":810,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["manager_001'})@isnotempty()@isstring",{"_index":794,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["managerid",{"_index":776,"title":{},"body":{"classes/CreateOrganizationDto.html":{},"classes/Organization.html":{}}}],["match",{"_index":921,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/StringHelper.html":{},"injectables/Token.html":{}}}],["matches",{"_index":934,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/ResetPasswordDto.html":{}}}],["matches(regex.email",{"_index":938,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matches(regex.password",{"_index":940,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/ResetPasswordDto.html":{}}}],["matches(regex.phone",{"_index":939,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matching",{"_index":145,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"interfaces/BaseProps.html":{},"classes/BookerEmployee.html":{},"controllers/BookerEmployeesController.html":{},"modules/BookerEmployeesModule.html":{},"injectables/BookerEmployeesService.html":{},"classes/Client.html":{},"controllers/ClientsController.html":{},"modules/ClientsModule.html":{},"injectables/ClientsService.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"classes/CreateAuthClientDto.html":{},"classes/CreateAuthOrganizationDto.html":{},"classes/CreateBookerEmployeeDto.html":{},"classes/CreateClientDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEstablishmentDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreatePlanPriceDto.html":{},"classes/CreatePromoCodeDto.html":{},"classes/CreateSubscriptionDto.html":{},"classes/CreateTeamDto.html":{},"classes/CreateUserDto.html":{},"classes/CustomFieldDto.html":{},"classes/CustomFieldValueDto.html":{},"injectables/CustomValidationPipe.html":{},"classes/Employee.html":{},"controllers/EmployeesController.html":{},"modules/EmployeesModule.html":{},"injectables/EmployeesService.html":{},"classes/Establishment.html":{},"controllers/EstablishmentsController.html":{},"modules/EstablishmentsModule.html":{},"injectables/EstablishmentsService.html":{},"classes/FlagDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/GlobalExceptionFilter.html":{},"classes/Hash.html":{},"interfaces/InitPasswordProps.html":{},"modules/JwtModule.html":{},"classes/Log.html":{},"classes/LogHelper.html":{},"classes/LoginUserDto.html":{},"modules/LogsModule.html":{},"injectables/LogsService.html":{},"injectables/MailHelper.html":{},"modules/MailModule.html":{},"interfaces/MailProps.html":{},"injectables/MailService.html":{},"modules/MongooseConfig.html":{},"classes/NotificationHelper.html":{},"classes/NumberHelper.html":{},"classes/Organization.html":{},"controllers/OrganizationsController.html":{},"modules/OrganizationsModule.html":{},"injectables/OrganizationsService.html":{},"classes/Plan.html":{},"classes/PlanPrice.html":{},"controllers/PlanPricesController.html":{},"modules/PlanPricesModule.html":{},"injectables/PlanPricesService.html":{},"controllers/PlansController.html":{},"modules/PlansModule.html":{},"injectables/PlansService.html":{},"classes/PromoCode.html":{},"controllers/PromoCodesController.html":{},"modules/PromoCodesModule.html":{},"injectables/PromoCodesService.html":{},"classes/RefreshTokenDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/ResetPasswordProps.html":{},"classes/Responses.html":{},"interfaces/ResponsesProps.html":{},"classes/SecurityHelper.html":{},"classes/StringHelper.html":{},"classes/StripeCustomerProps.html":{},"injectables/StripeCustomerService.html":{},"modules/StripeModule.html":{},"injectables/StripePlanService.html":{},"injectables/StripePlanService-1.html":{},"injectables/StripePlanService-2.html":{},"classes/StripePriceProps.html":{},"injectables/StripePriceService.html":{},"classes/StripeProductProps.html":{},"injectables/StripeProductService.html":{},"classes/Subscription.html":{},"controllers/SubscriptionsController.html":{},"modules/SubscriptionsModule.html":{},"injectables/SubscriptionsService.html":{},"classes/Team.html":{},"controllers/TeamsController.html":{},"modules/TeamsModule.html":{},"injectables/TeamsService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"modules/ThrottlerConfig.html":{},"injectables/Token.html":{},"classes/UpdateAuthClientDto.html":{},"classes/UpdateBookerEmployeeDto.html":{},"classes/UpdateClientDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEstablishmentDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UpdatePlanDto.html":{},"classes/UpdatePlanPriceDto.html":{},"classes/UpdatePromoCodeDto.html":{},"classes/UpdateSubscriptionDto.html":{},"classes/UpdateTeamDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"interfaces/logProps.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.floor(math.random",{"_index":1605,"title":{},"body":{"classes/StringHelper.html":{}}}],["math.random",{"_index":1611,"title":{},"body":{"classes/StringHelper.html":{}}}],["maxlength",{"_index":890,"title":{},"body":{"classes/CreatePlanPriceDto.html":{}}}],["maxlength(50",{"_index":901,"title":{},"body":{"classes/CreatePlanPriceDto.html":{}}}],["message",{"_index":98,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthMiddleware.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserDto.html":{},"classes/GlobalExceptionFilter.html":{},"classes/Log.html":{},"classes/LogHelper.html":{},"controllers/PlansController.html":{},"classes/Responses.html":{},"interfaces/ResponsesProps.html":{},"interfaces/logProps.html":{}}}],["messages",{"_index":2079,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["metadata",{"_index":102,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateLogDto.html":{},"injectables/CustomValidationPipe.html":{},"classes/Log.html":{},"classes/LogHelper.html":{},"controllers/PlansController.html":{},"dependencies.html":{},"interfaces/logProps.html":{}}}],["method",{"_index":83,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthMiddleware.html":{},"interfaces/BaseProps.html":{},"controllers/ClientsController.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"classes/GlobalExceptionFilter.html":{},"interfaces/InitPasswordProps.html":{},"injectables/MailHelper.html":{},"controllers/PlansController.html":{},"interfaces/ResetPasswordProps.html":{},"classes/Responses.html":{},"interfaces/ResponsesProps.html":{}}}],["method.service.ts",{"_index":1655,"title":{},"body":{"injectables/StripePlanService.html":{},"coverage.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"interfaces/BaseProps.html":{},"controllers/BookerEmployeesController.html":{},"modules/BookerEmployeesModule.html":{},"injectables/BookerEmployeesService.html":{},"controllers/ClientsController.html":{},"injectables/ClientsService.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"injectables/CustomValidationPipe.html":{},"controllers/EmployeesController.html":{},"modules/EmployeesModule.html":{},"injectables/EmployeesService.html":{},"controllers/EstablishmentsController.html":{},"modules/EstablishmentsModule.html":{},"injectables/EstablishmentsService.html":{},"classes/GlobalExceptionFilter.html":{},"classes/Hash.html":{},"interfaces/InitPasswordProps.html":{},"classes/LogHelper.html":{},"injectables/LogsService.html":{},"injectables/MailHelper.html":{},"injectables/MailService.html":{},"classes/NotificationHelper.html":{},"classes/NumberHelper.html":{},"controllers/OrganizationsController.html":{},"modules/OrganizationsModule.html":{},"injectables/OrganizationsService.html":{},"controllers/PlanPricesController.html":{},"modules/PlanPricesModule.html":{},"injectables/PlanPricesService.html":{},"controllers/PlansController.html":{},"modules/PlansModule.html":{},"injectables/PlansService.html":{},"controllers/PromoCodesController.html":{},"modules/PromoCodesModule.html":{},"injectables/PromoCodesService.html":{},"interfaces/ResetPasswordProps.html":{},"classes/Responses.html":{},"classes/SecurityHelper.html":{},"classes/StringHelper.html":{},"injectables/StripeCustomerService.html":{},"injectables/StripePriceService.html":{},"injectables/StripeProductService.html":{},"controllers/SubscriptionsController.html":{},"modules/SubscriptionsModule.html":{},"injectables/SubscriptionsService.html":{},"controllers/TeamsController.html":{},"modules/TeamsModule.html":{},"injectables/TeamsService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"injectables/Token.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["middlewareconsumer",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"modules/BookerEmployeesModule.html":{},"modules/ClientsModule.html":{},"modules/EmployeesModule.html":{},"modules/EstablishmentsModule.html":{},"modules/OrganizationsModule.html":{},"modules/PlanPricesModule.html":{},"modules/PlansModule.html":{},"modules/PromoCodesModule.html":{},"modules/SubscriptionsModule.html":{},"modules/TeamsModule.html":{}}}],["middlewares/auth.middleware",{"_index":498,"title":{},"body":{"modules/BookerEmployeesModule.html":{},"modules/ClientsModule.html":{},"modules/EmployeesModule.html":{},"modules/EstablishmentsModule.html":{},"modules/OrganizationsModule.html":{},"modules/PlanPricesModule.html":{},"modules/PlansModule.html":{},"modules/PromoCodesModule.html":{},"modules/SubscriptionsModule.html":{},"modules/TeamsModule.html":{}}}],["min",{"_index":897,"title":{},"body":{"classes/CreatePlanPriceDto.html":{}}}],["min(0",{"_index":902,"title":{},"body":{"classes/CreatePlanPriceDto.html":{}}}],["minimum",{"_index":867,"title":{},"body":{"classes/CreatePlanPriceDto.html":{}}}],["minlength",{"_index":888,"title":{},"body":{"classes/CreatePlanPriceDto.html":{}}}],["minlength(3",{"_index":900,"title":{},"body":{"classes/CreatePlanPriceDto.html":{}}}],["miscellaneous",{"_index":2006,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":350,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["mit",{"_index":2182,"title":{},"body":{"index.html":{}}}],["mode",{"_index":2174,"title":{},"body":{"index.html":{}}}],["model",{"_index":223,"title":{},"body":{"injectables/AppService.html":{},"injectables/BookerEmployeesService.html":{},"injectables/ClientsService.html":{},"injectables/EmployeesService.html":{},"injectables/EstablishmentsService.html":{},"injectables/LogsService.html":{},"injectables/OrganizationsService.html":{},"injectables/PlanPricesService.html":{},"injectables/PlansService.html":{},"injectables/PromoCodesService.html":{},"injectables/SubscriptionsService.html":{},"injectables/TeamsService.html":{},"injectables/UsersService.html":{}}}],["modified",{"_index":1589,"title":{},"body":{"classes/StringHelper.html":{}}}],["module",{"_index":146,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookerEmployeesModule.html":{},"modules/ClientsModule.html":{},"modules/EmployeesModule.html":{},"modules/EstablishmentsModule.html":{},"modules/JwtModule.html":{},"modules/LogsModule.html":{},"modules/MailModule.html":{},"modules/MongooseConfig.html":{},"modules/OrganizationsModule.html":{},"modules/PlanPricesModule.html":{},"modules/PlansModule.html":{},"modules/PromoCodesModule.html":{},"modules/StripeModule.html":{},"modules/SubscriptionsModule.html":{},"modules/TeamsModule.html":{},"modules/ThrottlerConfig.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookerEmployeesModule.html":{},"modules/ClientsModule.html":{},"modules/EmployeesModule.html":{},"modules/EstablishmentsModule.html":{},"modules/JwtModule.html":{},"modules/LogsModule.html":{},"modules/MailModule.html":{},"modules/MongooseConfig.html":{},"modules/OrganizationsModule.html":{},"modules/PlanPricesModule.html":{},"modules/PlansModule.html":{},"modules/PromoCodesModule.html":{},"modules/StripeModule.html":{},"modules/SubscriptionsModule.html":{},"modules/TeamsModule.html":{},"modules/ThrottlerConfig.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":148,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookerEmployeesModule.html":{},"modules/ClientsModule.html":{},"modules/EmployeesModule.html":{},"modules/EstablishmentsModule.html":{},"modules/JwtModule.html":{},"modules/LogsModule.html":{},"modules/MailModule.html":{},"modules/MongooseConfig.html":{},"modules/OrganizationsModule.html":{},"modules/PlanPricesModule.html":{},"modules/PlansModule.html":{},"modules/PromoCodesModule.html":{},"modules/StripeModule.html":{},"modules/SubscriptionsModule.html":{},"modules/TeamsModule.html":{},"modules/ThrottlerConfig.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/app.controller",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/app.service",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/auth/auth.controller",{"_index":383,"title":{},"body":{"modules/AuthModule.html":{}}}],["modules/auth/auth.module",{"_index":200,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/auth/dto/create",{"_index":1829,"title":{},"body":{"classes/UpdateAuthClientDto.html":{}}}],["modules/booker",{"_index":343,"title":{},"body":{"injectables/AuthMiddleware.html":{},"controllers/BookerEmployeesController.html":{},"modules/BookerEmployeesModule.html":{},"injectables/BookerEmployeesService.html":{},"classes/CreateAuthOrganizationDto.html":{},"classes/UpdateBookerEmployeeDto.html":{}}}],["modules/clients/clients.controller",{"_index":602,"title":{},"body":{"modules/ClientsModule.html":{}}}],["modules/clients/clients.module",{"_index":184,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/clients/clients.service",{"_index":346,"title":{},"body":{"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"controllers/ClientsController.html":{},"modules/ClientsModule.html":{}}}],["modules/clients/dto/create",{"_index":571,"title":{},"body":{"controllers/ClientsController.html":{},"injectables/ClientsService.html":{},"classes/CreateAuthClientDto.html":{},"classes/UpdateClientDto.html":{}}}],["modules/clients/dto/update",{"_index":573,"title":{},"body":{"controllers/ClientsController.html":{},"injectables/ClientsService.html":{}}}],["modules/clients/entities/client.entity",{"_index":574,"title":{},"body":{"controllers/ClientsController.html":{},"injectables/ClientsService.html":{},"classes/LogHelper.html":{},"modules/MongooseConfig.html":{},"interfaces/logProps.html":{}}}],["modules/custom",{"_index":186,"title":{},"body":{"modules/AppModule.html":{},"modules/ClientsModule.html":{},"modules/MongooseConfig.html":{}}}],["modules/customers/customers.module",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"modules/ClientsModule.html":{}}}],["modules/customers/customers.service",{"_index":284,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/ClientsModule.html":{}}}],["modules/customers/entities/customer.entity",{"_index":1240,"title":{},"body":{"modules/MongooseConfig.html":{}}}],["modules/employees/dto/create",{"_index":988,"title":{},"body":{"controllers/EmployeesController.html":{},"injectables/EmployeesService.html":{},"classes/UpdateEmployeeDto.html":{}}}],["modules/employees/dto/update",{"_index":990,"title":{},"body":{"controllers/EmployeesController.html":{},"injectables/EmployeesService.html":{}}}],["modules/employees/employees.controller",{"_index":1000,"title":{},"body":{"modules/EmployeesModule.html":{}}}],["modules/employees/employees.service",{"_index":342,"title":{},"body":{"injectables/AuthMiddleware.html":{},"controllers/EmployeesController.html":{},"modules/EmployeesModule.html":{}}}],["modules/employees/entities/employee.entity",{"_index":991,"title":{},"body":{"controllers/EmployeesController.html":{},"injectables/EmployeesService.html":{},"classes/LogHelper.html":{},"interfaces/logProps.html":{}}}],["modules/establishments/dto/create",{"_index":1030,"title":{},"body":{"controllers/EstablishmentsController.html":{},"injectables/EstablishmentsService.html":{},"classes/UpdateEstablishmentDto.html":{}}}],["modules/establishments/dto/update",{"_index":1033,"title":{},"body":{"controllers/EstablishmentsController.html":{},"injectables/EstablishmentsService.html":{}}}],["modules/establishments/entities/establishment.entity",{"_index":1034,"title":{},"body":{"controllers/EstablishmentsController.html":{},"injectables/EstablishmentsService.html":{}}}],["modules/establishments/establishments.controller",{"_index":1043,"title":{},"body":{"modules/EstablishmentsModule.html":{}}}],["modules/establishments/establishments.service",{"_index":1029,"title":{},"body":{"controllers/EstablishmentsController.html":{},"modules/EstablishmentsModule.html":{}}}],["modules/logs/dto/create",{"_index":1169,"title":{},"body":{"injectables/LogsService.html":{},"classes/UpdateLogDto.html":{}}}],["modules/logs/entities/log.entity",{"_index":1168,"title":{},"body":{"injectables/LogsService.html":{},"modules/MongooseConfig.html":{}}}],["modules/logs/logs.module",{"_index":201,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/logs/logs.service",{"_index":386,"title":{},"body":{"modules/AuthModule.html":{},"classes/LogHelper.html":{},"modules/LogsModule.html":{},"controllers/PlansController.html":{},"interfaces/logProps.html":{}}}],["modules/mailer",{"_index":1191,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailProps.html":{},"injectables/MailService.html":{},"dependencies.html":{}}}],["modules/mailer/dist/adapters/handlebars.adapter",{"_index":1194,"title":{},"body":{"modules/MailModule.html":{}}}],["modules/notifications/entities/notification.entity",{"_index":1243,"title":{},"body":{"modules/MongooseConfig.html":{}}}],["modules/organizations/dto/create",{"_index":631,"title":{},"body":{"classes/CreateAuthOrganizationDto.html":{},"controllers/OrganizationsController.html":{},"injectables/OrganizationsService.html":{},"classes/UpdateOrganizationDto.html":{}}}],["modules/organizations/dto/update",{"_index":1308,"title":{},"body":{"controllers/OrganizationsController.html":{},"injectables/OrganizationsService.html":{}}}],["modules/organizations/entities/organization.entity",{"_index":1309,"title":{},"body":{"controllers/OrganizationsController.html":{},"injectables/OrganizationsService.html":{}}}],["modules/organizations/organizations.controller",{"_index":1318,"title":{},"body":{"modules/OrganizationsModule.html":{}}}],["modules/organizations/organizations.service",{"_index":1306,"title":{},"body":{"controllers/OrganizationsController.html":{},"modules/OrganizationsModule.html":{}}}],["modules/payments/entities/payment.entity",{"_index":1246,"title":{},"body":{"modules/MongooseConfig.html":{}}}],["modules/payments/payments.module",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/plan",{"_index":1356,"title":{},"body":{"controllers/PlanPricesController.html":{},"modules/PlanPricesModule.html":{},"injectables/PlanPricesService.html":{},"classes/UpdatePlanPriceDto.html":{}}}],["modules/plans/dto/create",{"_index":1388,"title":{},"body":{"controllers/PlansController.html":{},"injectables/PlansService.html":{},"classes/UpdatePlanDto.html":{}}}],["modules/plans/dto/update",{"_index":1391,"title":{},"body":{"controllers/PlansController.html":{},"injectables/PlansService.html":{}}}],["modules/plans/entities/plan.entity",{"_index":1248,"title":{},"body":{"modules/MongooseConfig.html":{},"controllers/PlansController.html":{},"injectables/PlansService.html":{}}}],["modules/plans/plans.controller",{"_index":1414,"title":{},"body":{"modules/PlansModule.html":{}}}],["modules/plans/plans.module",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/plans/plans.service",{"_index":1387,"title":{},"body":{"controllers/PlansController.html":{},"modules/PlansModule.html":{}}}],["modules/promo",{"_index":1439,"title":{},"body":{"controllers/PromoCodesController.html":{},"modules/PromoCodesModule.html":{},"injectables/PromoCodesService.html":{},"classes/UpdatePromoCodeDto.html":{}}}],["modules/subscriptions/dto/create",{"_index":1707,"title":{},"body":{"controllers/SubscriptionsController.html":{},"injectables/SubscriptionsService.html":{},"classes/UpdateSubscriptionDto.html":{}}}],["modules/subscriptions/dto/update",{"_index":1710,"title":{},"body":{"controllers/SubscriptionsController.html":{},"injectables/SubscriptionsService.html":{}}}],["modules/subscriptions/entities/subscription.entity",{"_index":1251,"title":{},"body":{"modules/MongooseConfig.html":{},"controllers/SubscriptionsController.html":{},"injectables/SubscriptionsService.html":{}}}],["modules/subscriptions/subscriptions.controller",{"_index":1718,"title":{},"body":{"modules/SubscriptionsModule.html":{}}}],["modules/subscriptions/subscriptions.module",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/subscriptions/subscriptions.service",{"_index":1706,"title":{},"body":{"controllers/SubscriptionsController.html":{},"modules/SubscriptionsModule.html":{}}}],["modules/teams/dto/create",{"_index":1738,"title":{},"body":{"controllers/TeamsController.html":{},"injectables/TeamsService.html":{},"classes/UpdateTeamDto.html":{}}}],["modules/teams/dto/update",{"_index":1741,"title":{},"body":{"controllers/TeamsController.html":{},"injectables/TeamsService.html":{}}}],["modules/teams/entities/team.entity",{"_index":1742,"title":{},"body":{"controllers/TeamsController.html":{},"injectables/TeamsService.html":{}}}],["modules/teams/teams.controller",{"_index":1751,"title":{},"body":{"modules/TeamsModule.html":{}}}],["modules/teams/teams.service",{"_index":1737,"title":{},"body":{"controllers/TeamsController.html":{},"modules/TeamsModule.html":{}}}],["modules/users/dto/create",{"_index":621,"title":{},"body":{"classes/CreateAuthClientDto.html":{},"classes/CreateAuthOrganizationDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["modules/users/dto/update",{"_index":1890,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["modules/users/entities/user.entity",{"_index":1140,"title":{},"body":{"classes/LogHelper.html":{},"modules/MongooseConfig.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/logProps.html":{}}}],["modules/users/users.controller",{"_index":1902,"title":{},"body":{"modules/UsersModule.html":{}}}],["modules/users/users.module",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"modules/ClientsModule.html":{}}}],["modules/users/users.service",{"_index":282,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"modules/ClientsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["mongoose",{"_index":56,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/BookerEmployee.html":{},"controllers/BookerEmployeesController.html":{},"injectables/BookerEmployeesService.html":{},"classes/Client.html":{},"controllers/ClientsController.html":{},"injectables/ClientsService.html":{},"classes/CreateAuthClientDto.html":{},"classes/Employee.html":{},"controllers/EmployeesController.html":{},"injectables/EmployeesService.html":{},"classes/Establishment.html":{},"controllers/EstablishmentsController.html":{},"injectables/EstablishmentsService.html":{},"classes/Log.html":{},"injectables/LogsService.html":{},"classes/Organization.html":{},"controllers/OrganizationsController.html":{},"injectables/OrganizationsService.html":{},"classes/Plan.html":{},"classes/PlanPrice.html":{},"controllers/PlanPricesController.html":{},"injectables/PlanPricesService.html":{},"controllers/PlansController.html":{},"injectables/PlansService.html":{},"classes/PromoCode.html":{},"controllers/PromoCodesController.html":{},"injectables/PromoCodesService.html":{},"classes/Subscription.html":{},"controllers/SubscriptionsController.html":{},"injectables/SubscriptionsService.html":{},"classes/Team.html":{},"controllers/TeamsController.html":{},"injectables/TeamsService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["mongooseconfig",{"_index":162,"title":{"modules/MongooseConfig.html":{}},"body":{"modules/AppModule.html":{},"modules/MongooseConfig.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["mongoosemodule",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"modules/MongooseConfig.html":{}}}],["mongoosemodule.forfeature",{"_index":1254,"title":{},"body":{"modules/MongooseConfig.html":{}}}],["mongoosemodule.forroot(settings.mongodb_url",{"_index":1253,"title":{},"body":{"modules/MongooseConfig.html":{}}}],["month",{"_index":834,"title":{},"body":{"classes/CreatePlanDto.html":{},"classes/CreatePlanPriceDto.html":{},"miscellaneous/enumerations.html":{}}}],["month'})@isnotempty()@isstring",{"_index":836,"title":{},"body":{"classes/CreatePlanDto.html":{}}}],["more",{"_index":612,"title":{},"body":{"injectables/ClientsService.html":{},"index.html":{}}}],["multiple",{"_index":133,"title":{},"body":{"controllers/AppController.html":{},"classes/Responses.html":{},"interfaces/ResponsesProps.html":{}}}],["mxn",{"_index":2028,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["myr",{"_index":2048,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["myśliwiec",{"_index":2199,"title":{},"body":{"index.html":{}}}],["n'arrêtent",{"_index":2102,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["n/a",{"_index":1143,"title":{},"body":{"classes/LogHelper.html":{},"interfaces/logProps.html":{}}}],["name",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"controllers/BookerEmployeesController.html":{},"modules/BookerEmployeesModule.html":{},"injectables/BookerEmployeesService.html":{},"controllers/ClientsController.html":{},"injectables/ClientsService.html":{},"classes/CreateBookerEmployeeDto.html":{},"classes/CreateClientDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEstablishmentDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreatePlanPriceDto.html":{},"classes/CustomFieldDto.html":{},"injectables/CustomValidationPipe.html":{},"controllers/EmployeesController.html":{},"modules/EmployeesModule.html":{},"injectables/EmployeesService.html":{},"classes/Establishment.html":{},"controllers/EstablishmentsController.html":{},"modules/EstablishmentsModule.html":{},"injectables/EstablishmentsService.html":{},"classes/GlobalExceptionFilter.html":{},"classes/Hash.html":{},"classes/LogHelper.html":{},"injectables/LogsService.html":{},"injectables/MailHelper.html":{},"injectables/MailService.html":{},"modules/MongooseConfig.html":{},"classes/NotificationHelper.html":{},"classes/NumberHelper.html":{},"classes/Organization.html":{},"controllers/OrganizationsController.html":{},"modules/OrganizationsModule.html":{},"injectables/OrganizationsService.html":{},"classes/Plan.html":{},"classes/PlanPrice.html":{},"controllers/PlanPricesController.html":{},"modules/PlanPricesModule.html":{},"injectables/PlanPricesService.html":{},"controllers/PlansController.html":{},"modules/PlansModule.html":{},"injectables/PlansService.html":{},"controllers/PromoCodesController.html":{},"modules/PromoCodesModule.html":{},"injectables/PromoCodesService.html":{},"classes/Responses.html":{},"classes/SecurityHelper.html":{},"classes/StringHelper.html":{},"classes/StripeCustomerProps.html":{},"injectables/StripeCustomerService.html":{},"classes/StripePriceProps.html":{},"injectables/StripePriceService.html":{},"classes/StripeProductProps.html":{},"injectables/StripeProductService.html":{},"controllers/SubscriptionsController.html":{},"modules/SubscriptionsModule.html":{},"injectables/SubscriptionsService.html":{},"controllers/TeamsController.html":{},"modules/TeamsModule.html":{},"injectables/TeamsService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"injectables/Token.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["nest",{"_index":2163,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":2202,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":1190,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailProps.html":{},"injectables/MailService.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":53,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"interfaces/BaseProps.html":{},"controllers/BookerEmployeesController.html":{},"modules/BookerEmployeesModule.html":{},"injectables/BookerEmployeesService.html":{},"controllers/ClientsController.html":{},"modules/ClientsModule.html":{},"injectables/ClientsService.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"injectables/CustomValidationPipe.html":{},"controllers/EmployeesController.html":{},"modules/EmployeesModule.html":{},"injectables/EmployeesService.html":{},"controllers/EstablishmentsController.html":{},"modules/EstablishmentsModule.html":{},"injectables/EstablishmentsService.html":{},"classes/GlobalExceptionFilter.html":{},"interfaces/InitPasswordProps.html":{},"modules/JwtModule.html":{},"modules/LogsModule.html":{},"injectables/LogsService.html":{},"injectables/MailHelper.html":{},"modules/MailModule.html":{},"interfaces/MailProps.html":{},"injectables/MailService.html":{},"modules/MongooseConfig.html":{},"controllers/OrganizationsController.html":{},"modules/OrganizationsModule.html":{},"injectables/OrganizationsService.html":{},"controllers/PlanPricesController.html":{},"modules/PlanPricesModule.html":{},"injectables/PlanPricesService.html":{},"controllers/PlansController.html":{},"modules/PlansModule.html":{},"injectables/PlansService.html":{},"controllers/PromoCodesController.html":{},"modules/PromoCodesModule.html":{},"injectables/PromoCodesService.html":{},"interfaces/ResetPasswordProps.html":{},"classes/Responses.html":{},"interfaces/ResponsesProps.html":{},"injectables/StripeCustomerService.html":{},"modules/StripeModule.html":{},"injectables/StripePlanService.html":{},"injectables/StripePlanService-1.html":{},"injectables/StripePlanService-2.html":{},"injectables/StripePriceService.html":{},"injectables/StripeProductService.html":{},"controllers/SubscriptionsController.html":{},"modules/SubscriptionsModule.html":{},"injectables/SubscriptionsService.html":{},"controllers/TeamsController.html":{},"modules/TeamsModule.html":{},"injectables/TeamsService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"modules/ThrottlerConfig.html":{},"injectables/Token.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"modules/MongooseConfig.html":{},"modules/StripeModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":1115,"title":{},"body":{"modules/JwtModule.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":1966,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mongoose",{"_index":70,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/BookerEmployee.html":{},"injectables/BookerEmployeesService.html":{},"classes/Client.html":{},"injectables/ClientsService.html":{},"classes/Employee.html":{},"injectables/EmployeesService.html":{},"classes/Establishment.html":{},"injectables/EstablishmentsService.html":{},"classes/Log.html":{},"injectables/LogsService.html":{},"modules/MongooseConfig.html":{},"classes/Organization.html":{},"injectables/OrganizationsService.html":{},"classes/Plan.html":{},"classes/PlanPrice.html":{},"injectables/PlanPricesService.html":{},"injectables/PlansService.html":{},"classes/PromoCode.html":{},"injectables/PromoCodesService.html":{},"classes/Subscription.html":{},"injectables/SubscriptionsService.html":{},"classes/Team.html":{},"injectables/TeamsService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1970,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":483,"title":{},"body":{"controllers/BookerEmployeesController.html":{},"controllers/ClientsController.html":{},"classes/CreateAuthClientDto.html":{},"classes/CreateBookerEmployeeDto.html":{},"classes/CreateClientDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEstablishmentDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreatePlanPriceDto.html":{},"classes/CreatePromoCodeDto.html":{},"classes/CreateSubscriptionDto.html":{},"classes/CreateTeamDto.html":{},"classes/CreateUserDto.html":{},"controllers/EmployeesController.html":{},"controllers/EstablishmentsController.html":{},"classes/LoginUserDto.html":{},"controllers/OrganizationsController.html":{},"controllers/PlanPricesController.html":{},"controllers/PlansController.html":{},"controllers/PromoCodesController.html":{},"controllers/SubscriptionsController.html":{},"controllers/TeamsController.html":{},"classes/UpdateAuthClientDto.html":{},"classes/UpdateBookerEmployeeDto.html":{},"classes/UpdateClientDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEstablishmentDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UpdatePlanDto.html":{},"classes/UpdatePlanPriceDto.html":{},"classes/UpdatePromoCodeDto.html":{},"classes/UpdateSubscriptionDto.html":{},"classes/UpdateTeamDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/throttler",{"_index":1766,"title":{},"body":{"injectables/ThrottlerBehindProxyGuard.html":{},"modules/ThrottlerConfig.html":{},"dependencies.html":{}}}],["nestjs/websockets",{"_index":1975,"title":{},"body":{"dependencies.html":{}}}],["nestmiddleware",{"_index":340,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["new",{"_index":104,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"controllers/ClientsController.html":{},"injectables/CustomValidationPipe.html":{},"injectables/LogsService.html":{},"modules/MailModule.html":{},"classes/NotificationHelper.html":{},"controllers/PlansController.html":{},"classes/StringHelper.html":{},"modules/StripeModule.html":{},"injectables/Token.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newpassword",{"_index":1471,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["next",{"_index":337,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["nextfunction",{"_index":338,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["ngn",{"_index":2051,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nickname",{"_index":1679,"title":{},"body":{"injectables/StripePriceService.html":{}}}],["niveau",{"_index":2071,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["niveaux",{"_index":2080,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["node.js",{"_index":2155,"title":{},"body":{"index.html":{}}}],["nodemailer",{"_index":1998,"title":{},"body":{"dependencies.html":{}}}],["nok",{"_index":2033,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nom",{"_index":413,"title":{},"body":{"interfaces/BaseProps.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"interfaces/InitPasswordProps.html":{},"injectables/MailHelper.html":{},"interfaces/ResetPasswordProps.html":{}}}],["normal",{"_index":2095,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["not_verified",{"_index":2147,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["notification",{"_index":1241,"title":{},"body":{"modules/MongooseConfig.html":{},"classes/NotificationHelper.html":{}}}],["notification.name",{"_index":1260,"title":{},"body":{"modules/MongooseConfig.html":{}}}],["notificationemail",{"_index":521,"title":{},"body":{"classes/Client.html":{},"classes/CreateClientDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/Employee.html":{}}}],["notificationhelper",{"_index":1264,"title":{"classes/NotificationHelper.html":{}},"body":{"classes/NotificationHelper.html":{},"coverage.html":{}}}],["notifications",{"_index":678,"title":{},"body":{"classes/CreateClientDto.html":{},"classes/CreateEmployeeDto.html":{}}}],["notifications'})@isnotempty()@isboolean",{"_index":666,"title":{},"body":{"classes/CreateClientDto.html":{}}}],["notificationschema",{"_index":1242,"title":{},"body":{"modules/MongooseConfig.html":{}}}],["notificationsmodule",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["notificationsms",{"_index":522,"title":{},"body":{"classes/Client.html":{},"classes/CreateClientDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/Employee.html":{},"classes/NotificationHelper.html":{}}}],["npm",{"_index":2168,"title":{},"body":{"index.html":{}}}],["null",{"_index":540,"title":{},"body":{"classes/Client.html":{},"classes/Establishment.html":{},"classes/Organization.html":{}}}],["num",{"_index":1277,"title":{},"body":{"classes/NumberHelper.html":{}}}],["num.tostring",{"_index":1283,"title":{},"body":{"classes/NumberHelper.html":{}}}],["number",{"_index":260,"title":{},"body":{"injectables/AppService.html":{},"classes/CreateEstablishmentDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreatePlanPriceDto.html":{},"classes/CreateUserDto.html":{},"classes/CustomFieldDto.html":{},"classes/NotificationHelper.html":{},"classes/NumberHelper.html":{},"classes/PlanPrice.html":{},"classes/Responses.html":{},"interfaces/ResponsesProps.html":{},"classes/StripePriceProps.html":{}}}],["number(settings.mailtrap_port",{"_index":1199,"title":{},"body":{"modules/MailModule.html":{}}}],["number.helper",{"_index":1484,"title":{},"body":{"classes/Responses.html":{},"interfaces/ResponsesProps.html":{}}}],["numberhelper",{"_index":1269,"title":{"classes/NumberHelper.html":{}},"body":{"classes/NumberHelper.html":{},"classes/Responses.html":{},"interfaces/ResponsesProps.html":{},"coverage.html":{}}}],["numberhelper.startswith(params.code",{"_index":1488,"title":{},"body":{"classes/Responses.html":{},"interfaces/ResponsesProps.html":{}}}],["numbers",{"_index":1600,"title":{},"body":{"classes/StringHelper.html":{}}}],["numbers.length",{"_index":1609,"title":{},"body":{"classes/StringHelper.html":{}}}],["numbers[math.floor(math.random",{"_index":1608,"title":{},"body":{"classes/StringHelper.html":{}}}],["number|string",{"_index":1281,"title":{},"body":{"classes/NumberHelper.html":{}}}],["nzd",{"_index":2030,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nécessitant",{"_index":2124,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nécessitent",{"_index":2105,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["object",{"_index":240,"title":{},"body":{"injectables/AppService.html":{},"interfaces/BaseProps.html":{},"injectables/BookerEmployeesService.html":{},"injectables/ClientsService.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"classes/CreateLogDto.html":{},"injectables/EmployeesService.html":{},"injectables/EstablishmentsService.html":{},"interfaces/InitPasswordProps.html":{},"classes/Log.html":{},"classes/LogHelper.html":{},"injectables/MailHelper.html":{},"interfaces/MailProps.html":{},"injectables/MailService.html":{},"injectables/OrganizationsService.html":{},"injectables/PlanPricesService.html":{},"injectables/PlansService.html":{},"injectables/PromoCodesService.html":{},"interfaces/ResetPasswordProps.html":{},"classes/Responses.html":{},"interfaces/ResponsesProps.html":{},"injectables/SubscriptionsService.html":{},"injectables/TeamsService.html":{},"injectables/Token.html":{},"injectables/UsersService.html":{},"interfaces/logProps.html":{},"miscellaneous/variables.html":{}}}],["object.keys(httpstatus).find",{"_index":1511,"title":{},"body":{"classes/Responses.html":{},"interfaces/ResponsesProps.html":{}}}],["object.values(userstatusenum",{"_index":1862,"title":{},"body":{"classes/User.html":{}}}],["occured",{"_index":123,"title":{},"body":{"controllers/AppController.html":{}}}],["occurred",{"_index":1082,"title":{},"body":{"classes/GlobalExceptionFilter.html":{},"controllers/PlansController.html":{},"injectables/Token.html":{}}}],["occurrence",{"_index":1587,"title":{},"body":{"classes/StringHelper.html":{}}}],["offered",{"_index":894,"title":{},"body":{"classes/CreatePlanPriceDto.html":{}}}],["one",{"_index":1615,"title":{},"body":{"classes/StringHelper.html":{}}}],["open",{"_index":2184,"title":{},"body":{"index.html":{}}}],["optional",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"interfaces/BaseProps.html":{},"classes/BookerEmployee.html":{},"controllers/BookerEmployeesController.html":{},"modules/BookerEmployeesModule.html":{},"injectables/BookerEmployeesService.html":{},"classes/Client.html":{},"controllers/ClientsController.html":{},"injectables/ClientsService.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"classes/CreateClientDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEstablishmentDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreatePlanPriceDto.html":{},"classes/CreateUserDto.html":{},"classes/CustomFieldDto.html":{},"classes/CustomFieldValueDto.html":{},"injectables/CustomValidationPipe.html":{},"classes/Employee.html":{},"controllers/EmployeesController.html":{},"modules/EmployeesModule.html":{},"injectables/EmployeesService.html":{},"classes/Establishment.html":{},"controllers/EstablishmentsController.html":{},"modules/EstablishmentsModule.html":{},"injectables/EstablishmentsService.html":{},"classes/GlobalExceptionFilter.html":{},"classes/Hash.html":{},"interfaces/InitPasswordProps.html":{},"classes/Log.html":{},"classes/LogHelper.html":{},"injectables/LogsService.html":{},"injectables/MailHelper.html":{},"interfaces/MailProps.html":{},"injectables/MailService.html":{},"classes/NotificationHelper.html":{},"classes/NumberHelper.html":{},"classes/Organization.html":{},"controllers/OrganizationsController.html":{},"modules/OrganizationsModule.html":{},"injectables/OrganizationsService.html":{},"classes/Plan.html":{},"classes/PlanPrice.html":{},"controllers/PlanPricesController.html":{},"modules/PlanPricesModule.html":{},"injectables/PlanPricesService.html":{},"controllers/PlansController.html":{},"modules/PlansModule.html":{},"injectables/PlansService.html":{},"classes/PromoCode.html":{},"controllers/PromoCodesController.html":{},"modules/PromoCodesModule.html":{},"injectables/PromoCodesService.html":{},"interfaces/ResetPasswordProps.html":{},"classes/Responses.html":{},"interfaces/ResponsesProps.html":{},"classes/SecurityHelper.html":{},"classes/StringHelper.html":{},"injectables/StripeCustomerService.html":{},"injectables/StripePriceService.html":{},"injectables/StripeProductService.html":{},"classes/Subscription.html":{},"controllers/SubscriptionsController.html":{},"modules/SubscriptionsModule.html":{},"injectables/SubscriptionsService.html":{},"classes/Team.html":{},"controllers/TeamsController.html":{},"modules/TeamsModule.html":{},"injectables/TeamsService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"injectables/Token.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/logProps.html":{}}}],["options",{"_index":1209,"title":{},"body":{"modules/MailModule.html":{}}}],["organization",{"_index":625,"title":{"classes/Organization.html":{}},"body":{"classes/CreateAuthOrganizationDto.html":{},"classes/CreateEstablishmentDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/Organization.html":{},"injectables/OrganizationsService.html":{},"coverage.html":{}}}],["organization.dto",{"_index":632,"title":{},"body":{"classes/CreateAuthOrganizationDto.html":{},"controllers/OrganizationsController.html":{},"injectables/OrganizationsService.html":{},"classes/UpdateOrganizationDto.html":{}}}],["organization.dto.ts",{"_index":624,"title":{},"body":{"classes/CreateAuthOrganizationDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/UpdateOrganizationDto.html":{},"coverage.html":{}}}],["organization.dto.ts:11",{"_index":630,"title":{},"body":{"classes/CreateAuthOrganizationDto.html":{},"classes/CreateOrganizationDto.html":{}}}],["organization.dto.ts:14",{"_index":627,"title":{},"body":{"classes/CreateAuthOrganizationDto.html":{}}}],["organization.dto.ts:19",{"_index":790,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["organization.dto.ts:27",{"_index":792,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["organization.dto.ts:35",{"_index":780,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["organization.dto.ts:43",{"_index":783,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["organization.dto.ts:51",{"_index":799,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["organization.dto.ts:59",{"_index":785,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["organization.dto.ts:67",{"_index":786,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["organization.dto.ts:75",{"_index":803,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["organization.dto.ts:8",{"_index":629,"title":{},"body":{"classes/CreateAuthOrganizationDto.html":{}}}],["organization.dto.ts:83",{"_index":795,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["organization_001",{"_index":743,"title":{},"body":{"classes/CreateEstablishmentDto.html":{}}}],["organization_001'})@isnotempty()@isstring",{"_index":728,"title":{},"body":{"classes/CreateEstablishmentDto.html":{}}}],["organization_admin",{"_index":2136,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["organization_employee",{"_index":2135,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["organization_owner",{"_index":2139,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["organization_super_admin",{"_index":2137,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["organizationdocument",{"_index":1299,"title":{},"body":{"classes/Organization.html":{},"controllers/OrganizationsController.html":{},"injectables/OrganizationsService.html":{},"miscellaneous/typealiases.html":{}}}],["organizationid",{"_index":697,"title":{},"body":{"classes/CreateEstablishmentDto.html":{},"classes/Establishment.html":{}}}],["organizationname",{"_index":421,"title":{},"body":{"interfaces/BaseProps.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"interfaces/InitPasswordProps.html":{},"injectables/MailHelper.html":{},"interfaces/ResetPasswordProps.html":{}}}],["organizations",{"_index":1304,"title":{},"body":{"controllers/OrganizationsController.html":{}}}],["organizationschema",{"_index":1300,"title":{},"body":{"classes/Organization.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["organizationscontroller",{"_index":1302,"title":{"controllers/OrganizationsController.html":{}},"body":{"controllers/OrganizationsController.html":{},"modules/OrganizationsModule.html":{},"coverage.html":{}}}],["organizationsmodel",{"_index":1323,"title":{},"body":{"injectables/OrganizationsService.html":{}}}],["organizationsmodule",{"_index":1313,"title":{"modules/OrganizationsModule.html":{}},"body":{"modules/OrganizationsModule.html":{},"modules.html":{},"overview.html":{}}}],["organizationsservice",{"_index":1305,"title":{"injectables/OrganizationsService.html":{}},"body":{"controllers/OrganizationsController.html":{},"modules/OrganizationsModule.html":{},"injectables/OrganizationsService.html":{},"coverage.html":{},"overview.html":{}}}],["original",{"_index":1578,"title":{},"body":{"classes/StringHelper.html":{}}}],["otherwise",{"_index":1280,"title":{},"body":{"classes/NumberHelper.html":{}}}],["out",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookerEmployeesModule.html":{},"modules/ClientsModule.html":{},"modules/EmployeesModule.html":{},"modules/EstablishmentsModule.html":{},"modules/JwtModule.html":{},"modules/LogsModule.html":{},"modules/MailModule.html":{},"modules/OrganizationsModule.html":{},"modules/PlanPricesModule.html":{},"modules/PlansModule.html":{},"modules/PromoCodesModule.html":{},"modules/StripeModule.html":{},"modules/SubscriptionsModule.html":{},"modules/TeamsModule.html":{},"modules/ThrottlerConfig.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":2209,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["ownerid",{"_index":594,"title":{},"body":{"controllers/ClientsController.html":{}}}],["ownership",{"_index":299,"title":{},"body":{"guards/AuthGuard.html":{},"controllers/ClientsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ownership_key",{"_index":290,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["package",{"_index":1959,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":51,"title":{},"body":{"controllers/AppController.html":{},"interfaces/BaseProps.html":{},"controllers/ClientsController.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"classes/Hash.html":{},"interfaces/InitPasswordProps.html":{},"injectables/MailHelper.html":{},"classes/NumberHelper.html":{},"interfaces/ResetPasswordProps.html":{},"classes/StringHelper.html":{},"controllers/UsersController.html":{}}}],["param(\"id",{"_index":137,"title":{},"body":{"controllers/AppController.html":{},"controllers/ClientsController.html":{},"controllers/UsersController.html":{}}}],["parameters",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"controllers/BookerEmployeesController.html":{},"modules/BookerEmployeesModule.html":{},"injectables/BookerEmployeesService.html":{},"controllers/ClientsController.html":{},"injectables/ClientsService.html":{},"injectables/CustomValidationPipe.html":{},"controllers/EmployeesController.html":{},"modules/EmployeesModule.html":{},"injectables/EmployeesService.html":{},"controllers/EstablishmentsController.html":{},"modules/EstablishmentsModule.html":{},"injectables/EstablishmentsService.html":{},"classes/GlobalExceptionFilter.html":{},"classes/Hash.html":{},"classes/LogHelper.html":{},"injectables/LogsService.html":{},"injectables/MailHelper.html":{},"injectables/MailService.html":{},"classes/NotificationHelper.html":{},"classes/NumberHelper.html":{},"controllers/OrganizationsController.html":{},"modules/OrganizationsModule.html":{},"injectables/OrganizationsService.html":{},"controllers/PlanPricesController.html":{},"modules/PlanPricesModule.html":{},"injectables/PlanPricesService.html":{},"controllers/PlansController.html":{},"modules/PlansModule.html":{},"injectables/PlansService.html":{},"controllers/PromoCodesController.html":{},"modules/PromoCodesModule.html":{},"injectables/PromoCodesService.html":{},"classes/Responses.html":{},"classes/SecurityHelper.html":{},"classes/StringHelper.html":{},"injectables/StripeCustomerService.html":{},"injectables/StripePriceService.html":{},"injectables/StripeProductService.html":{},"controllers/SubscriptionsController.html":{},"modules/SubscriptionsModule.html":{},"injectables/SubscriptionsService.html":{},"controllers/TeamsController.html":{},"modules/TeamsModule.html":{},"injectables/TeamsService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"injectables/Token.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["params",{"_index":402,"title":{},"body":{"interfaces/BaseProps.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"interfaces/InitPasswordProps.html":{},"injectables/MailHelper.html":{},"injectables/MailService.html":{},"interfaces/ResetPasswordProps.html":{},"classes/Responses.html":{}}}],["params.attachments",{"_index":1226,"title":{},"body":{"interfaces/MailProps.html":{},"injectables/MailService.html":{}}}],["params.code",{"_index":1503,"title":{},"body":{"classes/Responses.html":{},"interfaces/ResponsesProps.html":{}}}],["params.data",{"_index":1505,"title":{},"body":{"classes/Responses.html":{},"interfaces/ResponsesProps.html":{}}}],["params.error",{"_index":1507,"title":{},"body":{"classes/Responses.html":{},"interfaces/ResponsesProps.html":{}}}],["params.message",{"_index":1499,"title":{},"body":{"classes/Responses.html":{},"interfaces/ResponsesProps.html":{}}}],["params.method.tolowercase",{"_index":1491,"title":{},"body":{"classes/Responses.html":{},"interfaces/ResponsesProps.html":{}}}],["params.multiple",{"_index":1495,"title":{},"body":{"classes/Responses.html":{},"interfaces/ResponsesProps.html":{}}}],["params.path",{"_index":1502,"title":{},"body":{"classes/Responses.html":{},"interfaces/ResponsesProps.html":{}}}],["params.res.status(params.code).json(responsejson",{"_index":1509,"title":{},"body":{"classes/Responses.html":{},"interfaces/ResponsesProps.html":{}}}],["params.sender",{"_index":410,"title":{},"body":{"interfaces/BaseProps.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"interfaces/InitPasswordProps.html":{},"injectables/MailHelper.html":{},"interfaces/ResetPasswordProps.html":{}}}],["params.subject",{"_index":1221,"title":{},"body":{"interfaces/MailProps.html":{},"injectables/MailService.html":{}}}],["params.subject.tolowercase",{"_index":1497,"title":{},"body":{"classes/Responses.html":{},"interfaces/ResponsesProps.html":{}}}],["params.subject.touppercase",{"_index":1501,"title":{},"body":{"classes/Responses.html":{},"interfaces/ResponsesProps.html":{}}}],["params.template",{"_index":1222,"title":{},"body":{"interfaces/MailProps.html":{},"injectables/MailService.html":{}}}],["params.templatedatas",{"_index":1223,"title":{},"body":{"interfaces/MailProps.html":{},"injectables/MailService.html":{}}}],["params.templatedatas.firstname",{"_index":416,"title":{},"body":{"interfaces/BaseProps.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"interfaces/InitPasswordProps.html":{},"injectables/MailHelper.html":{},"interfaces/ResetPasswordProps.html":{}}}],["params.templatedatas.organizationname",{"_index":422,"title":{},"body":{"interfaces/BaseProps.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"interfaces/InitPasswordProps.html":{},"injectables/MailHelper.html":{},"interfaces/ResetPasswordProps.html":{}}}],["params.templatedatas.useremail",{"_index":424,"title":{},"body":{"interfaces/BaseProps.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"interfaces/InitPasswordProps.html":{},"injectables/MailHelper.html":{},"interfaces/ResetPasswordProps.html":{}}}],["params.to",{"_index":409,"title":{},"body":{"interfaces/BaseProps.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"interfaces/InitPasswordProps.html":{},"injectables/MailHelper.html":{},"interfaces/MailProps.html":{},"injectables/MailService.html":{},"interfaces/ResetPasswordProps.html":{}}}],["partialtype",{"_index":1828,"title":{},"body":{"classes/UpdateAuthClientDto.html":{},"classes/UpdateBookerEmployeeDto.html":{},"classes/UpdateClientDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEstablishmentDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UpdatePlanDto.html":{},"classes/UpdatePlanPriceDto.html":{},"classes/UpdatePromoCodeDto.html":{},"classes/UpdateSubscriptionDto.html":{},"classes/UpdateTeamDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createauthclientdto",{"_index":1827,"title":{},"body":{"classes/UpdateAuthClientDto.html":{}}}],["partialtype(createclientdto",{"_index":1831,"title":{},"body":{"classes/UpdateClientDto.html":{}}}],["partialtype(createemployeedto",{"_index":1833,"title":{},"body":{"classes/UpdateEmployeeDto.html":{}}}],["partialtype(createlogdto",{"_index":1837,"title":{},"body":{"classes/UpdateLogDto.html":{}}}],["partialtype(createorganizationdto",{"_index":1839,"title":{},"body":{"classes/UpdateOrganizationDto.html":{}}}],["partialtype(createplandto",{"_index":1841,"title":{},"body":{"classes/UpdatePlanDto.html":{}}}],["partialtype(createplanpricedto",{"_index":1842,"title":{},"body":{"classes/UpdatePlanPriceDto.html":{}}}],["partialtype(createpromocodedto",{"_index":1843,"title":{},"body":{"classes/UpdatePromoCodeDto.html":{}}}],["partialtype(createsubscriptiondto",{"_index":1845,"title":{},"body":{"classes/UpdateSubscriptionDto.html":{}}}],["partialtype(createteamdto",{"_index":1847,"title":{},"body":{"classes/UpdateTeamDto.html":{}}}],["partialtype(createuserdto",{"_index":1850,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["partiellement",{"_index":2119,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["parts",{"_index":1540,"title":{},"body":{"classes/SecurityHelper.html":{}}}],["parts.join",{"_index":1545,"title":{},"body":{"classes/SecurityHelper.html":{}}}],["parts.length",{"_index":1542,"title":{},"body":{"classes/SecurityHelper.html":{}}}],["parts[3",{"_index":1544,"title":{},"body":{"classes/SecurityHelper.html":{}}}],["pas",{"_index":2103,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pass",{"_index":1201,"title":{},"body":{"modules/MailModule.html":{}}}],["password",{"_index":427,"title":{},"body":{"interfaces/BaseProps.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"classes/CreateUserDto.html":{},"interfaces/InitPasswordProps.html":{},"classes/LoginUserDto.html":{},"injectables/MailHelper.html":{},"interfaces/ResetPasswordProps.html":{},"classes/StringHelper.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["password.dto",{"_index":1915,"title":{},"body":{"injectables/UsersService.html":{}}}],["password.dto.ts",{"_index":1059,"title":{},"body":{"classes/ForgotPasswordDto.html":{},"classes/ResetPasswordDto.html":{},"coverage.html":{}}}],["password.dto.ts:12",{"_index":1473,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["password.dto.ts:6",{"_index":1061,"title":{},"body":{"classes/ForgotPasswordDto.html":{}}}],["password.dto.ts:7",{"_index":1474,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["password/${params.templatedatas.token",{"_index":429,"title":{},"body":{"interfaces/BaseProps.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"interfaces/InitPasswordProps.html":{},"injectables/MailHelper.html":{},"interfaces/ResetPasswordProps.html":{}}}],["passwordlength",{"_index":1603,"title":{},"body":{"classes/StringHelper.html":{}}}],["patch",{"_index":1494,"title":{},"body":{"classes/Responses.html":{},"interfaces/ResponsesProps.html":{}}}],["path",{"_index":82,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthMiddleware.html":{},"controllers/ClientsController.html":{},"classes/GlobalExceptionFilter.html":{},"modules/MailModule.html":{},"controllers/PlansController.html":{},"classes/Responses.html":{},"interfaces/ResponsesProps.html":{}}}],["pattern",{"_index":922,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["payload",{"_index":363,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/Token.html":{}}}],["payload.sub",{"_index":370,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["payload.type",{"_index":1818,"title":{},"body":{"injectables/Token.html":{}}}],["payment",{"_index":1244,"title":{},"body":{"modules/MongooseConfig.html":{},"injectables/StripePlanService.html":{},"coverage.html":{}}}],["payment.name",{"_index":1261,"title":{},"body":{"modules/MongooseConfig.html":{}}}],["paymentschema",{"_index":1245,"title":{},"body":{"modules/MongooseConfig.html":{}}}],["paymentsmodule",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["pen",{"_index":2060,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["period",{"_index":845,"title":{},"body":{"classes/CreatePlanDto.html":{},"classes/CreatePlanPriceDto.html":{}}}],["permission",{"_index":308,"title":{},"body":{"guards/AuthGuard.html":{}}}],["peut",{"_index":2117,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["phone",{"_index":698,"title":{},"body":{"classes/CreateEstablishmentDto.html":{},"classes/CreateUserDto.html":{},"classes/Establishment.html":{},"classes/NotificationHelper.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["php",{"_index":2044,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pkr",{"_index":2057,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["plan",{"_index":801,"title":{"classes/Plan.html":{}},"body":{"classes/CreateOrganizationDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreatePlanPriceDto.html":{},"modules/MongooseConfig.html":{},"classes/Plan.html":{},"controllers/PlanPricesController.html":{},"injectables/PlanPricesService.html":{},"controllers/PlansController.html":{},"injectables/PlansService.html":{},"classes/UpdatePlanPriceDto.html":{},"coverage.html":{}}}],["plan'})@apiresponse({status",{"_index":1384,"title":{},"body":{"controllers/PlansController.html":{}}}],["plan'})@isnotempty()@isstring",{"_index":842,"title":{},"body":{"classes/CreatePlanDto.html":{}}}],["plan.dto",{"_index":1389,"title":{},"body":{"controllers/PlansController.html":{},"injectables/PlansService.html":{},"classes/UpdatePlanDto.html":{}}}],["plan.dto.ts",{"_index":813,"title":{},"body":{"classes/CreatePlanDto.html":{},"classes/UpdatePlanDto.html":{},"coverage.html":{}}}],["plan.dto.ts:11",{"_index":843,"title":{},"body":{"classes/CreatePlanDto.html":{}}}],["plan.dto.ts:19",{"_index":832,"title":{},"body":{"classes/CreatePlanDto.html":{}}}],["plan.dto.ts:27",{"_index":825,"title":{},"body":{"classes/CreatePlanDto.html":{}}}],["plan.dto.ts:35",{"_index":827,"title":{},"body":{"classes/CreatePlanDto.html":{}}}],["plan.dto.ts:43",{"_index":837,"title":{},"body":{"classes/CreatePlanDto.html":{}}}],["plan.dto.ts:51",{"_index":841,"title":{},"body":{"classes/CreatePlanDto.html":{}}}],["plan.dto.ts:60",{"_index":850,"title":{},"body":{"classes/CreatePlanDto.html":{}}}],["plan.dto.ts:68",{"_index":822,"title":{},"body":{"classes/CreatePlanDto.html":{}}}],["plan.name",{"_index":1262,"title":{},"body":{"modules/MongooseConfig.html":{}}}],["plan_123abc",{"_index":809,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["plan_123abc'})@isoptional()@isstring",{"_index":802,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["plandocument",{"_index":1334,"title":{},"body":{"classes/Plan.html":{},"controllers/PlansController.html":{},"injectables/PlansService.html":{},"miscellaneous/typealiases.html":{}}}],["planprice",{"_index":1336,"title":{"classes/PlanPrice.html":{}},"body":{"classes/PlanPrice.html":{},"injectables/PlanPricesService.html":{},"coverage.html":{}}}],["planpricedocument",{"_index":1348,"title":{},"body":{"classes/PlanPrice.html":{},"controllers/PlanPricesController.html":{},"injectables/PlanPricesService.html":{},"miscellaneous/typealiases.html":{}}}],["planprices",{"_index":1365,"title":{},"body":{"controllers/PlanPricesController.html":{}}}],["planpriceschema",{"_index":1349,"title":{},"body":{"classes/PlanPrice.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["planpricescontroller",{"_index":1351,"title":{"controllers/PlanPricesController.html":{}},"body":{"controllers/PlanPricesController.html":{},"modules/PlanPricesModule.html":{},"coverage.html":{}}}],["planpricesmodel",{"_index":1377,"title":{},"body":{"injectables/PlanPricesService.html":{}}}],["planpricesmodule",{"_index":1366,"title":{"modules/PlanPricesModule.html":{}},"body":{"modules/PlanPricesModule.html":{},"modules.html":{},"overview.html":{}}}],["planpricesservice",{"_index":1355,"title":{"injectables/PlanPricesService.html":{}},"body":{"controllers/PlanPricesController.html":{},"modules/PlanPricesModule.html":{},"injectables/PlanPricesService.html":{},"coverage.html":{},"overview.html":{}}}],["plans",{"_index":1382,"title":{},"body":{"controllers/PlansController.html":{}}}],["planschema",{"_index":1247,"title":{},"body":{"modules/MongooseConfig.html":{},"classes/Plan.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["planscontroller",{"_index":1380,"title":{"controllers/PlansController.html":{}},"body":{"controllers/PlansController.html":{},"modules/PlansModule.html":{},"coverage.html":{}}}],["plansmodel",{"_index":1423,"title":{},"body":{"injectables/PlansService.html":{}}}],["plansmodule",{"_index":195,"title":{"modules/PlansModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PlansModule.html":{},"modules.html":{},"overview.html":{}}}],["plansservice",{"_index":1386,"title":{"injectables/PlansService.html":{}},"body":{"controllers/PlansController.html":{},"modules/PlansModule.html":{},"injectables/PlansService.html":{},"coverage.html":{},"overview.html":{}}}],["please",{"_index":2192,"title":{},"body":{"index.html":{}}}],["pln",{"_index":2035,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["populate",{"_index":224,"title":{},"body":{"injectables/AppService.html":{}}}],["populate(this.populate",{"_index":250,"title":{},"body":{"injectables/AppService.html":{}}}],["populatemodel",{"_index":220,"title":{},"body":{"injectables/AppService.html":{},"injectables/BookerEmployeesService.html":{},"injectables/ClientsService.html":{},"injectables/EmployeesService.html":{},"injectables/EstablishmentsService.html":{},"injectables/OrganizationsService.html":{},"injectables/PlanPricesService.html":{},"injectables/PlansService.html":{},"injectables/PromoCodesService.html":{},"injectables/SubscriptionsService.html":{},"injectables/TeamsService.html":{},"injectables/UsersService.html":{}}}],["populatemodel(model",{"_index":235,"title":{},"body":{"injectables/AppService.html":{},"injectables/BookerEmployeesService.html":{},"injectables/ClientsService.html":{},"injectables/EmployeesService.html":{},"injectables/EstablishmentsService.html":{},"injectables/OrganizationsService.html":{},"injectables/PlanPricesService.html":{},"injectables/PlansService.html":{},"injectables/PromoCodesService.html":{},"injectables/SubscriptionsService.html":{},"injectables/TeamsService.html":{},"injectables/UsersService.html":{}}}],["port",{"_index":1198,"title":{},"body":{"modules/MailModule.html":{}}}],["position",{"_index":945,"title":{},"body":{"classes/CustomFieldDto.html":{}}}],["post",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"controllers/BookerEmployeesController.html":{},"controllers/ClientsController.html":{},"controllers/EmployeesController.html":{},"controllers/EstablishmentsController.html":{},"controllers/OrganizationsController.html":{},"controllers/PlanPricesController.html":{},"controllers/PlansController.html":{},"controllers/PromoCodesController.html":{},"classes/Responses.html":{},"interfaces/ResponsesProps.html":{},"controllers/SubscriptionsController.html":{},"controllers/TeamsController.html":{},"controllers/UsersController.html":{}}}],["postal",{"_index":670,"title":{},"body":{"classes/CreateClientDto.html":{},"classes/CreateEstablishmentDto.html":{},"classes/CreateOrganizationDto.html":{}}}],["postalcode",{"_index":523,"title":{},"body":{"classes/Client.html":{},"classes/CreateClientDto.html":{},"classes/CreateEstablishmentDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/Establishment.html":{},"classes/Organization.html":{}}}],["pour",{"_index":2076,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["prefix",{"_index":463,"title":{},"body":{"controllers/BookerEmployeesController.html":{},"controllers/ClientsController.html":{},"controllers/EmployeesController.html":{},"controllers/EstablishmentsController.html":{},"controllers/OrganizationsController.html":{},"controllers/PlanPricesController.html":{},"controllers/PlansController.html":{},"controllers/PromoCodesController.html":{},"controllers/SubscriptionsController.html":{},"controllers/TeamsController.html":{},"controllers/UsersController.html":{}}}],["premium",{"_index":828,"title":{},"body":{"classes/CreatePlanDto.html":{}}}],["price",{"_index":861,"title":{},"body":{"classes/CreatePlanPriceDto.html":{}}}],["price.dto",{"_index":1358,"title":{},"body":{"controllers/PlanPricesController.html":{},"injectables/PlanPricesService.html":{},"classes/UpdatePlanPriceDto.html":{}}}],["price.dto.ts",{"_index":859,"title":{},"body":{"classes/CreatePlanPriceDto.html":{},"classes/UpdatePlanPriceDto.html":{},"coverage.html":{}}}],["price.dto.ts:17",{"_index":893,"title":{},"body":{"classes/CreatePlanPriceDto.html":{}}}],["price.dto.ts:27",{"_index":869,"title":{},"body":{"classes/CreatePlanPriceDto.html":{}}}],["price.dto.ts:36",{"_index":880,"title":{},"body":{"classes/CreatePlanPriceDto.html":{}}}],["price.dto.ts:45",{"_index":883,"title":{},"body":{"classes/CreatePlanPriceDto.html":{}}}],["price.dto.ts:53",{"_index":886,"title":{},"body":{"classes/CreatePlanPriceDto.html":{}}}],["price.dto.ts:61",{"_index":895,"title":{},"body":{"classes/CreatePlanPriceDto.html":{}}}],["price.dto.ts:70",{"_index":863,"title":{},"body":{"classes/CreatePlanPriceDto.html":{}}}],["price.dto.ts:78",{"_index":876,"title":{},"body":{"classes/CreatePlanPriceDto.html":{}}}],["price.dto.ts:86",{"_index":896,"title":{},"body":{"classes/CreatePlanPriceDto.html":{}}}],["price.entity",{"_index":1361,"title":{},"body":{"controllers/PlanPricesController.html":{},"injectables/PlanPricesService.html":{}}}],["price.entity.ts",{"_index":1338,"title":{},"body":{"classes/PlanPrice.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["price.entity.ts:11",{"_index":1345,"title":{},"body":{"classes/PlanPrice.html":{}}}],["price.entity.ts:14",{"_index":1340,"title":{},"body":{"classes/PlanPrice.html":{}}}],["price.entity.ts:17",{"_index":1342,"title":{},"body":{"classes/PlanPrice.html":{}}}],["price.entity.ts:20",{"_index":1343,"title":{},"body":{"classes/PlanPrice.html":{}}}],["price.entity.ts:23",{"_index":1344,"title":{},"body":{"classes/PlanPrice.html":{}}}],["price.entity.ts:26",{"_index":1346,"title":{},"body":{"classes/PlanPrice.html":{}}}],["price.entity.ts:29",{"_index":1339,"title":{},"body":{"classes/PlanPrice.html":{}}}],["price.entity.ts:31",{"_index":1341,"title":{},"body":{"classes/PlanPrice.html":{}}}],["price.entity.ts:32",{"_index":1347,"title":{},"body":{"classes/PlanPrice.html":{}}}],["price.interface",{"_index":1418,"title":{},"body":{"modules/PlansModule.html":{},"injectables/StripePriceService.html":{}}}],["price.interface.ts",{"_index":1659,"title":{},"body":{"classes/StripePriceProps.html":{},"coverage.html":{}}}],["price.interface.ts:10",{"_index":1665,"title":{},"body":{"classes/StripePriceProps.html":{}}}],["price.interface.ts:11",{"_index":1667,"title":{},"body":{"classes/StripePriceProps.html":{}}}],["price.interface.ts:12",{"_index":1660,"title":{},"body":{"classes/StripePriceProps.html":{}}}],["price.interface.ts:6",{"_index":1666,"title":{},"body":{"classes/StripePriceProps.html":{}}}],["price.interface.ts:7",{"_index":1662,"title":{},"body":{"classes/StripePriceProps.html":{}}}],["price.interface.ts:8",{"_index":1661,"title":{},"body":{"classes/StripePriceProps.html":{}}}],["price.interface.ts:9",{"_index":1664,"title":{},"body":{"classes/StripePriceProps.html":{}}}],["price.service",{"_index":1397,"title":{},"body":{"controllers/PlansController.html":{},"modules/StripeModule.html":{}}}],["price.service.ts",{"_index":1670,"title":{},"body":{"injectables/StripePriceService.html":{},"coverage.html":{}}}],["price.service.ts:33",{"_index":1675,"title":{},"body":{"injectables/StripePriceService.html":{}}}],["price.service.ts:37",{"_index":1676,"title":{},"body":{"injectables/StripePriceService.html":{}}}],["price.service.ts:46",{"_index":1674,"title":{},"body":{"injectables/StripePriceService.html":{}}}],["price.service.ts:6",{"_index":1671,"title":{},"body":{"injectables/StripePriceService.html":{}}}],["price.service.ts:9",{"_index":1673,"title":{},"body":{"injectables/StripePriceService.html":{}}}],["prices",{"_index":1354,"title":{},"body":{"controllers/PlanPricesController.html":{}}}],["prices.controller",{"_index":1372,"title":{},"body":{"modules/PlanPricesModule.html":{}}}],["prices.controller.ts",{"_index":1353,"title":{},"body":{"controllers/PlanPricesController.html":{},"coverage.html":{}}}],["prices.module.ts",{"_index":1370,"title":{},"body":{"modules/PlanPricesModule.html":{}}}],["prices.module.ts:13",{"_index":1371,"title":{},"body":{"modules/PlanPricesModule.html":{}}}],["prices.service",{"_index":1357,"title":{},"body":{"controllers/PlanPricesController.html":{},"modules/PlanPricesModule.html":{}}}],["prices.service.ts",{"_index":1374,"title":{},"body":{"injectables/PlanPricesService.html":{},"coverage.html":{}}}],["prices.service.ts:17",{"_index":1376,"title":{},"body":{"injectables/PlanPricesService.html":{}}}],["prices/dto/create",{"_index":858,"title":{},"body":{"classes/CreatePlanPriceDto.html":{},"controllers/PlanPricesController.html":{},"injectables/PlanPricesService.html":{},"classes/UpdatePlanPriceDto.html":{},"coverage.html":{}}}],["prices/dto/update",{"_index":1360,"title":{},"body":{"controllers/PlanPricesController.html":{},"injectables/PlanPricesService.html":{},"classes/UpdatePlanPriceDto.html":{},"coverage.html":{}}}],["prices/entities/plan",{"_index":1337,"title":{},"body":{"classes/PlanPrice.html":{},"controllers/PlanPricesController.html":{},"injectables/PlanPricesService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["prices/plan",{"_index":1352,"title":{},"body":{"controllers/PlanPricesController.html":{},"modules/PlanPricesModule.html":{},"injectables/PlanPricesService.html":{},"coverage.html":{}}}],["priority",{"_index":830,"title":{},"body":{"classes/CreatePlanDto.html":{}}}],["private",{"_index":77,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"interfaces/BaseProps.html":{},"controllers/BookerEmployeesController.html":{},"injectables/BookerEmployeesService.html":{},"controllers/ClientsController.html":{},"injectables/ClientsService.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"controllers/EmployeesController.html":{},"injectables/EmployeesService.html":{},"controllers/EstablishmentsController.html":{},"injectables/EstablishmentsService.html":{},"interfaces/InitPasswordProps.html":{},"injectables/LogsService.html":{},"injectables/MailHelper.html":{},"controllers/OrganizationsController.html":{},"injectables/OrganizationsService.html":{},"controllers/PlanPricesController.html":{},"injectables/PlanPricesService.html":{},"controllers/PlansController.html":{},"injectables/PlansService.html":{},"controllers/PromoCodesController.html":{},"injectables/PromoCodesService.html":{},"interfaces/ResetPasswordProps.html":{},"classes/SecurityHelper.html":{},"injectables/StripeCustomerService.html":{},"injectables/StripePriceService.html":{},"injectables/StripeProductService.html":{},"controllers/SubscriptionsController.html":{},"injectables/SubscriptionsService.html":{},"controllers/TeamsController.html":{},"injectables/TeamsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["problèmes",{"_index":2112,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["process.env",{"_index":2258,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.encryption_key",{"_index":1526,"title":{},"body":{"classes/SecurityHelper.html":{}}}],["process.env.jwt_secret",{"_index":1118,"title":{},"body":{"modules/JwtModule.html":{}}}],["product",{"_index":1402,"title":{},"body":{"controllers/PlansController.html":{}}}],["product.interface",{"_index":1416,"title":{},"body":{"modules/PlansModule.html":{},"injectables/StripeProductService.html":{}}}],["product.interface.ts",{"_index":1686,"title":{},"body":{"classes/StripeProductProps.html":{},"coverage.html":{}}}],["product.interface.ts:2",{"_index":1687,"title":{},"body":{"classes/StripeProductProps.html":{}}}],["product.service",{"_index":1394,"title":{},"body":{"controllers/PlansController.html":{}}}],["product.service.ts",{"_index":1688,"title":{},"body":{"injectables/StripeProductService.html":{},"coverage.html":{}}}],["product.service.ts:16",{"_index":1693,"title":{},"body":{"injectables/StripeProductService.html":{}}}],["product.service.ts:20",{"_index":1694,"title":{},"body":{"injectables/StripeProductService.html":{}}}],["product.service.ts:28",{"_index":1692,"title":{},"body":{"injectables/StripeProductService.html":{}}}],["product.service.ts:6",{"_index":1689,"title":{},"body":{"injectables/StripeProductService.html":{}}}],["product.service.ts:9",{"_index":1691,"title":{},"body":{"injectables/StripeProductService.html":{}}}],["production",{"_index":2176,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":2154,"title":{},"body":{"index.html":{}}}],["project",{"_index":2185,"title":{},"body":{"index.html":{}}}],["promise",{"_index":229,"title":{},"body":{"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/BookerEmployeesService.html":{},"injectables/ClientsService.html":{},"injectables/EmployeesService.html":{},"injectables/EstablishmentsService.html":{},"injectables/LogsService.html":{},"injectables/OrganizationsService.html":{},"injectables/PlanPricesService.html":{},"injectables/PlansService.html":{},"injectables/PromoCodesService.html":{},"injectables/SubscriptionsService.html":{},"injectables/TeamsService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"injectables/UsersService.html":{}}}],["promo",{"_index":909,"title":{},"body":{"classes/CreatePromoCodeDto.html":{},"controllers/PromoCodesController.html":{},"injectables/PromoCodesService.html":{},"classes/UpdatePromoCodeDto.html":{},"coverage.html":{}}}],["promocode",{"_index":1426,"title":{"classes/PromoCode.html":{}},"body":{"classes/PromoCode.html":{},"injectables/PromoCodesService.html":{},"coverage.html":{}}}],["promocodedocument",{"_index":1431,"title":{},"body":{"classes/PromoCode.html":{},"controllers/PromoCodesController.html":{},"injectables/PromoCodesService.html":{},"miscellaneous/typealiases.html":{}}}],["promocodes",{"_index":1449,"title":{},"body":{"controllers/PromoCodesController.html":{}}}],["promocodeschema",{"_index":1432,"title":{},"body":{"classes/PromoCode.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["promocodescontroller",{"_index":1434,"title":{"controllers/PromoCodesController.html":{}},"body":{"controllers/PromoCodesController.html":{},"modules/PromoCodesModule.html":{},"coverage.html":{}}}],["promocodesmodel",{"_index":1460,"title":{},"body":{"injectables/PromoCodesService.html":{}}}],["promocodesmodule",{"_index":1450,"title":{"modules/PromoCodesModule.html":{}},"body":{"modules/PromoCodesModule.html":{},"modules.html":{},"overview.html":{}}}],["promocodesservice",{"_index":1438,"title":{"injectables/PromoCodesService.html":{}},"body":{"controllers/PromoCodesController.html":{},"modules/PromoCodesModule.html":{},"injectables/PromoCodesService.html":{},"coverage.html":{},"overview.html":{}}}],["promotion",{"_index":1656,"title":{},"body":{"injectables/StripePlanService-1.html":{},"coverage.html":{}}}],["prop",{"_index":454,"title":{},"body":{"classes/BookerEmployee.html":{},"classes/Client.html":{},"classes/Employee.html":{},"classes/Establishment.html":{},"classes/Log.html":{},"classes/Organization.html":{},"classes/Plan.html":{},"classes/PlanPrice.html":{},"classes/PromoCode.html":{},"classes/Subscription.html":{},"classes/Team.html":{},"classes/User.html":{}}}],["prop({default",{"_index":524,"title":{},"body":{"classes/Client.html":{},"classes/Establishment.html":{},"classes/Organization.html":{}}}],["prop({required",{"_index":448,"title":{},"body":{"classes/BookerEmployee.html":{},"classes/Client.html":{},"classes/Employee.html":{},"classes/Establishment.html":{},"classes/Log.html":{},"classes/Organization.html":{},"classes/Plan.html":{},"classes/PlanPrice.html":{},"classes/User.html":{}}}],["prop({type",{"_index":1127,"title":{},"body":{"classes/Log.html":{},"classes/User.html":{}}}],["properties",{"_index":391,"title":{"properties.html":{}},"body":{"interfaces/BaseProps.html":{},"classes/BookerEmployee.html":{},"classes/Client.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"classes/CreateAuthOrganizationDto.html":{},"classes/CreateBookerEmployeeDto.html":{},"classes/CreateClientDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEstablishmentDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreatePlanPriceDto.html":{},"classes/CreatePromoCodeDto.html":{},"classes/CreateSubscriptionDto.html":{},"classes/CreateTeamDto.html":{},"classes/CreateUserDto.html":{},"classes/CustomFieldDto.html":{},"classes/CustomFieldValueDto.html":{},"classes/Employee.html":{},"classes/Establishment.html":{},"classes/FlagDto.html":{},"classes/ForgotPasswordDto.html":{},"interfaces/InitPasswordProps.html":{},"classes/Log.html":{},"classes/LoginUserDto.html":{},"injectables/MailHelper.html":{},"interfaces/MailProps.html":{},"classes/Organization.html":{},"classes/Plan.html":{},"classes/PlanPrice.html":{},"classes/PromoCode.html":{},"classes/RefreshTokenDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/ResetPasswordProps.html":{},"interfaces/ResponsesProps.html":{},"classes/SecurityHelper.html":{},"classes/StripeCustomerProps.html":{},"classes/StripePriceProps.html":{},"classes/StripeProductProps.html":{},"classes/Subscription.html":{},"classes/Team.html":{},"classes/User.html":{},"interfaces/logProps.html":{},"properties.html":{}}}],["protected",{"_index":74,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/BookerEmployeesService.html":{},"injectables/ClientsService.html":{},"injectables/EmployeesService.html":{},"injectables/EstablishmentsService.html":{},"injectables/OrganizationsService.html":{},"injectables/PlanPricesService.html":{},"injectables/PlansService.html":{},"injectables/PromoCodesService.html":{},"injectables/SubscriptionsService.html":{},"injectables/TeamsService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"injectables/UsersService.html":{}}}],["provide",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"modules/StripeModule.html":{}}}],["provided",{"_index":357,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["providers",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookerEmployeesModule.html":{},"modules/ClientsModule.html":{},"modules/EmployeesModule.html":{},"modules/EstablishmentsModule.html":{},"modules/JwtModule.html":{},"modules/LogsModule.html":{},"modules/MailModule.html":{},"modules/OrganizationsModule.html":{},"modules/PlanPricesModule.html":{},"modules/PlansModule.html":{},"modules/PromoCodesModule.html":{},"modules/StripeModule.html":{},"modules/SubscriptionsModule.html":{},"modules/TeamsModule.html":{},"modules/ThrottlerConfig.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["providers/services/firebase/firebase.service",{"_index":280,"title":{},"body":{"guards/AuthGuard.html":{}}}],["providers/services/stripe/stripe.module",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["providers/stripe/price/stripe",{"_index":1646,"title":{},"body":{"modules/StripeModule.html":{}}}],["proxy.guard",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["proxy.guard.ts",{"_index":1760,"title":{},"body":{"injectables/ThrottlerBehindProxyGuard.html":{},"coverage.html":{}}}],["proxy.guard.ts:6",{"_index":1765,"title":{},"body":{"injectables/ThrottlerBehindProxyGuard.html":{}}}],["précoce",{"_index":2099,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["public",{"_index":404,"title":{},"body":{"interfaces/BaseProps.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"classes/Hash.html":{},"interfaces/InitPasswordProps.html":{},"classes/LogHelper.html":{},"injectables/LogsService.html":{},"injectables/MailHelper.html":{},"interfaces/MailProps.html":{},"injectables/MailService.html":{},"classes/NotificationHelper.html":{},"interfaces/ResetPasswordProps.html":{},"classes/Responses.html":{},"interfaces/ResponsesProps.html":{},"classes/SecurityHelper.html":{},"injectables/Token.html":{},"coverage.html":{},"interfaces/logProps.html":{},"miscellaneous/variables.html":{}}}],["put",{"_index":48,"title":{},"body":{"controllers/AppController.html":{},"controllers/ClientsController.html":{},"classes/Responses.html":{},"interfaces/ResponsesProps.html":{},"controllers/UsersController.html":{}}}],["put(\":id",{"_index":139,"title":{},"body":{"controllers/AppController.html":{},"controllers/ClientsController.html":{},"controllers/UsersController.html":{}}}],["put(':id",{"_index":45,"title":{},"body":{"controllers/AppController.html":{},"controllers/BookerEmployeesController.html":{},"controllers/EmployeesController.html":{},"controllers/EstablishmentsController.html":{},"controllers/OrganizationsController.html":{},"controllers/PlanPricesController.html":{},"controllers/PlansController.html":{},"controllers/PromoCodesController.html":{},"controllers/SubscriptionsController.html":{},"controllers/TeamsController.html":{}}}],["qar",{"_index":2058,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["qui",{"_index":2101,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["random",{"_index":1582,"title":{},"body":{"classes/StringHelper.html":{}}}],["randomly",{"_index":1583,"title":{},"body":{"classes/StringHelper.html":{}}}],["read",{"_index":2193,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":75,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"interfaces/BaseProps.html":{},"controllers/BookerEmployeesController.html":{},"controllers/ClientsController.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"controllers/EmployeesController.html":{},"controllers/EstablishmentsController.html":{},"interfaces/InitPasswordProps.html":{},"classes/LogHelper.html":{},"injectables/MailHelper.html":{},"interfaces/MailProps.html":{},"injectables/MailService.html":{},"controllers/OrganizationsController.html":{},"controllers/PlanPricesController.html":{},"controllers/PlansController.html":{},"controllers/PromoCodesController.html":{},"classes/ResetPasswordDto.html":{},"interfaces/ResetPasswordProps.html":{},"injectables/StripeCustomerService.html":{},"injectables/StripePriceService.html":{},"injectables/StripeProductService.html":{},"controllers/SubscriptionsController.html":{},"controllers/TeamsController.html":{},"controllers/UsersController.html":{},"interfaces/logProps.html":{}}}],["record",{"_index":1764,"title":{},"body":{"injectables/ThrottlerBehindProxyGuard.html":{}}}],["recurring",{"_index":1680,"title":{},"body":{"injectables/StripePriceService.html":{}}}],["reflect",{"_index":2000,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":278,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{}}}],["refresh",{"_index":1814,"title":{},"body":{"injectables/Token.html":{},"miscellaneous/enumerations.html":{}}}],["refreshtoken",{"_index":1466,"title":{},"body":{"classes/RefreshTokenDto.html":{},"injectables/Token.html":{}}}],["refreshtokendto",{"_index":1463,"title":{"classes/RefreshTokenDto.html":{}},"body":{"classes/RefreshTokenDto.html":{},"coverage.html":{}}}],["regex",{"_index":935,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/ResetPasswordDto.html":{},"classes/StringHelper.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["regex.password",{"_index":1612,"title":{},"body":{"classes/StringHelper.html":{}}}],["regex.test(password",{"_index":1613,"title":{},"body":{"classes/StringHelper.html":{}}}],["regexp",{"_index":2243,"title":{},"body":{"miscellaneous/variables.html":{}}}],["regexp(\"/^(+?d{1,3",{"_index":2249,"title":{},"body":{"miscellaneous/variables.html":{}}}],["regexp(\"/^[a",{"_index":2251,"title":{},"body":{"miscellaneous/variables.html":{}}}],["register",{"_index":1401,"title":{},"body":{"controllers/PlansController.html":{}}}],["registered",{"_index":1406,"title":{},"body":{"controllers/PlansController.html":{}}}],["remove",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BookerEmployeesController.html":{},"injectables/BookerEmployeesService.html":{},"controllers/ClientsController.html":{},"injectables/ClientsService.html":{},"controllers/EmployeesController.html":{},"injectables/EmployeesService.html":{},"controllers/EstablishmentsController.html":{},"injectables/EstablishmentsService.html":{},"controllers/OrganizationsController.html":{},"injectables/OrganizationsService.html":{},"controllers/PlanPricesController.html":{},"injectables/PlanPricesService.html":{},"controllers/PlansController.html":{},"injectables/PlansService.html":{},"controllers/PromoCodesController.html":{},"injectables/PromoCodesService.html":{},"controllers/SubscriptionsController.html":{},"injectables/SubscriptionsService.html":{},"controllers/TeamsController.html":{},"injectables/TeamsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["remove(id",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BookerEmployeesController.html":{},"injectables/BookerEmployeesService.html":{},"controllers/ClientsController.html":{},"injectables/ClientsService.html":{},"controllers/EmployeesController.html":{},"injectables/EmployeesService.html":{},"controllers/EstablishmentsController.html":{},"injectables/EstablishmentsService.html":{},"controllers/OrganizationsController.html":{},"injectables/OrganizationsService.html":{},"controllers/PlanPricesController.html":{},"injectables/PlanPricesService.html":{},"controllers/PlansController.html":{},"injectables/PlansService.html":{},"controllers/PromoCodesController.html":{},"injectables/PromoCodesService.html":{},"controllers/SubscriptionsController.html":{},"injectables/SubscriptionsService.html":{},"controllers/TeamsController.html":{},"injectables/TeamsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["removelasts",{"_index":1572,"title":{},"body":{"classes/StringHelper.html":{}}}],["removelasts(str",{"_index":1584,"title":{},"body":{"classes/StringHelper.html":{}}}],["removes",{"_index":1586,"title":{},"body":{"classes/StringHelper.html":{}}}],["reply",{"_index":1204,"title":{},"body":{"modules/MailModule.html":{}}}],["reply@nom.com",{"_index":394,"title":{},"body":{"interfaces/BaseProps.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"interfaces/InitPasswordProps.html":{},"injectables/MailHelper.html":{},"interfaces/ResetPasswordProps.html":{}}}],["repository",{"_index":2166,"title":{},"body":{"index.html":{}}}],["req",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthMiddleware.html":{},"controllers/BookerEmployeesController.html":{},"controllers/ClientsController.html":{},"controllers/EmployeesController.html":{},"controllers/EstablishmentsController.html":{},"controllers/OrganizationsController.html":{},"controllers/PlanPricesController.html":{},"controllers/PlansController.html":{},"controllers/PromoCodesController.html":{},"controllers/SubscriptionsController.html":{},"controllers/TeamsController.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"controllers/UsersController.html":{}}}],["req.headers.authorization",{"_index":348,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["req.ip",{"_index":1769,"title":{},"body":{"injectables/ThrottlerBehindProxyGuard.html":{}}}],["req.ips.length",{"_index":1767,"title":{},"body":{"injectables/ThrottlerBehindProxyGuard.html":{}}}],["req.ips[0",{"_index":1768,"title":{},"body":{"injectables/ThrottlerBehindProxyGuard.html":{}}}],["req[\"client",{"_index":592,"title":{},"body":{"controllers/ClientsController.html":{}}}],["req[\"user",{"_index":93,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthMiddleware.html":{},"controllers/ClientsController.html":{},"controllers/PlansController.html":{}}}],["req[\"userinfos",{"_index":95,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthMiddleware.html":{},"controllers/PlansController.html":{}}}],["request",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"controllers/BookerEmployeesController.html":{},"controllers/ClientsController.html":{},"controllers/EmployeesController.html":{},"controllers/EstablishmentsController.html":{},"classes/GlobalExceptionFilter.html":{},"controllers/OrganizationsController.html":{},"controllers/PlanPricesController.html":{},"controllers/PlansController.html":{},"controllers/PromoCodesController.html":{},"controllers/SubscriptionsController.html":{},"controllers/TeamsController.html":{},"controllers/UsersController.html":{}}}],["request.'})@apibearerauth()@post",{"_index":554,"title":{},"body":{"controllers/ClientsController.html":{},"controllers/PlansController.html":{},"controllers/UsersController.html":{}}}],["request.method",{"_index":1077,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["request.url",{"_index":1076,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["request['customer",{"_index":298,"title":{},"body":{"guards/AuthGuard.html":{}}}],["request['user",{"_index":295,"title":{},"body":{"guards/AuthGuard.html":{}}}],["required",{"_index":458,"title":{},"body":{"classes/BookerEmployee.html":{},"classes/Client.html":{},"classes/CreateLogDto.html":{},"classes/CreatePlanPriceDto.html":{},"classes/CreateUserDto.html":{},"classes/Employee.html":{},"classes/Establishment.html":{},"classes/Log.html":{},"classes/NotificationHelper.html":{},"classes/Organization.html":{},"classes/Plan.html":{},"classes/PlanPrice.html":{},"classes/User.html":{}}}],["required'})@isenum(loglevelenum",{"_index":761,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["required'})@isstring({message",{"_index":751,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["res",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthMiddleware.html":{},"controllers/BookerEmployeesController.html":{},"controllers/ClientsController.html":{},"controllers/EmployeesController.html":{},"controllers/EstablishmentsController.html":{},"classes/GlobalExceptionFilter.html":{},"controllers/OrganizationsController.html":{},"controllers/PlanPricesController.html":{},"controllers/PlansController.html":{},"controllers/PromoCodesController.html":{},"classes/Responses.html":{},"interfaces/ResponsesProps.html":{},"controllers/SubscriptionsController.html":{},"controllers/TeamsController.html":{},"controllers/UsersController.html":{}}}],["res.status(401).json",{"_index":356,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["reset",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"interfaces/BaseProps.html":{},"modules/BookerEmployeesModule.html":{},"modules/ClientsModule.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"modules/EmployeesModule.html":{},"modules/EstablishmentsModule.html":{},"interfaces/InitPasswordProps.html":{},"modules/JwtModule.html":{},"modules/LogsModule.html":{},"injectables/MailHelper.html":{},"modules/MailModule.html":{},"modules/OrganizationsModule.html":{},"modules/PlanPricesModule.html":{},"modules/PlansModule.html":{},"modules/PromoCodesModule.html":{},"interfaces/ResetPasswordProps.html":{},"modules/StripeModule.html":{},"modules/SubscriptionsModule.html":{},"modules/TeamsModule.html":{},"modules/ThrottlerConfig.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["reset_password",{"_index":2132,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["resetpassworddto",{"_index":1469,"title":{"classes/ResetPasswordDto.html":{}},"body":{"classes/ResetPasswordDto.html":{},"coverage.html":{}}}],["resetpasswordprops",{"_index":426,"title":{"interfaces/ResetPasswordProps.html":{}},"body":{"interfaces/BaseProps.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"interfaces/InitPasswordProps.html":{},"injectables/MailHelper.html":{},"interfaces/ResetPasswordProps.html":{},"coverage.html":{}}}],["resource",{"_index":310,"title":{},"body":{"guards/AuthGuard.html":{}}}],["response",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthMiddleware.html":{},"controllers/BookerEmployeesController.html":{},"controllers/ClientsController.html":{},"controllers/EmployeesController.html":{},"controllers/EstablishmentsController.html":{},"classes/GlobalExceptionFilter.html":{},"controllers/OrganizationsController.html":{},"controllers/PlanPricesController.html":{},"controllers/PlansController.html":{},"controllers/PromoCodesController.html":{},"classes/Responses.html":{},"interfaces/ResponsesProps.html":{},"controllers/SubscriptionsController.html":{},"controllers/TeamsController.html":{},"controllers/UsersController.html":{}}}],["responsejson",{"_index":1504,"title":{},"body":{"classes/Responses.html":{},"interfaces/ResponsesProps.html":{}}}],["responsejson[\"data",{"_index":1506,"title":{},"body":{"classes/Responses.html":{},"interfaces/ResponsesProps.html":{}}}],["responsejson[\"error",{"_index":1508,"title":{},"body":{"classes/Responses.html":{},"interfaces/ResponsesProps.html":{}}}],["responses",{"_index":60,"title":{"classes/Responses.html":{}},"body":{"controllers/AppController.html":{},"injectables/AuthMiddleware.html":{},"classes/GlobalExceptionFilter.html":{},"controllers/PlansController.html":{},"classes/Responses.html":{},"interfaces/ResponsesProps.html":{},"coverage.html":{}}}],["responses.getresponse",{"_index":110,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthMiddleware.html":{},"controllers/ClientsController.html":{},"classes/GlobalExceptionFilter.html":{},"controllers/PlansController.html":{}}}],["responsesprops",{"_index":1479,"title":{"interfaces/ResponsesProps.html":{}},"body":{"classes/Responses.html":{},"interfaces/ResponsesProps.html":{},"coverage.html":{}}}],["results",{"_index":144,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"interfaces/BaseProps.html":{},"classes/BookerEmployee.html":{},"controllers/BookerEmployeesController.html":{},"modules/BookerEmployeesModule.html":{},"injectables/BookerEmployeesService.html":{},"classes/Client.html":{},"controllers/ClientsController.html":{},"modules/ClientsModule.html":{},"injectables/ClientsService.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"classes/CreateAuthClientDto.html":{},"classes/CreateAuthOrganizationDto.html":{},"classes/CreateBookerEmployeeDto.html":{},"classes/CreateClientDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEstablishmentDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreatePlanPriceDto.html":{},"classes/CreatePromoCodeDto.html":{},"classes/CreateSubscriptionDto.html":{},"classes/CreateTeamDto.html":{},"classes/CreateUserDto.html":{},"classes/CustomFieldDto.html":{},"classes/CustomFieldValueDto.html":{},"injectables/CustomValidationPipe.html":{},"classes/Employee.html":{},"controllers/EmployeesController.html":{},"modules/EmployeesModule.html":{},"injectables/EmployeesService.html":{},"classes/Establishment.html":{},"controllers/EstablishmentsController.html":{},"modules/EstablishmentsModule.html":{},"injectables/EstablishmentsService.html":{},"classes/FlagDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/GlobalExceptionFilter.html":{},"classes/Hash.html":{},"interfaces/InitPasswordProps.html":{},"modules/JwtModule.html":{},"classes/Log.html":{},"classes/LogHelper.html":{},"classes/LoginUserDto.html":{},"modules/LogsModule.html":{},"injectables/LogsService.html":{},"injectables/MailHelper.html":{},"modules/MailModule.html":{},"interfaces/MailProps.html":{},"injectables/MailService.html":{},"modules/MongooseConfig.html":{},"classes/NotificationHelper.html":{},"classes/NumberHelper.html":{},"classes/Organization.html":{},"controllers/OrganizationsController.html":{},"modules/OrganizationsModule.html":{},"injectables/OrganizationsService.html":{},"classes/Plan.html":{},"classes/PlanPrice.html":{},"controllers/PlanPricesController.html":{},"modules/PlanPricesModule.html":{},"injectables/PlanPricesService.html":{},"controllers/PlansController.html":{},"modules/PlansModule.html":{},"injectables/PlansService.html":{},"classes/PromoCode.html":{},"controllers/PromoCodesController.html":{},"modules/PromoCodesModule.html":{},"injectables/PromoCodesService.html":{},"classes/RefreshTokenDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/ResetPasswordProps.html":{},"classes/Responses.html":{},"interfaces/ResponsesProps.html":{},"classes/SecurityHelper.html":{},"classes/StringHelper.html":{},"classes/StripeCustomerProps.html":{},"injectables/StripeCustomerService.html":{},"modules/StripeModule.html":{},"injectables/StripePlanService.html":{},"injectables/StripePlanService-1.html":{},"injectables/StripePlanService-2.html":{},"classes/StripePriceProps.html":{},"injectables/StripePriceService.html":{},"classes/StripeProductProps.html":{},"injectables/StripeProductService.html":{},"classes/Subscription.html":{},"controllers/SubscriptionsController.html":{},"modules/SubscriptionsModule.html":{},"injectables/SubscriptionsService.html":{},"classes/Team.html":{},"controllers/TeamsController.html":{},"modules/TeamsModule.html":{},"injectables/TeamsService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"modules/ThrottlerConfig.html":{},"injectables/Token.html":{},"classes/UpdateAuthClientDto.html":{},"classes/UpdateBookerEmployeeDto.html":{},"classes/UpdateClientDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEstablishmentDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UpdatePlanDto.html":{},"classes/UpdatePlanPriceDto.html":{},"classes/UpdatePromoCodeDto.html":{},"classes/UpdateSubscriptionDto.html":{},"classes/UpdateTeamDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"interfaces/logProps.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":1624,"title":{},"body":{"injectables/StripeCustomerService.html":{},"injectables/StripePriceService.html":{},"injectables/StripeProductService.html":{}}}],["retrieve(id",{"_index":1631,"title":{},"body":{"injectables/StripeCustomerService.html":{},"injectables/StripePriceService.html":{},"injectables/StripeProductService.html":{}}}],["retrieved",{"_index":131,"title":{},"body":{"controllers/AppController.html":{},"classes/Responses.html":{},"interfaces/ResponsesProps.html":{}}}],["return",{"_index":109,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"interfaces/BaseProps.html":{},"controllers/ClientsController.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"injectables/CustomValidationPipe.html":{},"classes/Hash.html":{},"interfaces/InitPasswordProps.html":{},"injectables/LogsService.html":{},"injectables/MailHelper.html":{},"interfaces/MailProps.html":{},"injectables/MailService.html":{},"classes/NotificationHelper.html":{},"classes/NumberHelper.html":{},"controllers/PlansController.html":{},"interfaces/ResetPasswordProps.html":{},"classes/Responses.html":{},"interfaces/ResponsesProps.html":{},"classes/SecurityHelper.html":{},"classes/StringHelper.html":{},"injectables/StripeCustomerService.html":{},"modules/StripeModule.html":{},"injectables/StripePriceService.html":{},"injectables/StripeProductService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"injectables/Token.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"controllers/BookerEmployeesController.html":{},"modules/BookerEmployeesModule.html":{},"injectables/BookerEmployeesService.html":{},"controllers/ClientsController.html":{},"injectables/ClientsService.html":{},"injectables/CustomValidationPipe.html":{},"controllers/EmployeesController.html":{},"modules/EmployeesModule.html":{},"injectables/EmployeesService.html":{},"controllers/EstablishmentsController.html":{},"modules/EstablishmentsModule.html":{},"injectables/EstablishmentsService.html":{},"classes/GlobalExceptionFilter.html":{},"classes/Hash.html":{},"classes/LogHelper.html":{},"injectables/LogsService.html":{},"injectables/MailHelper.html":{},"injectables/MailService.html":{},"classes/NotificationHelper.html":{},"classes/NumberHelper.html":{},"controllers/OrganizationsController.html":{},"modules/OrganizationsModule.html":{},"injectables/OrganizationsService.html":{},"controllers/PlanPricesController.html":{},"modules/PlanPricesModule.html":{},"injectables/PlanPricesService.html":{},"controllers/PlansController.html":{},"modules/PlansModule.html":{},"injectables/PlansService.html":{},"controllers/PromoCodesController.html":{},"modules/PromoCodesModule.html":{},"injectables/PromoCodesService.html":{},"classes/Responses.html":{},"classes/SecurityHelper.html":{},"classes/StringHelper.html":{},"injectables/StripeCustomerService.html":{},"injectables/StripePriceService.html":{},"injectables/StripeProductService.html":{},"controllers/SubscriptionsController.html":{},"modules/SubscriptionsModule.html":{},"injectables/SubscriptionsService.html":{},"controllers/TeamsController.html":{},"modules/TeamsModule.html":{},"injectables/TeamsService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"injectables/Token.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["role",{"_index":919,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["role.enum",{"_index":287,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"classes/CreateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["role.enum.ts",{"_index":2015,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["roleenum",{"_index":314,"title":{},"body":{"guards/AuthGuard.html":{}}}],["roleenum.admin",{"_index":319,"title":{},"body":{"guards/AuthGuard.html":{}}}],["roleenum.brainst_admin",{"_index":322,"title":{},"body":{"guards/AuthGuard.html":{}}}],["roleenum.brainst_employee",{"_index":321,"title":{},"body":{"guards/AuthGuard.html":{}}}],["roleenum.brainst_super_admin",{"_index":323,"title":{},"body":{"guards/AuthGuard.html":{}}}],["roleenum.client",{"_index":317,"title":{},"body":{"guards/AuthGuard.html":{}}}],["roleenum.employee",{"_index":318,"title":{},"body":{"guards/AuthGuard.html":{}}}],["roleenum.super_admin",{"_index":320,"title":{},"body":{"guards/AuthGuard.html":{}}}],["rolehierarchy",{"_index":316,"title":{},"body":{"guards/AuthGuard.html":{}}}],["rolehierarchy[userrole",{"_index":325,"title":{},"body":{"guards/AuthGuard.html":{}}}],["roles",{"_index":302,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles.some((role",{"_index":326,"title":{},"body":{"guards/AuthGuard.html":{}}}],["roles_key",{"_index":288,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ron",{"_index":2049,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["rub",{"_index":2025,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["run",{"_index":2172,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":2002,"title":{},"body":{"dependencies.html":{}}}],["réponse",{"_index":2115,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["s",{"_index":1588,"title":{},"body":{"classes/StringHelper.html":{}}}],["s]?|0)?d{9,12",{"_index":2250,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sar",{"_index":2047,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["scalable",{"_index":2159,"title":{},"body":{"index.html":{}}}],["schema",{"_index":79,"title":{},"body":{"controllers/AppController.html":{},"classes/BookerEmployee.html":{},"classes/Client.html":{},"classes/Employee.html":{},"classes/Establishment.html":{},"classes/Log.html":{},"modules/MongooseConfig.html":{},"classes/Organization.html":{},"classes/Plan.html":{},"classes/PlanPrice.html":{},"classes/PromoCode.html":{},"classes/Responses.html":{},"interfaces/ResponsesProps.html":{},"classes/Subscription.html":{},"classes/Team.html":{},"classes/User.html":{}}}],["schemafactory",{"_index":455,"title":{},"body":{"classes/BookerEmployee.html":{},"classes/Client.html":{},"classes/Employee.html":{},"classes/Establishment.html":{},"classes/Log.html":{},"classes/Organization.html":{},"classes/Plan.html":{},"classes/PlanPrice.html":{},"classes/PromoCode.html":{},"classes/Subscription.html":{},"classes/Team.html":{},"classes/User.html":{}}}],["schemafactory.createforclass(bookeremployee",{"_index":460,"title":{},"body":{"classes/BookerEmployee.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(client",{"_index":543,"title":{},"body":{"classes/Client.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(employee",{"_index":985,"title":{},"body":{"classes/Employee.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(establishment",{"_index":1024,"title":{},"body":{"classes/Establishment.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(log",{"_index":1132,"title":{},"body":{"classes/Log.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(organization",{"_index":1301,"title":{},"body":{"classes/Organization.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(plan",{"_index":1335,"title":{},"body":{"classes/Plan.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(planprice",{"_index":1350,"title":{},"body":{"classes/PlanPrice.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(promocode",{"_index":1433,"title":{},"body":{"classes/PromoCode.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(subscription",{"_index":1701,"title":{},"body":{"classes/Subscription.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(team",{"_index":1732,"title":{},"body":{"classes/Team.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":1864,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["second",{"_index":706,"title":{},"body":{"classes/CreateEstablishmentDto.html":{},"classes/CreateOrganizationDto.html":{}}}],["secret",{"_index":1117,"title":{},"body":{"modules/JwtModule.html":{}}}],["secretkey",{"_index":1105,"title":{},"body":{"classes/Hash.html":{}}}],["secretkey).tostring",{"_index":1107,"title":{},"body":{"classes/Hash.html":{}}}],["securityhelper",{"_index":1171,"title":{"classes/SecurityHelper.html":{}},"body":{"injectables/LogsService.html":{},"classes/SecurityHelper.html":{},"coverage.html":{}}}],["securityhelper.anonymizeandencryptip(createlogdto.ip",{"_index":1175,"title":{},"body":{"injectables/LogsService.html":{}}}],["sek",{"_index":2032,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["select",{"_index":1854,"title":{},"body":{"classes/User.html":{}}}],["select(find",{"_index":264,"title":{},"body":{"injectables/AppService.html":{}}}],["sendconfirmaccountclient",{"_index":434,"title":{},"body":{"interfaces/BaseProps.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"interfaces/InitPasswordProps.html":{},"injectables/MailHelper.html":{},"interfaces/ResetPasswordProps.html":{}}}],["sendconfirmaccountclient(params",{"_index":405,"title":{},"body":{"interfaces/BaseProps.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"interfaces/InitPasswordProps.html":{},"injectables/MailHelper.html":{},"interfaces/ResetPasswordProps.html":{}}}],["sendconfirmaccountorganization",{"_index":436,"title":{},"body":{"interfaces/BaseProps.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"interfaces/InitPasswordProps.html":{},"injectables/MailHelper.html":{},"interfaces/ResetPasswordProps.html":{}}}],["sendconfirmaccountorganization(params",{"_index":419,"title":{},"body":{"interfaces/BaseProps.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"interfaces/InitPasswordProps.html":{},"injectables/MailHelper.html":{},"interfaces/ResetPasswordProps.html":{}}}],["sendemail",{"_index":407,"title":{},"body":{"interfaces/BaseProps.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"interfaces/InitPasswordProps.html":{},"injectables/MailHelper.html":{},"interfaces/ResetPasswordProps.html":{},"miscellaneous/variables.html":{}}}],["sender",{"_index":392,"title":{},"body":{"interfaces/BaseProps.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"interfaces/InitPasswordProps.html":{},"injectables/MailHelper.html":{},"interfaces/MailProps.html":{},"injectables/MailService.html":{},"interfaces/ResetPasswordProps.html":{}}}],["sendinitpasswordemail",{"_index":1179,"title":{},"body":{"injectables/MailHelper.html":{}}}],["sendinitpasswordemail(params",{"_index":430,"title":{},"body":{"interfaces/BaseProps.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"interfaces/InitPasswordProps.html":{},"injectables/MailHelper.html":{},"interfaces/ResetPasswordProps.html":{}}}],["sendmail",{"_index":1229,"title":{},"body":{"injectables/MailService.html":{}}}],["sendmail(params",{"_index":1217,"title":{},"body":{"interfaces/MailProps.html":{},"injectables/MailService.html":{}}}],["sendresetpasswordemail",{"_index":437,"title":{},"body":{"interfaces/BaseProps.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"interfaces/InitPasswordProps.html":{},"injectables/MailHelper.html":{},"interfaces/ResetPasswordProps.html":{}}}],["sendresetpasswordemail(params",{"_index":425,"title":{},"body":{"interfaces/BaseProps.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"interfaces/InitPasswordProps.html":{},"injectables/MailHelper.html":{},"interfaces/ResetPasswordProps.html":{}}}],["sends",{"_index":398,"title":{},"body":{"interfaces/BaseProps.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"interfaces/InitPasswordProps.html":{},"injectables/MailHelper.html":{},"interfaces/ResetPasswordProps.html":{}}}],["server",{"_index":2160,"title":{},"body":{"index.html":{}}}],["service",{"_index":78,"title":{},"body":{"controllers/AppController.html":{}}}],["services/mail/templates",{"_index":1207,"title":{},"body":{"modules/MailModule.html":{}}}],["session",{"_index":84,"title":{},"body":{"controllers/AppController.html":{}}}],["session.aborttransaction",{"_index":117,"title":{},"body":{"controllers/AppController.html":{}}}],["session.committransaction",{"_index":108,"title":{},"body":{"controllers/AppController.html":{}}}],["session.endsession",{"_index":126,"title":{},"body":{"controllers/AppController.html":{}}}],["session.starttransaction",{"_index":87,"title":{},"body":{"controllers/AppController.html":{}}}],["setmetadata(is_public_key",{"_index":2241,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(ownership_key",{"_index":2242,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(roles_key",{"_index":2257,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settings",{"_index":182,"title":{},"body":{"modules/AppModule.html":{},"interfaces/BaseProps.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"interfaces/InitPasswordProps.html":{},"modules/JwtModule.html":{},"injectables/MailHelper.html":{},"modules/MailModule.html":{},"interfaces/MailProps.html":{},"injectables/MailService.html":{},"modules/MongooseConfig.html":{},"interfaces/ResetPasswordProps.html":{},"modules/StripeModule.html":{},"injectables/Token.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["settings.access_jwt_secret",{"_index":1809,"title":{},"body":{"injectables/Token.html":{}}}],["settings.frontend_url}auth/confirm/${params.templatedatas.token",{"_index":418,"title":{},"body":{"interfaces/BaseProps.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"interfaces/InitPasswordProps.html":{},"injectables/MailHelper.html":{},"interfaces/ResetPasswordProps.html":{}}}],["settings.frontend_url}auth/init",{"_index":433,"title":{},"body":{"interfaces/BaseProps.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"interfaces/InitPasswordProps.html":{},"injectables/MailHelper.html":{},"interfaces/ResetPasswordProps.html":{}}}],["settings.frontend_url}auth/reset",{"_index":428,"title":{},"body":{"interfaces/BaseProps.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"interfaces/InitPasswordProps.html":{},"injectables/MailHelper.html":{},"interfaces/ResetPasswordProps.html":{}}}],["settings.jwt_secret",{"_index":1805,"title":{},"body":{"injectables/Token.html":{}}}],["settings.mail_user",{"_index":1220,"title":{},"body":{"interfaces/MailProps.html":{},"injectables/MailService.html":{}}}],["settings.mailtrap_host",{"_index":1197,"title":{},"body":{"modules/MailModule.html":{}}}],["settings.mailtrap_pass",{"_index":1202,"title":{},"body":{"modules/MailModule.html":{}}}],["settings.mailtrap_user",{"_index":1200,"title":{},"body":{"modules/MailModule.html":{}}}],["settings.refresh_jwt_secret",{"_index":1812,"title":{},"body":{"injectables/Token.html":{}}}],["sgd",{"_index":2029,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["shop",{"_index":716,"title":{},"body":{"classes/CreateEstablishmentDto.html":{}}}],["shop'})@isnotempty()@isstring",{"_index":725,"title":{},"body":{"classes/CreateEstablishmentDto.html":{}}}],["side",{"_index":2161,"title":{},"body":{"index.html":{}}}],["signaux",{"_index":2097,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["situations",{"_index":2121,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["smallest",{"_index":864,"title":{},"body":{"classes/CreatePlanPriceDto.html":{}}}],["sms",{"_index":668,"title":{},"body":{"classes/CreateClientDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/NotificationHelper.html":{}}}],["socket.io",{"_index":1971,"title":{},"body":{"dependencies.html":{}}}],["sont",{"_index":2082,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sort",{"_index":257,"title":{},"body":{"injectables/AppService.html":{}}}],["sort(sort",{"_index":262,"title":{},"body":{"injectables/AppService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"interfaces/BaseProps.html":{},"classes/BookerEmployee.html":{},"controllers/BookerEmployeesController.html":{},"modules/BookerEmployeesModule.html":{},"injectables/BookerEmployeesService.html":{},"classes/Client.html":{},"controllers/ClientsController.html":{},"modules/ClientsModule.html":{},"injectables/ClientsService.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"classes/CreateAuthClientDto.html":{},"classes/CreateAuthOrganizationDto.html":{},"classes/CreateBookerEmployeeDto.html":{},"classes/CreateClientDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEstablishmentDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreatePlanPriceDto.html":{},"classes/CreatePromoCodeDto.html":{},"classes/CreateSubscriptionDto.html":{},"classes/CreateTeamDto.html":{},"classes/CreateUserDto.html":{},"classes/CustomFieldDto.html":{},"classes/CustomFieldValueDto.html":{},"injectables/CustomValidationPipe.html":{},"classes/Employee.html":{},"controllers/EmployeesController.html":{},"modules/EmployeesModule.html":{},"injectables/EmployeesService.html":{},"classes/Establishment.html":{},"controllers/EstablishmentsController.html":{},"modules/EstablishmentsModule.html":{},"injectables/EstablishmentsService.html":{},"classes/FlagDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/GlobalExceptionFilter.html":{},"classes/Hash.html":{},"interfaces/InitPasswordProps.html":{},"modules/JwtModule.html":{},"classes/Log.html":{},"classes/LogHelper.html":{},"classes/LoginUserDto.html":{},"modules/LogsModule.html":{},"injectables/LogsService.html":{},"injectables/MailHelper.html":{},"modules/MailModule.html":{},"interfaces/MailProps.html":{},"injectables/MailService.html":{},"modules/MongooseConfig.html":{},"classes/NotificationHelper.html":{},"classes/NumberHelper.html":{},"classes/Organization.html":{},"controllers/OrganizationsController.html":{},"modules/OrganizationsModule.html":{},"injectables/OrganizationsService.html":{},"classes/Plan.html":{},"classes/PlanPrice.html":{},"controllers/PlanPricesController.html":{},"modules/PlanPricesModule.html":{},"injectables/PlanPricesService.html":{},"controllers/PlansController.html":{},"modules/PlansModule.html":{},"injectables/PlansService.html":{},"classes/PromoCode.html":{},"controllers/PromoCodesController.html":{},"modules/PromoCodesModule.html":{},"injectables/PromoCodesService.html":{},"classes/RefreshTokenDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/ResetPasswordProps.html":{},"classes/Responses.html":{},"interfaces/ResponsesProps.html":{},"classes/SecurityHelper.html":{},"classes/StringHelper.html":{},"classes/StripeCustomerProps.html":{},"injectables/StripeCustomerService.html":{},"modules/StripeModule.html":{},"injectables/StripePlanService.html":{},"injectables/StripePlanService-1.html":{},"injectables/StripePlanService-2.html":{},"classes/StripePriceProps.html":{},"injectables/StripePriceService.html":{},"classes/StripeProductProps.html":{},"injectables/StripeProductService.html":{},"classes/Subscription.html":{},"controllers/SubscriptionsController.html":{},"modules/SubscriptionsModule.html":{},"injectables/SubscriptionsService.html":{},"classes/Team.html":{},"controllers/TeamsController.html":{},"modules/TeamsModule.html":{},"injectables/TeamsService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"modules/ThrottlerConfig.html":{},"injectables/Token.html":{},"classes/UpdateAuthClientDto.html":{},"classes/UpdateBookerEmployeeDto.html":{},"classes/UpdateClientDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEstablishmentDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UpdatePlanDto.html":{},"classes/UpdatePlanPriceDto.html":{},"classes/UpdatePromoCodeDto.html":{},"classes/UpdateSubscriptionDto.html":{},"classes/UpdateTeamDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{},"interfaces/logProps.html":{}}}],["souvent",{"_index":2125,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sparse",{"_index":1856,"title":{},"body":{"classes/User.html":{}}}],["sponsors",{"_index":2188,"title":{},"body":{"index.html":{}}}],["src/.../booker",{"_index":2219,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../client.entity.ts",{"_index":2220,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../config.ts",{"_index":2234,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../currency.enum.ts",{"_index":2008,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../employee.entity.ts",{"_index":2221,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../establishment.entity.ts",{"_index":2222,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../interval.enum.ts",{"_index":2009,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../interval.type.ts",{"_index":2223,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../log",{"_index":2010,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../log.entity.ts",{"_index":2224,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":2151,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../organization.entity.ts",{"_index":2225,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../ownership.decorator.ts",{"_index":2236,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../plan",{"_index":2227,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../plan.entity.ts",{"_index":2226,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../promo",{"_index":2228,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../public.decorator.ts",{"_index":2235,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../regex.ts",{"_index":2237,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../roles.decorator.ts",{"_index":2238,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../settings.ts",{"_index":2239,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../subscription.entity.ts",{"_index":2229,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../team.entity.ts",{"_index":2230,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../token",{"_index":2012,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../user",{"_index":2014,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../user.entity.ts",{"_index":2231,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app.controller",{"_index":478,"title":{},"body":{"controllers/BookerEmployeesController.html":{},"controllers/ClientsController.html":{},"controllers/EmployeesController.html":{},"controllers/EstablishmentsController.html":{},"controllers/OrganizationsController.html":{},"controllers/PlanPricesController.html":{},"controllers/PlansController.html":{},"controllers/PromoCodesController.html":{},"controllers/SubscriptionsController.html":{},"controllers/TeamsController.html":{},"controllers/UsersController.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:123",{"_index":35,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:193",{"_index":38,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:265",{"_index":46,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:338",{"_index":42,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:41",{"_index":27,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service",{"_index":58,"title":{},"body":{"controllers/AppController.html":{},"injectables/BookerEmployeesService.html":{},"injectables/ClientsService.html":{},"injectables/EmployeesService.html":{},"injectables/EstablishmentsService.html":{},"injectables/OrganizationsService.html":{},"injectables/PlanPricesService.html":{},"injectables/PlansService.html":{},"injectables/PromoCodesService.html":{},"injectables/SubscriptionsService.html":{},"injectables/TeamsService.html":{},"injectables/UsersService.html":{}}}],["src/app.service.ts",{"_index":218,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:15",{"_index":228,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:26",{"_index":230,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:30",{"_index":231,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:38",{"_index":238,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:51",{"_index":237,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:55",{"_index":234,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:75",{"_index":241,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:84",{"_index":236,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:9",{"_index":226,"title":{},"body":{"injectables/AppService.html":{}}}],["src/common/constants/regex.ts",{"_index":1930,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/constants/settings.ts",{"_index":1933,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/decorators/ownership.decorator.ts",{"_index":1934,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/decorators/public.decorator.ts",{"_index":1935,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/decorators/roles.decorator.ts",{"_index":1937,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/dtos/custom",{"_index":943,"title":{},"body":{"classes/CustomFieldDto.html":{},"classes/CustomFieldValueDto.html":{},"coverage.html":{}}}],["src/common/dtos/flag.dto.ts",{"_index":1052,"title":{},"body":{"classes/FlagDto.html":{},"coverage.html":{}}}],["src/common/dtos/flag.dto.ts:16",{"_index":1056,"title":{},"body":{"classes/FlagDto.html":{}}}],["src/common/dtos/flag.dto.ts:20",{"_index":1055,"title":{},"body":{"classes/FlagDto.html":{}}}],["src/common/enums/currency.enum.ts",{"_index":2017,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/enums/interval.enum.ts",{"_index":2067,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/enums/log",{"_index":2070,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/enums/token",{"_index":2130,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/enums/user",{"_index":2134,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/exceptions/validator.exception.ts",{"_index":1064,"title":{},"body":{"classes/GlobalExceptionFilter.html":{},"coverage.html":{}}}],["src/common/exceptions/validator.exception.ts:13",{"_index":1069,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["src/common/guards/auth.guard.ts",{"_index":270,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/common/guards/auth.guard.ts:17",{"_index":272,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/common/guards/auth.guard.ts:20",{"_index":275,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/common/guards/throttler",{"_index":1759,"title":{},"body":{"injectables/ThrottlerBehindProxyGuard.html":{},"coverage.html":{}}}],["src/common/helpers/crypto.helper.ts",{"_index":1515,"title":{},"body":{"classes/SecurityHelper.html":{},"coverage.html":{}}}],["src/common/helpers/crypto.helper.ts:16",{"_index":1537,"title":{},"body":{"classes/SecurityHelper.html":{}}}],["src/common/helpers/crypto.helper.ts:27",{"_index":1534,"title":{},"body":{"classes/SecurityHelper.html":{}}}],["src/common/helpers/crypto.helper.ts:4",{"_index":1528,"title":{},"body":{"classes/SecurityHelper.html":{}}}],["src/common/helpers/crypto.helper.ts:41",{"_index":1530,"title":{},"body":{"classes/SecurityHelper.html":{}}}],["src/common/helpers/crypto.helper.ts:6",{"_index":1525,"title":{},"body":{"classes/SecurityHelper.html":{}}}],["src/common/helpers/crypto.helper.ts:8",{"_index":1532,"title":{},"body":{"classes/SecurityHelper.html":{}}}],["src/common/helpers/hash.helper.ts",{"_index":1085,"title":{},"body":{"classes/Hash.html":{},"coverage.html":{}}}],["src/common/helpers/hash.helper.ts:25",{"_index":1091,"title":{},"body":{"classes/Hash.html":{}}}],["src/common/helpers/hash.helper.ts:8",{"_index":1095,"title":{},"body":{"classes/Hash.html":{}}}],["src/common/helpers/log.helper.ts",{"_index":1133,"title":{},"body":{"classes/LogHelper.html":{},"coverage.html":{},"interfaces/logProps.html":{}}}],["src/common/helpers/log.helper.ts:17",{"_index":1135,"title":{},"body":{"classes/LogHelper.html":{}}}],["src/common/helpers/log.helper.ts:20",{"_index":1138,"title":{},"body":{"classes/LogHelper.html":{}}}],["src/common/helpers/notification.helper.ts",{"_index":1265,"title":{},"body":{"classes/NotificationHelper.html":{},"coverage.html":{}}}],["src/common/helpers/notification.helper.ts:2",{"_index":1268,"title":{},"body":{"classes/NotificationHelper.html":{}}}],["src/common/helpers/number.helper.ts",{"_index":1270,"title":{},"body":{"classes/NumberHelper.html":{},"coverage.html":{}}}],["src/common/helpers/number.helper.ts:9",{"_index":1274,"title":{},"body":{"classes/NumberHelper.html":{}}}],["src/common/helpers/responses.helper.ts",{"_index":1475,"title":{},"body":{"classes/Responses.html":{},"interfaces/ResponsesProps.html":{},"coverage.html":{}}}],["src/common/helpers/responses.helper.ts:19",{"_index":1480,"title":{},"body":{"classes/Responses.html":{}}}],["src/common/helpers/responses.helper.ts:86",{"_index":1482,"title":{},"body":{"classes/Responses.html":{}}}],["src/common/helpers/string.helper.ts",{"_index":1569,"title":{},"body":{"classes/StringHelper.html":{},"coverage.html":{}}}],["src/common/helpers/string.helper.ts:10",{"_index":1585,"title":{},"body":{"classes/StringHelper.html":{}}}],["src/common/helpers/string.helper.ts:22",{"_index":1574,"title":{},"body":{"classes/StringHelper.html":{}}}],["src/common/helpers/string.helper.ts:31",{"_index":1580,"title":{},"body":{"classes/StringHelper.html":{}}}],["src/common/helpers/token.helper.ts",{"_index":1778,"title":{},"body":{"injectables/Token.html":{},"coverage.html":{}}}],["src/common/helpers/token.helper.ts:21",{"_index":1786,"title":{},"body":{"injectables/Token.html":{}}}],["src/common/helpers/token.helper.ts:36",{"_index":1788,"title":{},"body":{"injectables/Token.html":{}}}],["src/common/helpers/token.helper.ts:55",{"_index":1799,"title":{},"body":{"injectables/Token.html":{}}}],["src/common/helpers/token.helper.ts:72",{"_index":1796,"title":{},"body":{"injectables/Token.html":{}}}],["src/common/helpers/token.helper.ts:8",{"_index":1791,"title":{},"body":{"injectables/Token.html":{}}}],["src/common/helpers/token.helper.ts:90",{"_index":1794,"title":{},"body":{"injectables/Token.html":{}}}],["src/common/middlewares/auth.middleware.ts",{"_index":329,"title":{},"body":{"injectables/AuthMiddleware.html":{},"coverage.html":{}}}],["src/common/middlewares/auth.middleware.ts:19",{"_index":335,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["src/common/middlewares/auth.middleware.ts:28",{"_index":339,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["src/common/pipes/custom",{"_index":960,"title":{},"body":{"injectables/CustomValidationPipe.html":{},"coverage.html":{}}}],["src/common/types/interval.type.ts",{"_index":2232,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/config/config.ts",{"_index":1946,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/database/mongoose.config.ts",{"_index":1233,"title":{},"body":{"modules/MongooseConfig.html":{}}}],["src/config/security/throttler.config.ts",{"_index":1772,"title":{},"body":{"modules/ThrottlerConfig.html":{}}}],["src/config/session/jwt.config.ts",{"_index":1114,"title":{},"body":{"modules/JwtModule.html":{}}}],["src/main.ts",{"_index":1947,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/auth/auth.controller.ts",{"_index":1948,"title":{},"body":{"coverage.html":{}}}],["src/modules/auth/auth.module.ts",{"_index":381,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/modules/auth/dto/create",{"_index":617,"title":{},"body":{"classes/CreateAuthClientDto.html":{},"classes/CreateAuthOrganizationDto.html":{},"coverage.html":{}}}],["src/modules/auth/dto/forgot",{"_index":1058,"title":{},"body":{"classes/ForgotPasswordDto.html":{},"coverage.html":{}}}],["src/modules/auth/dto/login",{"_index":1154,"title":{},"body":{"classes/LoginUserDto.html":{},"coverage.html":{}}}],["src/modules/auth/dto/refresh",{"_index":1464,"title":{},"body":{"classes/RefreshTokenDto.html":{},"coverage.html":{}}}],["src/modules/auth/dto/reset",{"_index":1470,"title":{},"body":{"classes/ResetPasswordDto.html":{},"coverage.html":{}}}],["src/modules/auth/dto/update",{"_index":1826,"title":{},"body":{"classes/UpdateAuthClientDto.html":{},"coverage.html":{}}}],["src/modules/booker",{"_index":440,"title":{},"body":{"classes/BookerEmployee.html":{},"controllers/BookerEmployeesController.html":{},"modules/BookerEmployeesModule.html":{},"injectables/BookerEmployeesService.html":{},"classes/CreateBookerEmployeeDto.html":{},"classes/UpdateBookerEmployeeDto.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/modules/clients/clients.controller.ts",{"_index":545,"title":{},"body":{"controllers/ClientsController.html":{},"coverage.html":{}}}],["src/modules/clients/clients.module.ts",{"_index":601,"title":{},"body":{"modules/ClientsModule.html":{}}}],["src/modules/clients/clients.service.ts",{"_index":606,"title":{},"body":{"injectables/ClientsService.html":{},"coverage.html":{}}}],["src/modules/clients/clients.service.ts:18",{"_index":608,"title":{},"body":{"injectables/ClientsService.html":{}}}],["src/modules/clients/dto/create",{"_index":656,"title":{},"body":{"classes/CreateClientDto.html":{},"coverage.html":{}}}],["src/modules/clients/dto/update",{"_index":1830,"title":{},"body":{"classes/UpdateClientDto.html":{},"coverage.html":{}}}],["src/modules/clients/entities/client.entity.ts",{"_index":516,"title":{},"body":{"classes/Client.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/modules/clients/entities/client.entity.ts:11",{"_index":537,"title":{},"body":{"classes/Client.html":{}}}],["src/modules/clients/entities/client.entity.ts:14",{"_index":532,"title":{},"body":{"classes/Client.html":{}}}],["src/modules/clients/entities/client.entity.ts:17",{"_index":531,"title":{},"body":{"classes/Client.html":{}}}],["src/modules/clients/entities/client.entity.ts:20",{"_index":526,"title":{},"body":{"classes/Client.html":{}}}],["src/modules/clients/entities/client.entity.ts:23",{"_index":527,"title":{},"body":{"classes/Client.html":{}}}],["src/modules/clients/entities/client.entity.ts:26",{"_index":535,"title":{},"body":{"classes/Client.html":{}}}],["src/modules/clients/entities/client.entity.ts:29",{"_index":528,"title":{},"body":{"classes/Client.html":{}}}],["src/modules/clients/entities/client.entity.ts:32",{"_index":529,"title":{},"body":{"classes/Client.html":{}}}],["src/modules/clients/entities/client.entity.ts:35",{"_index":533,"title":{},"body":{"classes/Client.html":{}}}],["src/modules/clients/entities/client.entity.ts:38",{"_index":534,"title":{},"body":{"classes/Client.html":{}}}],["src/modules/clients/entities/client.entity.ts:43",{"_index":530,"title":{},"body":{"classes/Client.html":{}}}],["src/modules/clients/entities/client.entity.ts:44",{"_index":536,"title":{},"body":{"classes/Client.html":{}}}],["src/modules/employees/dto/create",{"_index":686,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"coverage.html":{}}}],["src/modules/employees/dto/update",{"_index":1832,"title":{},"body":{"classes/UpdateEmployeeDto.html":{},"coverage.html":{}}}],["src/modules/employees/employees.controller.ts",{"_index":987,"title":{},"body":{"controllers/EmployeesController.html":{},"coverage.html":{}}}],["src/modules/employees/employees.module.ts",{"_index":998,"title":{},"body":{"modules/EmployeesModule.html":{}}}],["src/modules/employees/employees.module.ts:13",{"_index":999,"title":{},"body":{"modules/EmployeesModule.html":{}}}],["src/modules/employees/employees.service.ts",{"_index":1002,"title":{},"body":{"injectables/EmployeesService.html":{},"coverage.html":{}}}],["src/modules/employees/employees.service.ts:17",{"_index":1004,"title":{},"body":{"injectables/EmployeesService.html":{}}}],["src/modules/employees/entities/employee.entity.ts",{"_index":975,"title":{},"body":{"classes/Employee.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/modules/employees/entities/employee.entity.ts:11",{"_index":982,"title":{},"body":{"classes/Employee.html":{}}}],["src/modules/employees/entities/employee.entity.ts:14",{"_index":978,"title":{},"body":{"classes/Employee.html":{}}}],["src/modules/employees/entities/employee.entity.ts:17",{"_index":977,"title":{},"body":{"classes/Employee.html":{}}}],["src/modules/employees/entities/employee.entity.ts:20",{"_index":979,"title":{},"body":{"classes/Employee.html":{}}}],["src/modules/employees/entities/employee.entity.ts:23",{"_index":980,"title":{},"body":{"classes/Employee.html":{}}}],["src/modules/employees/entities/employee.entity.ts:25",{"_index":976,"title":{},"body":{"classes/Employee.html":{}}}],["src/modules/employees/entities/employee.entity.ts:26",{"_index":981,"title":{},"body":{"classes/Employee.html":{}}}],["src/modules/establishments/dto/create",{"_index":694,"title":{},"body":{"classes/CreateEstablishmentDto.html":{},"coverage.html":{}}}],["src/modules/establishments/dto/update",{"_index":1834,"title":{},"body":{"classes/UpdateEstablishmentDto.html":{},"coverage.html":{}}}],["src/modules/establishments/entities/establishment.entity.ts",{"_index":1008,"title":{},"body":{"classes/Establishment.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/modules/establishments/entities/establishment.entity.ts:11",{"_index":1016,"title":{},"body":{"classes/Establishment.html":{}}}],["src/modules/establishments/entities/establishment.entity.ts:14",{"_index":1014,"title":{},"body":{"classes/Establishment.html":{}}}],["src/modules/establishments/entities/establishment.entity.ts:17",{"_index":1021,"title":{},"body":{"classes/Establishment.html":{}}}],["src/modules/establishments/entities/establishment.entity.ts:20",{"_index":1018,"title":{},"body":{"classes/Establishment.html":{}}}],["src/modules/establishments/entities/establishment.entity.ts:23",{"_index":1009,"title":{},"body":{"classes/Establishment.html":{}}}],["src/modules/establishments/entities/establishment.entity.ts:26",{"_index":1010,"title":{},"body":{"classes/Establishment.html":{}}}],["src/modules/establishments/entities/establishment.entity.ts:29",{"_index":1019,"title":{},"body":{"classes/Establishment.html":{}}}],["src/modules/establishments/entities/establishment.entity.ts:32",{"_index":1011,"title":{},"body":{"classes/Establishment.html":{}}}],["src/modules/establishments/entities/establishment.entity.ts:35",{"_index":1012,"title":{},"body":{"classes/Establishment.html":{}}}],["src/modules/establishments/entities/establishment.entity.ts:38",{"_index":1015,"title":{},"body":{"classes/Establishment.html":{}}}],["src/modules/establishments/entities/establishment.entity.ts:41",{"_index":1017,"title":{},"body":{"classes/Establishment.html":{}}}],["src/modules/establishments/entities/establishment.entity.ts:43",{"_index":1013,"title":{},"body":{"classes/Establishment.html":{}}}],["src/modules/establishments/entities/establishment.entity.ts:44",{"_index":1020,"title":{},"body":{"classes/Establishment.html":{}}}],["src/modules/establishments/establishments.controller.ts",{"_index":1026,"title":{},"body":{"controllers/EstablishmentsController.html":{},"coverage.html":{}}}],["src/modules/establishments/establishments.module.ts",{"_index":1041,"title":{},"body":{"modules/EstablishmentsModule.html":{}}}],["src/modules/establishments/establishments.module.ts:13",{"_index":1042,"title":{},"body":{"modules/EstablishmentsModule.html":{}}}],["src/modules/establishments/establishments.service.ts",{"_index":1045,"title":{},"body":{"injectables/EstablishmentsService.html":{},"coverage.html":{}}}],["src/modules/establishments/establishments.service.ts:17",{"_index":1047,"title":{},"body":{"injectables/EstablishmentsService.html":{}}}],["src/modules/logs/dto/create",{"_index":745,"title":{},"body":{"classes/CreateLogDto.html":{},"coverage.html":{}}}],["src/modules/logs/dto/update",{"_index":1836,"title":{},"body":{"classes/UpdateLogDto.html":{},"coverage.html":{}}}],["src/modules/logs/entities/log.entity.ts",{"_index":1119,"title":{},"body":{"classes/Log.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/modules/logs/entities/log.entity.ts:12",{"_index":1123,"title":{},"body":{"classes/Log.html":{}}}],["src/modules/logs/entities/log.entity.ts:15",{"_index":1129,"title":{},"body":{"classes/Log.html":{}}}],["src/modules/logs/entities/log.entity.ts:18",{"_index":1122,"title":{},"body":{"classes/Log.html":{}}}],["src/modules/logs/entities/log.entity.ts:21",{"_index":1124,"title":{},"body":{"classes/Log.html":{}}}],["src/modules/logs/entities/log.entity.ts:24",{"_index":1125,"title":{},"body":{"classes/Log.html":{}}}],["src/modules/logs/entities/log.entity.ts:27",{"_index":1126,"title":{},"body":{"classes/Log.html":{}}}],["src/modules/logs/entities/log.entity.ts:30",{"_index":1120,"title":{},"body":{"classes/Log.html":{}}}],["src/modules/logs/entities/log.entity.ts:33",{"_index":1128,"title":{},"body":{"classes/Log.html":{}}}],["src/modules/logs/entities/log.entity.ts:35",{"_index":1121,"title":{},"body":{"classes/Log.html":{}}}],["src/modules/logs/logs.module.ts",{"_index":1161,"title":{},"body":{"modules/LogsModule.html":{}}}],["src/modules/logs/logs.service.ts",{"_index":1162,"title":{},"body":{"injectables/LogsService.html":{},"coverage.html":{}}}],["src/modules/logs/logs.service.ts:14",{"_index":1167,"title":{},"body":{"injectables/LogsService.html":{}}}],["src/modules/logs/logs.service.ts:9",{"_index":1164,"title":{},"body":{"injectables/LogsService.html":{}}}],["src/modules/organizations/dto/create",{"_index":775,"title":{},"body":{"classes/CreateOrganizationDto.html":{},"coverage.html":{}}}],["src/modules/organizations/dto/update",{"_index":1838,"title":{},"body":{"classes/UpdateOrganizationDto.html":{},"coverage.html":{}}}],["src/modules/organizations/entities/organization.entity.ts",{"_index":1286,"title":{},"body":{"classes/Organization.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/modules/organizations/entities/organization.entity.ts:11",{"_index":1295,"title":{},"body":{"classes/Organization.html":{}}}],["src/modules/organizations/entities/organization.entity.ts:14",{"_index":1292,"title":{},"body":{"classes/Organization.html":{}}}],["src/modules/organizations/entities/organization.entity.ts:17",{"_index":1293,"title":{},"body":{"classes/Organization.html":{}}}],["src/modules/organizations/entities/organization.entity.ts:20",{"_index":1287,"title":{},"body":{"classes/Organization.html":{}}}],["src/modules/organizations/entities/organization.entity.ts:23",{"_index":1288,"title":{},"body":{"classes/Organization.html":{}}}],["src/modules/organizations/entities/organization.entity.ts:26",{"_index":1296,"title":{},"body":{"classes/Organization.html":{}}}],["src/modules/organizations/entities/organization.entity.ts:29",{"_index":1289,"title":{},"body":{"classes/Organization.html":{}}}],["src/modules/organizations/entities/organization.entity.ts:32",{"_index":1290,"title":{},"body":{"classes/Organization.html":{}}}],["src/modules/organizations/entities/organization.entity.ts:35",{"_index":1297,"title":{},"body":{"classes/Organization.html":{}}}],["src/modules/organizations/entities/organization.entity.ts:38",{"_index":1294,"title":{},"body":{"classes/Organization.html":{}}}],["src/modules/organizations/entities/organization.entity.ts:40",{"_index":1291,"title":{},"body":{"classes/Organization.html":{}}}],["src/modules/organizations/entities/organization.entity.ts:41",{"_index":1298,"title":{},"body":{"classes/Organization.html":{}}}],["src/modules/organizations/organizations.controller.ts",{"_index":1303,"title":{},"body":{"controllers/OrganizationsController.html":{},"coverage.html":{}}}],["src/modules/organizations/organizations.module.ts",{"_index":1316,"title":{},"body":{"modules/OrganizationsModule.html":{}}}],["src/modules/organizations/organizations.module.ts:13",{"_index":1317,"title":{},"body":{"modules/OrganizationsModule.html":{}}}],["src/modules/organizations/organizations.service.ts",{"_index":1320,"title":{},"body":{"injectables/OrganizationsService.html":{},"coverage.html":{}}}],["src/modules/organizations/organizations.service.ts:17",{"_index":1322,"title":{},"body":{"injectables/OrganizationsService.html":{}}}],["src/modules/plan",{"_index":857,"title":{},"body":{"classes/CreatePlanPriceDto.html":{},"classes/PlanPrice.html":{},"controllers/PlanPricesController.html":{},"modules/PlanPricesModule.html":{},"injectables/PlanPricesService.html":{},"classes/UpdatePlanPriceDto.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/modules/plans/dto/create",{"_index":812,"title":{},"body":{"classes/CreatePlanDto.html":{},"coverage.html":{}}}],["src/modules/plans/dto/update",{"_index":1840,"title":{},"body":{"classes/UpdatePlanDto.html":{},"coverage.html":{}}}],["src/modules/plans/entities/plan.entity.ts",{"_index":1326,"title":{},"body":{"classes/Plan.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/modules/plans/entities/plan.entity.ts:11",{"_index":1331,"title":{},"body":{"classes/Plan.html":{}}}],["src/modules/plans/entities/plan.entity.ts:14",{"_index":1330,"title":{},"body":{"classes/Plan.html":{}}}],["src/modules/plans/entities/plan.entity.ts:17",{"_index":1328,"title":{},"body":{"classes/Plan.html":{}}}],["src/modules/plans/entities/plan.entity.ts:20",{"_index":1332,"title":{},"body":{"classes/Plan.html":{}}}],["src/modules/plans/entities/plan.entity.ts:22",{"_index":1329,"title":{},"body":{"classes/Plan.html":{}}}],["src/modules/plans/entities/plan.entity.ts:23",{"_index":1333,"title":{},"body":{"classes/Plan.html":{}}}],["src/modules/plans/plans.controller.ts",{"_index":1381,"title":{},"body":{"controllers/PlansController.html":{},"coverage.html":{}}}],["src/modules/plans/plans.module.ts",{"_index":1412,"title":{},"body":{"modules/PlansModule.html":{}}}],["src/modules/plans/plans.module.ts:15",{"_index":1413,"title":{},"body":{"modules/PlansModule.html":{}}}],["src/modules/plans/plans.service.ts",{"_index":1420,"title":{},"body":{"injectables/PlansService.html":{},"coverage.html":{}}}],["src/modules/plans/plans.service.ts:14",{"_index":1422,"title":{},"body":{"injectables/PlansService.html":{}}}],["src/modules/promo",{"_index":907,"title":{},"body":{"classes/CreatePromoCodeDto.html":{},"classes/PromoCode.html":{},"controllers/PromoCodesController.html":{},"modules/PromoCodesModule.html":{},"injectables/PromoCodesService.html":{},"classes/UpdatePromoCodeDto.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/modules/subscriptions/dto/create",{"_index":912,"title":{},"body":{"classes/CreateSubscriptionDto.html":{},"coverage.html":{}}}],["src/modules/subscriptions/dto/update",{"_index":1844,"title":{},"body":{"classes/UpdateSubscriptionDto.html":{},"coverage.html":{}}}],["src/modules/subscriptions/entities/subscription.entity.ts",{"_index":1697,"title":{},"body":{"classes/Subscription.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/modules/subscriptions/entities/subscription.entity.ts:12",{"_index":1698,"title":{},"body":{"classes/Subscription.html":{}}}],["src/modules/subscriptions/entities/subscription.entity.ts:13",{"_index":1699,"title":{},"body":{"classes/Subscription.html":{}}}],["src/modules/subscriptions/subscriptions.controller.ts",{"_index":1703,"title":{},"body":{"controllers/SubscriptionsController.html":{},"coverage.html":{}}}],["src/modules/subscriptions/subscriptions.module.ts",{"_index":1716,"title":{},"body":{"modules/SubscriptionsModule.html":{}}}],["src/modules/subscriptions/subscriptions.module.ts:13",{"_index":1717,"title":{},"body":{"modules/SubscriptionsModule.html":{}}}],["src/modules/subscriptions/subscriptions.service.ts",{"_index":1720,"title":{},"body":{"injectables/SubscriptionsService.html":{},"coverage.html":{}}}],["src/modules/subscriptions/subscriptions.service.ts:17",{"_index":1722,"title":{},"body":{"injectables/SubscriptionsService.html":{}}}],["src/modules/teams/dto/create",{"_index":915,"title":{},"body":{"classes/CreateTeamDto.html":{},"coverage.html":{}}}],["src/modules/teams/dto/update",{"_index":1846,"title":{},"body":{"classes/UpdateTeamDto.html":{},"coverage.html":{}}}],["src/modules/teams/entities/team.entity.ts",{"_index":1727,"title":{},"body":{"classes/Team.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/modules/teams/entities/team.entity.ts:12",{"_index":1728,"title":{},"body":{"classes/Team.html":{}}}],["src/modules/teams/entities/team.entity.ts:13",{"_index":1729,"title":{},"body":{"classes/Team.html":{}}}],["src/modules/teams/teams.controller.ts",{"_index":1734,"title":{},"body":{"controllers/TeamsController.html":{},"coverage.html":{}}}],["src/modules/teams/teams.module.ts",{"_index":1749,"title":{},"body":{"modules/TeamsModule.html":{}}}],["src/modules/teams/teams.module.ts:13",{"_index":1750,"title":{},"body":{"modules/TeamsModule.html":{}}}],["src/modules/teams/teams.service.ts",{"_index":1753,"title":{},"body":{"injectables/TeamsService.html":{},"coverage.html":{}}}],["src/modules/teams/teams.service.ts:14",{"_index":1755,"title":{},"body":{"injectables/TeamsService.html":{}}}],["src/modules/users/dto/create",{"_index":917,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/modules/users/dto/update",{"_index":1849,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/modules/users/entities/user.entity.ts",{"_index":1851,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/modules/users/entities/user.entity.ts:13",{"_index":1853,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/entities/user.entity.ts:16",{"_index":1857,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/entities/user.entity.ts:19",{"_index":1855,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/entities/user.entity.ts:27",{"_index":1859,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/entities/user.entity.ts:30",{"_index":1858,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/entities/user.entity.ts:32",{"_index":1852,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/entities/user.entity.ts:33",{"_index":1860,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/users.controller.ts",{"_index":1872,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/modules/users/users.module.ts",{"_index":1901,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/modules/users/users.service.ts",{"_index":1903,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/modules/users/users.service.ts:16",{"_index":1907,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:23",{"_index":1912,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:28",{"_index":1910,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/providers/mail/helpers/mail.helper",{"_index":384,"title":{},"body":{"modules/AuthModule.html":{},"modules/MailModule.html":{}}}],["src/providers/mail/helpers/mail.helper.ts",{"_index":390,"title":{},"body":{"interfaces/BaseProps.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"interfaces/InitPasswordProps.html":{},"injectables/MailHelper.html":{},"interfaces/ResetPasswordProps.html":{},"coverage.html":{}}}],["src/providers/mail/helpers/mail.helper.ts:17",{"_index":1182,"title":{},"body":{"injectables/MailHelper.html":{}}}],["src/providers/mail/helpers/mail.helper.ts:36",{"_index":1183,"title":{},"body":{"injectables/MailHelper.html":{}}}],["src/providers/mail/helpers/mail.helper.ts:52",{"_index":1185,"title":{},"body":{"injectables/MailHelper.html":{}}}],["src/providers/mail/helpers/mail.helper.ts:66",{"_index":1184,"title":{},"body":{"injectables/MailHelper.html":{}}}],["src/providers/mail/helpers/mail.helper.ts:7",{"_index":1181,"title":{},"body":{"injectables/MailHelper.html":{}}}],["src/providers/mail/mail.module",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["src/providers/mail/mail.module.ts",{"_index":1188,"title":{},"body":{"modules/MailModule.html":{}}}],["src/providers/mail/mail.service",{"_index":385,"title":{},"body":{"modules/AuthModule.html":{},"interfaces/BaseProps.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"interfaces/InitPasswordProps.html":{},"injectables/MailHelper.html":{},"modules/MailModule.html":{},"interfaces/ResetPasswordProps.html":{}}}],["src/providers/mail/mail.service.ts",{"_index":1212,"title":{},"body":{"interfaces/MailProps.html":{},"injectables/MailService.html":{},"coverage.html":{}}}],["src/providers/mail/mail.service.ts:16",{"_index":1231,"title":{},"body":{"injectables/MailService.html":{}}}],["src/providers/mail/mail.service.ts:19",{"_index":1232,"title":{},"body":{"injectables/MailService.html":{}}}],["src/providers/stripe/customer/stripe",{"_index":1618,"title":{},"body":{"classes/StripeCustomerProps.html":{},"injectables/StripeCustomerService.html":{},"coverage.html":{}}}],["src/providers/stripe/price/stripe",{"_index":1396,"title":{},"body":{"controllers/PlansController.html":{},"modules/PlansModule.html":{},"classes/StripePriceProps.html":{},"injectables/StripePriceService.html":{},"coverage.html":{}}}],["src/providers/stripe/product/stripe",{"_index":1393,"title":{},"body":{"controllers/PlansController.html":{},"modules/PlansModule.html":{},"classes/StripeProductProps.html":{},"injectables/StripeProductService.html":{},"coverage.html":{}}}],["src/providers/stripe/services/stripe",{"_index":1654,"title":{},"body":{"injectables/StripePlanService.html":{},"injectables/StripePlanService-1.html":{},"injectables/StripePlanService-2.html":{},"coverage.html":{}}}],["src/providers/stripe/stripe.module",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["src/providers/stripe/stripe.module.ts",{"_index":1645,"title":{},"body":{"modules/StripeModule.html":{}}}],["start",{"_index":1279,"title":{},"body":{"classes/NumberHelper.html":{},"index.html":{}}}],["start:dev",{"_index":2175,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":2177,"title":{},"body":{"index.html":{}}}],["started",{"_index":2153,"title":{"index.html":{}},"body":{}}],["starter",{"_index":2165,"title":{},"body":{"index.html":{}}}],["startnum",{"_index":1273,"title":{},"body":{"classes/NumberHelper.html":{}}}],["starts",{"_index":848,"title":{},"body":{"classes/CreatePlanDto.html":{},"classes/NumberHelper.html":{}}}],["startswith",{"_index":1271,"title":{},"body":{"classes/NumberHelper.html":{}}}],["startswith(num",{"_index":1272,"title":{},"body":{"classes/NumberHelper.html":{}}}],["statements",{"_index":1927,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1086,"title":{},"body":{"classes/Hash.html":{},"classes/NotificationHelper.html":{},"classes/NumberHelper.html":{},"classes/Responses.html":{},"interfaces/ResponsesProps.html":{},"classes/SecurityHelper.html":{},"classes/StringHelper.html":{},"injectables/Token.html":{}}}],["status",{"_index":579,"title":{},"body":{"controllers/ClientsController.html":{},"classes/CreateUserDto.html":{},"classes/GlobalExceptionFilter.html":{},"controllers/PlansController.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["status.enum",{"_index":937,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["status.enum.ts",{"_index":2016,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statuscode",{"_index":1483,"title":{},"body":{"classes/Responses.html":{},"interfaces/ResponsesProps.html":{}}}],["statustext",{"_index":1510,"title":{},"body":{"classes/Responses.html":{},"interfaces/ResponsesProps.html":{}}}],["statustext.replace(\"_",{"_index":1514,"title":{},"body":{"classes/Responses.html":{},"interfaces/ResponsesProps.html":{}}}],["stay",{"_index":2195,"title":{},"body":{"index.html":{}}}],["stoppent",{"_index":2110,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["str",{"_index":1577,"title":{},"body":{"classes/StringHelper.html":{}}}],["str.charat(0).touppercase",{"_index":1595,"title":{},"body":{"classes/StringHelper.html":{}}}],["str.lastindexof(\"s",{"_index":1592,"title":{},"body":{"classes/StringHelper.html":{}}}],["str.slice(0",{"_index":1593,"title":{},"body":{"classes/StringHelper.html":{}}}],["str.slice(1",{"_index":1596,"title":{},"body":{"classes/StringHelper.html":{}}}],["str.slice(lastindex",{"_index":1594,"title":{},"body":{"classes/StringHelper.html":{}}}],["street",{"_index":724,"title":{},"body":{"classes/CreateEstablishmentDto.html":{},"classes/CreateOrganizationDto.html":{}}}],["street'})@isoptional()@isstring",{"_index":704,"title":{},"body":{"classes/CreateEstablishmentDto.html":{},"classes/CreateOrganizationDto.html":{}}}],["strict",{"_index":1210,"title":{},"body":{"modules/MailModule.html":{}}}],["string",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/BaseProps.html":{},"classes/BookerEmployee.html":{},"controllers/BookerEmployeesController.html":{},"injectables/BookerEmployeesService.html":{},"classes/Client.html":{},"controllers/ClientsController.html":{},"injectables/ClientsService.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"classes/CreateBookerEmployeeDto.html":{},"classes/CreateClientDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEstablishmentDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreatePlanPriceDto.html":{},"classes/CreateUserDto.html":{},"classes/CustomFieldDto.html":{},"classes/CustomFieldValueDto.html":{},"classes/Employee.html":{},"controllers/EmployeesController.html":{},"injectables/EmployeesService.html":{},"classes/Establishment.html":{},"controllers/EstablishmentsController.html":{},"injectables/EstablishmentsService.html":{},"classes/FlagDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/Hash.html":{},"interfaces/InitPasswordProps.html":{},"classes/Log.html":{},"classes/LogHelper.html":{},"classes/LoginUserDto.html":{},"injectables/MailHelper.html":{},"interfaces/MailProps.html":{},"injectables/MailService.html":{},"classes/NotificationHelper.html":{},"classes/NumberHelper.html":{},"classes/Organization.html":{},"controllers/OrganizationsController.html":{},"injectables/OrganizationsService.html":{},"classes/Plan.html":{},"classes/PlanPrice.html":{},"controllers/PlanPricesController.html":{},"injectables/PlanPricesService.html":{},"controllers/PlansController.html":{},"injectables/PlansService.html":{},"controllers/PromoCodesController.html":{},"injectables/PromoCodesService.html":{},"classes/RefreshTokenDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/ResetPasswordProps.html":{},"classes/Responses.html":{},"interfaces/ResponsesProps.html":{},"classes/SecurityHelper.html":{},"classes/StringHelper.html":{},"classes/StripeCustomerProps.html":{},"injectables/StripeCustomerService.html":{},"classes/StripePriceProps.html":{},"injectables/StripePriceService.html":{},"classes/StripeProductProps.html":{},"injectables/StripeProductService.html":{},"controllers/SubscriptionsController.html":{},"injectables/SubscriptionsService.html":{},"controllers/TeamsController.html":{},"injectables/TeamsService.html":{},"injectables/Token.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/logProps.html":{},"miscellaneous/variables.html":{}}}],["stringhelper",{"_index":62,"title":{"classes/StringHelper.html":{}},"body":{"controllers/AppController.html":{},"classes/Responses.html":{},"interfaces/ResponsesProps.html":{},"classes/StringHelper.html":{},"coverage.html":{}}}],["stringhelper.capitalizefirstletter",{"_index":1496,"title":{},"body":{"classes/Responses.html":{},"interfaces/ResponsesProps.html":{}}}],["stringhelper.removelasts(params.subject.tolowercase",{"_index":1498,"title":{},"body":{"classes/Responses.html":{},"interfaces/ResponsesProps.html":{}}}],["stringhelper.removelasts(this.schema",{"_index":114,"title":{},"body":{"controllers/AppController.html":{}}}],["stripe",{"_index":800,"title":{},"body":{"classes/CreateOrganizationDto.html":{},"controllers/PlansController.html":{},"injectables/StripeCustomerService.html":{},"modules/StripeModule.html":{},"classes/StripePriceProps.html":{},"injectables/StripePriceService.html":{},"injectables/StripeProductService.html":{},"dependencies.html":{}}}],["stripe.price.recurring.interval",{"_index":1663,"title":{},"body":{"classes/StripePriceProps.html":{},"miscellaneous/typealiases.html":{}}}],["stripe_client",{"_index":1644,"title":{},"body":{"modules/StripeModule.html":{},"overview.html":{}}}],["stripecustomerprops",{"_index":1617,"title":{"classes/StripeCustomerProps.html":{}},"body":{"classes/StripeCustomerProps.html":{},"injectables/StripeCustomerService.html":{},"coverage.html":{}}}],["stripecustomerservice",{"_index":1622,"title":{"injectables/StripeCustomerService.html":{}},"body":{"injectables/StripeCustomerService.html":{},"coverage.html":{}}}],["stripemodule",{"_index":163,"title":{"modules/StripeModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StripeModule.html":{},"modules.html":{},"overview.html":{}}}],["stripeplanid",{"_index":777,"title":{},"body":{"classes/CreateOrganizationDto.html":{},"classes/Organization.html":{}}}],["stripeplanservice",{"_index":1653,"title":{"injectables/StripePlanService.html":{},"injectables/StripePlanService-1.html":{},"injectables/StripePlanService-2.html":{}},"body":{"injectables/StripePlanService.html":{},"injectables/StripePlanService-1.html":{},"injectables/StripePlanService-2.html":{},"coverage.html":{}}}],["stripepriceprops",{"_index":1417,"title":{"classes/StripePriceProps.html":{}},"body":{"modules/PlansModule.html":{},"classes/StripePriceProps.html":{},"injectables/StripePriceService.html":{},"coverage.html":{}}}],["stripepriceservice",{"_index":1395,"title":{"injectables/StripePriceService.html":{}},"body":{"controllers/PlansController.html":{},"modules/StripeModule.html":{},"injectables/StripePriceService.html":{},"coverage.html":{},"overview.html":{}}}],["stripeproduct",{"_index":1403,"title":{},"body":{"controllers/PlansController.html":{}}}],["stripeproductid",{"_index":1327,"title":{},"body":{"classes/Plan.html":{}}}],["stripeproductprops",{"_index":1415,"title":{"classes/StripeProductProps.html":{}},"body":{"modules/PlansModule.html":{},"classes/StripeProductProps.html":{},"injectables/StripeProductService.html":{},"coverage.html":{}}}],["stripeproductservice",{"_index":1392,"title":{"injectables/StripeProductService.html":{}},"body":{"controllers/PlansController.html":{},"injectables/StripeProductService.html":{},"coverage.html":{}}}],["strnum",{"_index":1282,"title":{},"body":{"classes/NumberHelper.html":{}}}],["strnum.startswith(startnum",{"_index":1285,"title":{},"body":{"classes/NumberHelper.html":{}}}],["subject",{"_index":113,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthMiddleware.html":{},"interfaces/BaseProps.html":{},"controllers/ClientsController.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"classes/GlobalExceptionFilter.html":{},"interfaces/InitPasswordProps.html":{},"injectables/MailHelper.html":{},"interfaces/MailProps.html":{},"injectables/MailService.html":{},"controllers/PlansController.html":{},"interfaces/ResetPasswordProps.html":{},"classes/Responses.html":{},"interfaces/ResponsesProps.html":{}}}],["subscription",{"_index":1249,"title":{"classes/Subscription.html":{}},"body":{"modules/MongooseConfig.html":{},"classes/Subscription.html":{},"injectables/SubscriptionsService.html":{},"coverage.html":{}}}],["subscription.dto",{"_index":1708,"title":{},"body":{"controllers/SubscriptionsController.html":{},"injectables/SubscriptionsService.html":{},"classes/UpdateSubscriptionDto.html":{}}}],["subscription.dto.ts",{"_index":913,"title":{},"body":{"classes/CreateSubscriptionDto.html":{},"classes/UpdateSubscriptionDto.html":{},"coverage.html":{}}}],["subscription.name",{"_index":1263,"title":{},"body":{"modules/MongooseConfig.html":{}}}],["subscription.ts",{"_index":1658,"title":{},"body":{"injectables/StripePlanService-2.html":{},"coverage.html":{}}}],["subscriptiondocument",{"_index":1700,"title":{},"body":{"classes/Subscription.html":{},"controllers/SubscriptionsController.html":{},"injectables/SubscriptionsService.html":{},"miscellaneous/typealiases.html":{}}}],["subscriptions",{"_index":1704,"title":{},"body":{"controllers/SubscriptionsController.html":{}}}],["subscriptionschema",{"_index":1250,"title":{},"body":{"modules/MongooseConfig.html":{},"classes/Subscription.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["subscriptionscontroller",{"_index":1702,"title":{"controllers/SubscriptionsController.html":{}},"body":{"controllers/SubscriptionsController.html":{},"modules/SubscriptionsModule.html":{},"coverage.html":{}}}],["subscriptionsmodel",{"_index":1723,"title":{},"body":{"injectables/SubscriptionsService.html":{}}}],["subscriptionsmodule",{"_index":197,"title":{"modules/SubscriptionsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SubscriptionsModule.html":{},"modules.html":{},"overview.html":{}}}],["subscriptionsservice",{"_index":1705,"title":{"injectables/SubscriptionsService.html":{}},"body":{"controllers/SubscriptionsController.html":{},"modules/SubscriptionsModule.html":{},"injectables/SubscriptionsService.html":{},"coverage.html":{},"overview.html":{}}}],["success",{"_index":1485,"title":{},"body":{"classes/Responses.html":{},"interfaces/ResponsesProps.html":{}}}],["successfully",{"_index":551,"title":{},"body":{"controllers/ClientsController.html":{},"classes/CreateLogDto.html":{},"controllers/PlansController.html":{},"classes/Responses.html":{},"interfaces/ResponsesProps.html":{},"controllers/UsersController.html":{}}}],["successfully'})@isnotempty({message",{"_index":763,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["suite",{"_index":781,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["suivi",{"_index":2084,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["summary",{"_index":578,"title":{},"body":{"controllers/ClientsController.html":{},"controllers/PlansController.html":{},"controllers/UsersController.html":{}}}],["super(bookeremployeesmodel",{"_index":515,"title":{},"body":{"injectables/BookerEmployeesService.html":{}}}],["super(bookeremployeesservice",{"_index":486,"title":{},"body":{"controllers/BookerEmployeesController.html":{}}}],["super(clientmodel",{"_index":615,"title":{},"body":{"injectables/ClientsService.html":{}}}],["super(clientsservice",{"_index":577,"title":{},"body":{"controllers/ClientsController.html":{}}}],["super(employeesmodel",{"_index":1007,"title":{},"body":{"injectables/EmployeesService.html":{}}}],["super(employeesservice",{"_index":994,"title":{},"body":{"controllers/EmployeesController.html":{}}}],["super(establishmentsmodel",{"_index":1050,"title":{},"body":{"injectables/EstablishmentsService.html":{}}}],["super(establishmentsservice",{"_index":1037,"title":{},"body":{"controllers/EstablishmentsController.html":{}}}],["super(organizationsmodel",{"_index":1325,"title":{},"body":{"injectables/OrganizationsService.html":{}}}],["super(organizationsservice",{"_index":1312,"title":{},"body":{"controllers/OrganizationsController.html":{}}}],["super(planpricesmodel",{"_index":1379,"title":{},"body":{"injectables/PlanPricesService.html":{}}}],["super(planpricesservice",{"_index":1364,"title":{},"body":{"controllers/PlanPricesController.html":{}}}],["super(plansmodel",{"_index":1425,"title":{},"body":{"injectables/PlansService.html":{}}}],["super(plansservice",{"_index":1400,"title":{},"body":{"controllers/PlansController.html":{}}}],["super(promocodesmodel",{"_index":1462,"title":{},"body":{"injectables/PromoCodesService.html":{}}}],["super(promocodesservice",{"_index":1448,"title":{},"body":{"controllers/PromoCodesController.html":{}}}],["super(subscriptionsmodel",{"_index":1725,"title":{},"body":{"injectables/SubscriptionsService.html":{}}}],["super(subscriptionsservice",{"_index":1713,"title":{},"body":{"controllers/SubscriptionsController.html":{}}}],["super(teamsmodel",{"_index":1758,"title":{},"body":{"injectables/TeamsService.html":{}}}],["super(teamsservice",{"_index":1745,"title":{},"body":{"controllers/TeamsController.html":{}}}],["super(usersmodel",{"_index":1918,"title":{},"body":{"injectables/UsersService.html":{}}}],["super(usersservice",{"_index":1894,"title":{},"body":{"controllers/UsersController.html":{}}}],["super.create(createclientdto",{"_index":581,"title":{},"body":{"controllers/ClientsController.html":{}}}],["super.create(createplandto",{"_index":1407,"title":{},"body":{"controllers/PlansController.html":{}}}],["super.create(createuserdto",{"_index":1896,"title":{},"body":{"controllers/UsersController.html":{}}}],["super.findall(res",{"_index":582,"title":{},"body":{"controllers/ClientsController.html":{},"controllers/UsersController.html":{}}}],["super.findone(id",{"_index":583,"title":{},"body":{"controllers/ClientsController.html":{},"controllers/UsersController.html":{}}}],["super.remove(id",{"_index":588,"title":{},"body":{"controllers/ClientsController.html":{},"controllers/UsersController.html":{}}}],["super.transform(value",{"_index":969,"title":{},"body":{"injectables/CustomValidationPipe.html":{}}}],["super.update(id",{"_index":586,"title":{},"body":{"controllers/ClientsController.html":{},"controllers/UsersController.html":{}}}],["super_admin",{"_index":2138,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["support",{"_index":852,"title":{},"body":{"classes/CreatePlanDto.html":{},"index.html":{},"modules.html":{}}}],["support.'})@isnotempty()@isstring",{"_index":831,"title":{},"body":{"classes/CreatePlanDto.html":{}}}],["sur",{"_index":2093,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["suspended",{"_index":2145,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["svg",{"_index":2205,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1490,"title":{},"body":{"classes/Responses.html":{},"interfaces/ResponsesProps.html":{}}}],["sécurit",{"_index":2129,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["table",{"_index":1958,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1957,"title":{},"body":{"coverage.html":{}}}],["team",{"_index":1726,"title":{"classes/Team.html":{}},"body":{"classes/Team.html":{},"injectables/TeamsService.html":{},"coverage.html":{}}}],["team.dto",{"_index":1739,"title":{},"body":{"controllers/TeamsController.html":{},"injectables/TeamsService.html":{},"classes/UpdateTeamDto.html":{}}}],["team.dto.ts",{"_index":916,"title":{},"body":{"classes/CreateTeamDto.html":{},"classes/UpdateTeamDto.html":{},"coverage.html":{}}}],["teamdocument",{"_index":1730,"title":{},"body":{"classes/Team.html":{},"controllers/TeamsController.html":{},"injectables/TeamsService.html":{},"miscellaneous/typealiases.html":{}}}],["teams",{"_index":1735,"title":{},"body":{"controllers/TeamsController.html":{}}}],["teamschema",{"_index":1731,"title":{},"body":{"classes/Team.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["teamscontroller",{"_index":1733,"title":{"controllers/TeamsController.html":{}},"body":{"controllers/TeamsController.html":{},"modules/TeamsModule.html":{},"coverage.html":{}}}],["teamsmodel",{"_index":1756,"title":{},"body":{"injectables/TeamsService.html":{}}}],["teamsmodule",{"_index":1746,"title":{"modules/TeamsModule.html":{}},"body":{"modules/TeamsModule.html":{},"modules.html":{},"overview.html":{}}}],["teamsservice",{"_index":1736,"title":{"injectables/TeamsService.html":{}},"body":{"controllers/TeamsController.html":{},"modules/TeamsModule.html":{},"injectables/TeamsService.html":{},"coverage.html":{},"overview.html":{}}}],["tech",{"_index":796,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["technology",{"_index":788,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["techville",{"_index":808,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["techville'})@isoptional()@isstring",{"_index":784,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["template",{"_index":414,"title":{},"body":{"interfaces/BaseProps.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"interfaces/InitPasswordProps.html":{},"injectables/MailHelper.html":{},"modules/MailModule.html":{},"interfaces/MailProps.html":{},"injectables/MailService.html":{},"interfaces/ResetPasswordProps.html":{}}}],["templatedatas",{"_index":393,"title":{},"body":{"interfaces/BaseProps.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"interfaces/InitPasswordProps.html":{},"injectables/MailHelper.html":{},"interfaces/MailProps.html":{},"injectables/MailService.html":{},"interfaces/ResetPasswordProps.html":{}}}],["temporaire/notifications/notifications.module",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["test",{"_index":2178,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":2181,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":2180,"title":{},"body":{"index.html":{}}}],["tests",{"_index":613,"title":{},"body":{"injectables/ClientsService.html":{},"index.html":{}}}],["text",{"_index":1538,"title":{},"body":{"classes/SecurityHelper.html":{}}}],["thanks",{"_index":2187,"title":{},"body":{"index.html":{}}}],["thb",{"_index":2037,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["this.algorithm",{"_index":1550,"title":{},"body":{"classes/SecurityHelper.html":{}}}],["this.anonymizeip(ip",{"_index":1567,"title":{},"body":{"classes/SecurityHelper.html":{}}}],["this.appmodel",{"_index":248,"title":{},"body":{"injectables/AppService.html":{}}}],["this.appmodel(createdto",{"_index":243,"title":{},"body":{"injectables/AppService.html":{}}}],["this.appmodel.find().populate(this.populate).exec",{"_index":247,"title":{},"body":{"injectables/AppService.html":{}}}],["this.appmodel.findbyidanddelete(id).exec",{"_index":256,"title":{},"body":{"injectables/AppService.html":{}}}],["this.appmodel.updatemany(where",{"_index":265,"title":{},"body":{"injectables/AppService.html":{}}}],["this.bookeremployeesservice.findwhere",{"_index":372,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["this.clientsservice.findwhere",{"_index":373,"title":{},"body":{"injectables/AuthMiddleware.html":{},"controllers/ClientsController.html":{}}}],["this.connection.startsession",{"_index":86,"title":{},"body":{"controllers/AppController.html":{}}}],["this.crypto.hmacsha256(data",{"_index":1106,"title":{},"body":{"classes/Hash.html":{}}}],["this.customersservice.findonebyuser(user._id",{"_index":297,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.employeesservice.findwhere",{"_index":368,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["this.encrypt(anonymizedip",{"_index":1568,"title":{},"body":{"classes/SecurityHelper.html":{}}}],["this.generatepassword",{"_index":1616,"title":{},"body":{"classes/StringHelper.html":{}}}],["this.getpayload(token",{"_index":1817,"title":{},"body":{"injectables/Token.html":{}}}],["this.getstatustext(params.code).tolowercase",{"_index":1489,"title":{},"body":{"classes/Responses.html":{},"interfaces/ResponsesProps.html":{}}}],["this.hasrole(userrole",{"_index":306,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.loghelper",{"_index":80,"title":{},"body":{"controllers/AppController.html":{}}}],["this.loghelper.log",{"_index":91,"title":{},"body":{"controllers/AppController.html":{},"controllers/PlansController.html":{}}}],["this.logsmodel(createlogdto",{"_index":1176,"title":{},"body":{"injectables/LogsService.html":{}}}],["this.logsservice.create",{"_index":1141,"title":{},"body":{"classes/LogHelper.html":{},"interfaces/logProps.html":{}}}],["this.mailerservice.sendmail(mailoptions",{"_index":1228,"title":{},"body":{"interfaces/MailProps.html":{},"injectables/MailService.html":{}}}],["this.mailservice.sendmail",{"_index":408,"title":{},"body":{"interfaces/BaseProps.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"interfaces/InitPasswordProps.html":{},"injectables/MailHelper.html":{},"interfaces/ResetPasswordProps.html":{}}}],["this.populatemodel(createdmodel",{"_index":245,"title":{},"body":{"injectables/AppService.html":{}}}],["this.populatemodel(model",{"_index":252,"title":{},"body":{"injectables/AppService.html":{}}}],["this.populatemodel(updatedmodel",{"_index":255,"title":{},"body":{"injectables/AppService.html":{}}}],["this.reflector.get(ownership_key",{"_index":300,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.reflector.get(roles_key",{"_index":303,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.schema",{"_index":100,"title":{},"body":{"controllers/AppController.html":{}}}],["this.schema.touppercase()}controller",{"_index":119,"title":{},"body":{"controllers/AppController.html":{}}}],["this.select",{"_index":1867,"title":{},"body":{"classes/User.html":{}}}],["this.sender",{"_index":411,"title":{},"body":{"interfaces/BaseProps.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"interfaces/InitPasswordProps.html":{},"injectables/MailHelper.html":{},"interfaces/ResetPasswordProps.html":{}}}],["this.service.create(createdto",{"_index":90,"title":{},"body":{"controllers/AppController.html":{}}}],["this.service.findall",{"_index":128,"title":{},"body":{"controllers/AppController.html":{}}}],["this.service.findone(id",{"_index":138,"title":{},"body":{"controllers/AppController.html":{}}}],["this.service.remove(id",{"_index":142,"title":{},"body":{"controllers/AppController.html":{}}}],["this.service.update(id",{"_index":140,"title":{},"body":{"controllers/AppController.html":{}}}],["this.stripe.customers.create",{"_index":1637,"title":{},"body":{"injectables/StripeCustomerService.html":{}}}],["this.stripe.customers.del(id",{"_index":1640,"title":{},"body":{"injectables/StripeCustomerService.html":{}}}],["this.stripe.customers.retrieve(id",{"_index":1638,"title":{},"body":{"injectables/StripeCustomerService.html":{}}}],["this.stripe.customers.update(id",{"_index":1639,"title":{},"body":{"injectables/StripeCustomerService.html":{}}}],["this.stripe.prices.create",{"_index":1677,"title":{},"body":{"injectables/StripePriceService.html":{}}}],["this.stripe.prices.update(id",{"_index":1684,"title":{},"body":{"injectables/StripePriceService.html":{}}}],["this.stripe.products.create",{"_index":1695,"title":{},"body":{"injectables/StripeProductService.html":{}}}],["this.stripe.products.del(id",{"_index":1685,"title":{},"body":{"injectables/StripePriceService.html":{},"injectables/StripeProductService.html":{}}}],["this.stripe.products.retrieve(id",{"_index":1683,"title":{},"body":{"injectables/StripePriceService.html":{},"injectables/StripeProductService.html":{}}}],["this.stripe.products.update(id",{"_index":1696,"title":{},"body":{"injectables/StripeProductService.html":{}}}],["this.stripeproductservice.create(createplandto",{"_index":1404,"title":{},"body":{"controllers/PlansController.html":{}}}],["this.usersmodel",{"_index":1922,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersmodel.findone",{"_index":1919,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.findone(payload.sub",{"_index":365,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["this.usersservice.findone(request[\"request\"].uid",{"_index":294,"title":{},"body":{"guards/AuthGuard.html":{}}}],["throttlerbehindproxyguard",{"_index":206,"title":{"injectables/ThrottlerBehindProxyGuard.html":{}},"body":{"modules/AppModule.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"coverage.html":{}}}],["throttlerconfig",{"_index":164,"title":{"modules/ThrottlerConfig.html":{}},"body":{"modules/AppModule.html":{},"modules/ThrottlerConfig.html":{},"modules.html":{},"overview.html":{}}}],["throttlerguard",{"_index":1761,"title":{},"body":{"injectables/ThrottlerBehindProxyGuard.html":{}}}],["throttlermodule",{"_index":1773,"title":{},"body":{"modules/ThrottlerConfig.html":{}}}],["throttlermodule.forroot",{"_index":1774,"title":{},"body":{"modules/ThrottlerConfig.html":{}}}],["throw",{"_index":103,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"controllers/ClientsController.html":{},"injectables/CustomValidationPipe.html":{},"injectables/LogsService.html":{},"classes/NotificationHelper.html":{},"controllers/PlansController.html":{},"injectables/Token.html":{}}}],["time",{"_index":905,"title":{},"body":{"classes/CreatePlanPriceDto.html":{}}}],["time'})@isoptional",{"_index":875,"title":{},"body":{"classes/CreatePlanPriceDto.html":{}}}],["timestamps",{"_index":457,"title":{},"body":{"classes/BookerEmployee.html":{},"classes/Client.html":{},"classes/Employee.html":{},"classes/Establishment.html":{},"classes/Log.html":{},"classes/Organization.html":{},"classes/Plan.html":{},"classes/PlanPrice.html":{},"classes/PromoCode.html":{},"classes/Subscription.html":{},"classes/Team.html":{},"classes/User.html":{}}}],["title",{"_index":1054,"title":{},"body":{"classes/FlagDto.html":{}}}],["tnd",{"_index":2064,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["todo",{"_index":610,"title":{},"body":{"injectables/ClientsService.html":{}}}],["token",{"_index":312,"title":{"injectables/Token.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"interfaces/BaseProps.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"classes/Hash.html":{},"interfaces/InitPasswordProps.html":{},"injectables/MailHelper.html":{},"classes/ResetPasswordDto.html":{},"interfaces/ResetPasswordProps.html":{},"injectables/Token.html":{},"coverage.html":{}}}],["token.dto.ts",{"_index":1465,"title":{},"body":{"classes/RefreshTokenDto.html":{},"coverage.html":{}}}],["token.dto.ts:6",{"_index":1468,"title":{},"body":{"classes/RefreshTokenDto.html":{}}}],["token.getpayload(token",{"_index":364,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["token.istokenexpired(token",{"_index":361,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["token.verifytoken(token",{"_index":359,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["tokentypeenum",{"_index":1798,"title":{},"body":{"injectables/Token.html":{},"miscellaneous/enumerations.html":{}}}],["touch",{"_index":2196,"title":{},"body":{"index.html":{}}}],["trace",{"_index":2083,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["transform",{"_index":963,"title":{},"body":{"injectables/CustomValidationPipe.html":{}}}],["transform(value",{"_index":964,"title":{},"body":{"injectables/CustomValidationPipe.html":{}}}],["transformer",{"_index":633,"title":{},"body":{"classes/CreateAuthOrganizationDto.html":{},"classes/CreateClientDto.html":{},"classes/CustomFieldDto.html":{},"classes/CustomFieldValueDto.html":{},"classes/FlagDto.html":{},"dependencies.html":{}}}],["transport",{"_index":1196,"title":{},"body":{"modules/MailModule.html":{}}}],["trial",{"_index":844,"title":{},"body":{"classes/CreatePlanDto.html":{},"classes/CreatePlanPriceDto.html":{}}}],["trial_period_days",{"_index":1682,"title":{},"body":{"injectables/StripePriceService.html":{}}}],["trialperioddays",{"_index":819,"title":{},"body":{"classes/CreatePlanDto.html":{},"classes/CreatePlanPriceDto.html":{},"classes/PlanPrice.html":{},"classes/StripePriceProps.html":{},"injectables/StripePriceService.html":{}}}],["true",{"_index":134,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/BookerEmployee.html":{},"classes/Client.html":{},"classes/CreateClientDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreatePlanPriceDto.html":{},"classes/Employee.html":{},"classes/Establishment.html":{},"modules/JwtModule.html":{},"classes/Log.html":{},"modules/MailModule.html":{},"interfaces/MailProps.html":{},"injectables/MailService.html":{},"classes/NumberHelper.html":{},"classes/Organization.html":{},"classes/Plan.html":{},"classes/PlanPrice.html":{},"classes/PromoCode.html":{},"classes/Responses.html":{},"interfaces/ResponsesProps.html":{},"classes/Subscription.html":{},"classes/Team.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["true})@isboolean",{"_index":862,"title":{},"body":{"classes/CreatePlanPriceDto.html":{}}}],["true})@isenum(currencyenum",{"_index":879,"title":{},"body":{"classes/CreatePlanPriceDto.html":{}}}],["true})@isenum(intervalenum",{"_index":882,"title":{},"body":{"classes/CreatePlanPriceDto.html":{}}}],["true})@isnotempty()@isboolean",{"_index":821,"title":{},"body":{"classes/CreatePlanDto.html":{}}}],["true})@isnumber",{"_index":885,"title":{},"body":{"classes/CreatePlanPriceDto.html":{}}}],["true})@isnumber()@min(0",{"_index":868,"title":{},"body":{"classes/CreatePlanPriceDto.html":{}}}],["true})@isoptional()@isboolean",{"_index":688,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["true})@isstring()@minlength(3)@maxlength(50",{"_index":892,"title":{},"body":{"classes/CreatePlanPriceDto.html":{}}}],["try",{"_index":88,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"controllers/ClientsController.html":{},"injectables/CustomValidationPipe.html":{},"classes/Hash.html":{},"classes/LogHelper.html":{},"injectables/LogsService.html":{},"controllers/PlansController.html":{},"injectables/Token.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"interfaces/logProps.html":{}}}],["très",{"_index":2113,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ttl",{"_index":1775,"title":{},"body":{"modules/ThrottlerConfig.html":{}}}],["twd",{"_index":2063,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["twitter",{"_index":2201,"title":{},"body":{"index.html":{}}}],["type",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"interfaces/BaseProps.html":{},"classes/BookerEmployee.html":{},"controllers/BookerEmployeesController.html":{},"modules/BookerEmployeesModule.html":{},"injectables/BookerEmployeesService.html":{},"classes/Client.html":{},"controllers/ClientsController.html":{},"injectables/ClientsService.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"classes/CreateAuthOrganizationDto.html":{},"classes/CreateBookerEmployeeDto.html":{},"classes/CreateClientDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEstablishmentDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreatePlanPriceDto.html":{},"classes/CreateUserDto.html":{},"classes/CustomFieldDto.html":{},"classes/CustomFieldValueDto.html":{},"injectables/CustomValidationPipe.html":{},"classes/Employee.html":{},"controllers/EmployeesController.html":{},"modules/EmployeesModule.html":{},"injectables/EmployeesService.html":{},"classes/Establishment.html":{},"controllers/EstablishmentsController.html":{},"modules/EstablishmentsModule.html":{},"injectables/EstablishmentsService.html":{},"classes/FlagDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/GlobalExceptionFilter.html":{},"classes/Hash.html":{},"interfaces/InitPasswordProps.html":{},"classes/Log.html":{},"classes/LogHelper.html":{},"classes/LoginUserDto.html":{},"injectables/LogsService.html":{},"injectables/MailHelper.html":{},"interfaces/MailProps.html":{},"injectables/MailService.html":{},"classes/NotificationHelper.html":{},"classes/Organization.html":{},"controllers/OrganizationsController.html":{},"modules/OrganizationsModule.html":{},"injectables/OrganizationsService.html":{},"classes/Plan.html":{},"classes/PlanPrice.html":{},"controllers/PlanPricesController.html":{},"modules/PlanPricesModule.html":{},"injectables/PlanPricesService.html":{},"controllers/PlansController.html":{},"modules/PlansModule.html":{},"injectables/PlansService.html":{},"classes/PromoCode.html":{},"controllers/PromoCodesController.html":{},"modules/PromoCodesModule.html":{},"injectables/PromoCodesService.html":{},"classes/RefreshTokenDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/ResetPasswordProps.html":{},"classes/Responses.html":{},"interfaces/ResponsesProps.html":{},"classes/SecurityHelper.html":{},"classes/StripeCustomerProps.html":{},"injectables/StripeCustomerService.html":{},"classes/StripePriceProps.html":{},"injectables/StripePriceService.html":{},"classes/StripeProductProps.html":{},"injectables/StripeProductService.html":{},"classes/Subscription.html":{},"controllers/SubscriptionsController.html":{},"modules/SubscriptionsModule.html":{},"injectables/SubscriptionsService.html":{},"classes/Team.html":{},"controllers/TeamsController.html":{},"modules/TeamsModule.html":{},"injectables/TeamsService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"injectables/Token.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"interfaces/logProps.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type(undefined",{"_index":626,"title":{},"body":{"classes/CreateAuthOrganizationDto.html":{}}}],["type.enum",{"_index":1802,"title":{},"body":{"injectables/Token.html":{}}}],["type.enum.ts",{"_index":2013,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typealiases",{"_index":2217,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":1967,"title":{},"body":{"dependencies.html":{}}}],["types/crypto",{"_index":1976,"title":{},"body":{"dependencies.html":{}}}],["types/interval.type",{"_index":1669,"title":{},"body":{"classes/StripePriceProps.html":{}}}],["typescript",{"_index":2164,"title":{},"body":{"index.html":{}}}],["uah",{"_index":2055,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["uid",{"_index":1913,"title":{},"body":{"injectables/UsersService.html":{}}}],["ultra",{"_index":2085,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["unauthorizedexception",{"_index":276,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{}}}],["unauthorizedexception(\"invalid",{"_index":311,"title":{},"body":{"guards/AuthGuard.html":{}}}],["undefined",{"_index":525,"title":{},"body":{"classes/Client.html":{},"controllers/ClientsController.html":{},"classes/Establishment.html":{},"classes/Organization.html":{},"controllers/PlansController.html":{},"classes/Responses.html":{},"interfaces/ResponsesProps.html":{},"classes/User.html":{}}}],["une",{"_index":2106,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["unexpected",{"_index":1081,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["unique",{"_index":452,"title":{},"body":{"classes/BookerEmployee.html":{},"classes/Client.html":{},"classes/CreateBookerEmployeeDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/Employee.html":{},"classes/User.html":{}}}],["unit",{"_index":865,"title":{},"body":{"classes/CreatePlanPriceDto.html":{},"index.html":{}}}],["unit_amount",{"_index":1678,"title":{},"body":{"injectables/StripePriceService.html":{}}}],["unknown",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthMiddleware.html":{},"controllers/BookerEmployeesController.html":{},"controllers/ClientsController.html":{},"injectables/CustomValidationPipe.html":{},"controllers/EmployeesController.html":{},"controllers/EstablishmentsController.html":{},"classes/Hash.html":{},"injectables/MailHelper.html":{},"injectables/MailService.html":{},"controllers/OrganizationsController.html":{},"controllers/PlanPricesController.html":{},"controllers/PlansController.html":{},"controllers/PromoCodesController.html":{},"injectables/StripeCustomerService.html":{},"injectables/StripePriceService.html":{},"injectables/StripeProductService.html":{},"controllers/SubscriptionsController.html":{},"controllers/TeamsController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["unlicensed",{"_index":2216,"title":{},"body":{"properties.html":{}}}],["unprocessableentityexception",{"_index":968,"title":{},"body":{"injectables/CustomValidationPipe.html":{}}}],["unprocessableentityexception(errors",{"_index":974,"title":{},"body":{"injectables/CustomValidationPipe.html":{}}}],["update",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BookerEmployeesController.html":{},"injectables/BookerEmployeesService.html":{},"controllers/ClientsController.html":{},"injectables/ClientsService.html":{},"controllers/EmployeesController.html":{},"injectables/EmployeesService.html":{},"controllers/EstablishmentsController.html":{},"injectables/EstablishmentsService.html":{},"controllers/OrganizationsController.html":{},"injectables/OrganizationsService.html":{},"controllers/PlanPricesController.html":{},"injectables/PlanPricesService.html":{},"controllers/PlansController.html":{},"injectables/PlansService.html":{},"controllers/PromoCodesController.html":{},"injectables/PromoCodesService.html":{},"injectables/StripeCustomerService.html":{},"injectables/StripePriceService.html":{},"injectables/StripeProductService.html":{},"controllers/SubscriptionsController.html":{},"injectables/SubscriptionsService.html":{},"controllers/TeamsController.html":{},"injectables/TeamsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["update(id",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BookerEmployeesController.html":{},"injectables/BookerEmployeesService.html":{},"controllers/ClientsController.html":{},"injectables/ClientsService.html":{},"controllers/EmployeesController.html":{},"injectables/EmployeesService.html":{},"controllers/EstablishmentsController.html":{},"injectables/EstablishmentsService.html":{},"controllers/OrganizationsController.html":{},"injectables/OrganizationsService.html":{},"controllers/PlanPricesController.html":{},"injectables/PlanPricesService.html":{},"controllers/PlansController.html":{},"injectables/PlansService.html":{},"controllers/PromoCodesController.html":{},"injectables/PromoCodesService.html":{},"injectables/StripeCustomerService.html":{},"injectables/StripePriceService.html":{},"injectables/StripeProductService.html":{},"controllers/SubscriptionsController.html":{},"injectables/SubscriptionsService.html":{},"controllers/TeamsController.html":{},"injectables/TeamsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updateauthclientdto",{"_index":1825,"title":{"classes/UpdateAuthClientDto.html":{}},"body":{"classes/UpdateAuthClientDto.html":{},"coverage.html":{}}}],["updatebookeremployeedto",{"_index":475,"title":{"classes/UpdateBookerEmployeeDto.html":{}},"body":{"controllers/BookerEmployeesController.html":{},"injectables/BookerEmployeesService.html":{},"classes/UpdateBookerEmployeeDto.html":{},"coverage.html":{}}}],["updateclientdto",{"_index":567,"title":{"classes/UpdateClientDto.html":{}},"body":{"controllers/ClientsController.html":{},"injectables/ClientsService.html":{},"classes/UpdateClientDto.html":{},"coverage.html":{}}}],["updated",{"_index":584,"title":{},"body":{"controllers/ClientsController.html":{},"classes/CreatePlanPriceDto.html":{},"classes/Responses.html":{},"interfaces/ResponsesProps.html":{},"controllers/UsersController.html":{}}}],["updated.'})@apiresponse({status",{"_index":568,"title":{},"body":{"controllers/ClientsController.html":{},"controllers/UsersController.html":{}}}],["updatedat",{"_index":445,"title":{},"body":{"classes/BookerEmployee.html":{},"classes/Client.html":{},"classes/CreatePlanPriceDto.html":{},"classes/Employee.html":{},"classes/Establishment.html":{},"classes/Organization.html":{},"classes/Plan.html":{},"classes/PlanPrice.html":{},"classes/PromoCode.html":{},"classes/Subscription.html":{},"classes/Team.html":{},"classes/User.html":{}}}],["updatedmodel",{"_index":253,"title":{},"body":{"injectables/AppService.html":{}}}],["updatedto",{"_index":44,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BookerEmployeesController.html":{},"injectables/BookerEmployeesService.html":{},"injectables/ClientsService.html":{},"controllers/EmployeesController.html":{},"injectables/EmployeesService.html":{},"controllers/EstablishmentsController.html":{},"injectables/EstablishmentsService.html":{},"controllers/OrganizationsController.html":{},"injectables/OrganizationsService.html":{},"controllers/PlanPricesController.html":{},"injectables/PlanPricesService.html":{},"controllers/PlansController.html":{},"injectables/PlansService.html":{},"controllers/PromoCodesController.html":{},"injectables/PromoCodesService.html":{},"controllers/SubscriptionsController.html":{},"injectables/SubscriptionsService.html":{},"controllers/TeamsController.html":{},"injectables/TeamsService.html":{},"injectables/UsersService.html":{}}}],["updatedto).exec",{"_index":266,"title":{},"body":{"injectables/AppService.html":{}}}],["updateemail",{"_index":1920,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateemployeedto",{"_index":989,"title":{"classes/UpdateEmployeeDto.html":{}},"body":{"controllers/EmployeesController.html":{},"injectables/EmployeesService.html":{},"classes/UpdateEmployeeDto.html":{},"coverage.html":{}}}],["updateestablishmentdto",{"_index":1032,"title":{"classes/UpdateEstablishmentDto.html":{}},"body":{"controllers/EstablishmentsController.html":{},"injectables/EstablishmentsService.html":{},"classes/UpdateEstablishmentDto.html":{},"coverage.html":{}}}],["updatelogdto",{"_index":1835,"title":{"classes/UpdateLogDto.html":{}},"body":{"classes/UpdateLogDto.html":{},"coverage.html":{}}}],["updatemany",{"_index":221,"title":{},"body":{"injectables/AppService.html":{},"injectables/BookerEmployeesService.html":{},"injectables/ClientsService.html":{},"injectables/EmployeesService.html":{},"injectables/EstablishmentsService.html":{},"injectables/OrganizationsService.html":{},"injectables/PlanPricesService.html":{},"injectables/PlansService.html":{},"injectables/PromoCodesService.html":{},"injectables/SubscriptionsService.html":{},"injectables/TeamsService.html":{},"injectables/UsersService.html":{}}}],["updatemany(where",{"_index":239,"title":{},"body":{"injectables/AppService.html":{},"injectables/BookerEmployeesService.html":{},"injectables/ClientsService.html":{},"injectables/EmployeesService.html":{},"injectables/EstablishmentsService.html":{},"injectables/OrganizationsService.html":{},"injectables/PlanPricesService.html":{},"injectables/PlansService.html":{},"injectables/PromoCodesService.html":{},"injectables/SubscriptionsService.html":{},"injectables/TeamsService.html":{},"injectables/UsersService.html":{}}}],["updateorganizationdto",{"_index":1307,"title":{"classes/UpdateOrganizationDto.html":{}},"body":{"controllers/OrganizationsController.html":{},"injectables/OrganizationsService.html":{},"classes/UpdateOrganizationDto.html":{},"coverage.html":{}}}],["updateplandto",{"_index":1390,"title":{"classes/UpdatePlanDto.html":{}},"body":{"controllers/PlansController.html":{},"injectables/PlansService.html":{},"classes/UpdatePlanDto.html":{},"coverage.html":{}}}],["updateplanpricedto",{"_index":1359,"title":{"classes/UpdatePlanPriceDto.html":{}},"body":{"controllers/PlanPricesController.html":{},"injectables/PlanPricesService.html":{},"classes/UpdatePlanPriceDto.html":{},"coverage.html":{}}}],["updatepromocodedto",{"_index":1442,"title":{"classes/UpdatePromoCodeDto.html":{}},"body":{"controllers/PromoCodesController.html":{},"injectables/PromoCodesService.html":{},"classes/UpdatePromoCodeDto.html":{},"coverage.html":{}}}],["updatesubscriptiondto",{"_index":1709,"title":{"classes/UpdateSubscriptionDto.html":{}},"body":{"controllers/SubscriptionsController.html":{},"injectables/SubscriptionsService.html":{},"classes/UpdateSubscriptionDto.html":{},"coverage.html":{}}}],["updateteamdto",{"_index":1740,"title":{"classes/UpdateTeamDto.html":{}},"body":{"controllers/TeamsController.html":{},"injectables/TeamsService.html":{},"classes/UpdateTeamDto.html":{},"coverage.html":{}}}],["updateuserdto",{"_index":1848,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["updateuseremaildto",{"_index":1921,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserpassworddto",{"_index":1914,"title":{},"body":{"injectables/UsersService.html":{}}}],["uppercaseletters",{"_index":1599,"title":{},"body":{"classes/StringHelper.html":{}}}],["uppercaseletters.length",{"_index":1607,"title":{},"body":{"classes/StringHelper.html":{}}}],["url",{"_index":417,"title":{},"body":{"interfaces/BaseProps.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"interfaces/InitPasswordProps.html":{},"injectables/MailHelper.html":{},"interfaces/ResetPasswordProps.html":{}}}],["usa",{"_index":741,"title":{},"body":{"classes/CreateEstablishmentDto.html":{},"classes/CreateOrganizationDto.html":{}}}],["usa'})@isoptional()@isstring",{"_index":712,"title":{},"body":{"classes/CreateEstablishmentDto.html":{},"classes/CreateOrganizationDto.html":{}}}],["usd",{"_index":854,"title":{},"body":{"classes/CreatePlanDto.html":{},"classes/CreatePlanPriceDto.html":{},"miscellaneous/enumerations.html":{}}}],["usd'})@isnotempty()@isstring",{"_index":826,"title":{},"body":{"classes/CreatePlanDto.html":{}}}],["use",{"_index":330,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["use(req",{"_index":336,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["useclass",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["usefactory",{"_index":1647,"title":{},"body":{"modules/StripeModule.html":{}}}],["user",{"_index":92,"title":{"classes/User.html":{}},"body":{"controllers/AppController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"controllers/ClientsController.html":{},"classes/CreateAuthOrganizationDto.html":{},"classes/CreateBookerEmployeeDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserDto.html":{},"classes/LogHelper.html":{},"classes/LoginUserDto.html":{},"modules/MailModule.html":{},"modules/MongooseConfig.html":{},"controllers/PlansController.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"interfaces/logProps.html":{}}}],["user'})@apiresponse({status",{"_index":1875,"title":{},"body":{"controllers/UsersController.html":{}}}],["user'})@isnotempty",{"_index":1155,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["user'})@isnotempty()@matches(regex.email",{"_index":920,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user'})@isnotempty()@matches(regex.password",{"_index":924,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user'})@isoptional()@matches(regex.phone",{"_index":926,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.'})@apiresponse({status",{"_index":1884,"title":{},"body":{"controllers/UsersController.html":{}}}],["user.dto",{"_index":622,"title":{},"body":{"classes/CreateAuthClientDto.html":{},"classes/CreateAuthOrganizationDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":918,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:11",{"_index":1157,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["user.dto.ts:19",{"_index":923,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:24",{"_index":927,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:29",{"_index":925,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:37",{"_index":932,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:45",{"_index":929,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:7",{"_index":1156,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["user.name",{"_index":1255,"title":{},"body":{"modules/MongooseConfig.html":{}}}],["user.role",{"_index":305,"title":{},"body":{"guards/AuthGuard.html":{}}}],["user.role.startswith(\"booker_",{"_index":371,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["user.role.startswith(\"organization_",{"_index":367,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["user_12345",{"_index":653,"title":{},"body":{"classes/CreateBookerEmployeeDto.html":{},"classes/CreateEmployeeDto.html":{}}}],["user_12345'})@isnotempty()@isstring",{"_index":644,"title":{},"body":{"classes/CreateBookerEmployeeDto.html":{},"classes/CreateEmployeeDto.html":{}}}],["userdocument",{"_index":1139,"title":{},"body":{"classes/LogHelper.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/logProps.html":{},"miscellaneous/typealiases.html":{}}}],["useremail",{"_index":423,"title":{},"body":{"interfaces/BaseProps.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"interfaces/InitPasswordProps.html":{},"injectables/MailHelper.html":{},"interfaces/ResetPasswordProps.html":{}}}],["userid",{"_index":369,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/BookerEmployee.html":{},"classes/Client.html":{},"classes/CreateBookerEmployeeDto.html":{},"classes/CreateClientDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateLogDto.html":{},"classes/Employee.html":{},"classes/Log.html":{},"classes/LogHelper.html":{},"interfaces/logProps.html":{}}}],["userinfos",{"_index":94,"title":{},"body":{"controllers/AppController.html":{},"classes/LogHelper.html":{},"controllers/PlansController.html":{},"interfaces/logProps.html":{}}}],["userrole",{"_index":304,"title":{},"body":{"guards/AuthGuard.html":{}}}],["userroleenum",{"_index":285,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"classes/CreateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["userroleenum.client",{"_index":1863,"title":{},"body":{"classes/User.html":{},"controllers/UsersController.html":{}}}],["userroleenum})@isoptional()@isenum(userroleenum",{"_index":928,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["users",{"_index":1873,"title":{},"body":{"controllers/UsersController.html":{}}}],["users'})@apiresponse({status",{"_index":1879,"title":{},"body":{"controllers/UsersController.html":{}}}],["users.'})@apiresponse({status",{"_index":1881,"title":{},"body":{"controllers/UsersController.html":{}}}],["userschema",{"_index":1252,"title":{},"body":{"modules/MongooseConfig.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userschema.pre(\"find",{"_index":1868,"title":{},"body":{"classes/User.html":{}}}],["userschema.pre(\"findone",{"_index":1869,"title":{},"body":{"classes/User.html":{}}}],["userschema.pre(\"findoneandupdate",{"_index":1870,"title":{},"body":{"classes/User.html":{}}}],["userscontroller",{"_index":1871,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userservice",{"_index":749,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["userservice'})@isnotempty({message",{"_index":750,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["usersmodel",{"_index":1908,"title":{},"body":{"injectables/UsersService.html":{}}}],["usersmodule",{"_index":165,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ClientsModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":281,"title":{"injectables/UsersService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"modules/ClientsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["userstatusenum",{"_index":930,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["userstatusenum.not_verified",{"_index":1861,"title":{},"body":{"classes/User.html":{}}}],["userstatusenum})@isoptional()@isalpha",{"_index":931,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["utilis",{"_index":2073,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["uzs",{"_index":2062,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["validatenested",{"_index":683,"title":{},"body":{"classes/CreateClientDto.html":{},"classes/CustomFieldDto.html":{},"classes/CustomFieldValueDto.html":{},"classes/FlagDto.html":{}}}],["validation",{"_index":1083,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["validation.pipe.ts",{"_index":961,"title":{},"body":{"injectables/CustomValidationPipe.html":{},"coverage.html":{}}}],["validation.pipe.ts:11",{"_index":966,"title":{},"body":{"injectables/CustomValidationPipe.html":{}}}],["validationpipe",{"_index":962,"title":{},"body":{"injectables/CustomValidationPipe.html":{}}}],["validator",{"_index":650,"title":{},"body":{"classes/CreateBookerEmployeeDto.html":{},"classes/CreateClientDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEstablishmentDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreatePlanPriceDto.html":{},"classes/CreatePromoCodeDto.html":{},"classes/CreateSubscriptionDto.html":{},"classes/CreateTeamDto.html":{},"classes/CreateUserDto.html":{},"classes/CustomFieldDto.html":{},"classes/CustomFieldValueDto.html":{},"classes/FlagDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/LoginUserDto.html":{},"classes/RefreshTokenDto.html":{},"classes/ResetPasswordDto.html":{},"dependencies.html":{}}}],["value",{"_index":946,"title":{},"body":{"classes/CustomFieldDto.html":{},"classes/CustomFieldValueDto.html":{},"injectables/CustomValidationPipe.html":{},"injectables/MailHelper.html":{},"classes/SecurityHelper.html":{},"injectables/Token.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.dto",{"_index":677,"title":{},"body":{"classes/CreateClientDto.html":{}}}],["value.dto.ts",{"_index":955,"title":{},"body":{"classes/CustomFieldValueDto.html":{},"coverage.html":{}}}],["value.dto.ts:16",{"_index":957,"title":{},"body":{"classes/CustomFieldValueDto.html":{}}}],["value.dto.ts:19",{"_index":958,"title":{},"body":{"classes/CustomFieldValueDto.html":{}}}],["values",{"_index":681,"title":{},"body":{"classes/CreateClientDto.html":{}}}],["variable",{"_index":1931,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2233,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verfified",{"_index":1102,"title":{},"body":{"classes/Hash.html":{}}}],["verified",{"_index":1815,"title":{},"body":{"injectables/Token.html":{},"miscellaneous/enumerations.html":{}}}],["verifying",{"_index":1820,"title":{},"body":{"injectables/Token.html":{}}}],["verifytoken",{"_index":1784,"title":{},"body":{"injectables/Token.html":{}}}],["verifytoken(token",{"_index":1797,"title":{},"body":{"injectables/Token.html":{}}}],["version",{"_index":2214,"title":{},"body":{"properties.html":{}}}],["vnd",{"_index":2050,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["void",{"_index":497,"title":{},"body":{"modules/BookerEmployeesModule.html":{},"modules/EmployeesModule.html":{},"modules/EstablishmentsModule.html":{},"classes/GlobalExceptionFilter.html":{},"modules/OrganizationsModule.html":{},"modules/PlanPricesModule.html":{},"modules/PlansModule.html":{},"modules/PromoCodesModule.html":{},"modules/SubscriptionsModule.html":{},"modules/TeamsModule.html":{}}}],["want",{"_index":665,"title":{},"body":{"classes/CreateClientDto.html":{}}}],["warn",{"_index":2096,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["watch",{"_index":2173,"title":{},"body":{"index.html":{}}}],["website",{"_index":699,"title":{},"body":{"classes/CreateEstablishmentDto.html":{},"classes/Establishment.html":{},"index.html":{}}}],["week",{"_index":2069,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["welcome",{"_index":412,"title":{},"body":{"interfaces/BaseProps.html":{},"interfaces/ConfirmAccountClientProps.html":{},"interfaces/ConfirmAccountOrganizationProps.html":{},"interfaces/InitPasswordProps.html":{},"injectables/MailHelper.html":{},"interfaces/ResetPasswordProps.html":{}}}],["whether",{"_index":860,"title":{},"body":{"classes/CreatePlanPriceDto.html":{}}}],["without",{"_index":1590,"title":{},"body":{"classes/StringHelper.html":{}}}],["year",{"_index":835,"title":{},"body":{"classes/CreatePlanDto.html":{},"miscellaneous/enumerations.html":{}}}],["yes",{"_index":1800,"title":{},"body":{"injectables/Token.html":{}}}],["you'd",{"_index":2191,"title":{},"body":{"index.html":{}}}],["z0",{"_index":2253,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z])(?=.*[0",{"_index":2246,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z])(?=.*[a",{"_index":2244,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z]))|((?=.*[a",{"_index":2245,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z]{2",{"_index":2256,"title":{},"body":{"miscellaneous/variables.html":{}}}],["za",{"_index":2252,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zar",{"_index":2026,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["zoom",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookerEmployeesModule.html":{},"modules/ClientsModule.html":{},"modules/EmployeesModule.html":{},"modules/EstablishmentsModule.html":{},"modules/JwtModule.html":{},"modules/LogsModule.html":{},"modules/MailModule.html":{},"modules/OrganizationsModule.html":{},"modules/PlanPricesModule.html":{},"modules/PlansModule.html":{},"modules/PromoCodesModule.html":{},"modules/StripeModule.html":{},"modules/SubscriptionsModule.html":{},"modules/TeamsModule.html":{},"modules/ThrottlerConfig.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createDto: CreateDto, res: Response, req: Request, ip: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDto\n                                            \n                                                        CreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(res: Response, req: Request, ip: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string, res: Response, req: Request, ip: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:193\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, res: Response, req: Request, ip: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:338\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateDto: UpdateDto, res: Response, req: Request, ip: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:265\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDto\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n\tController,\n\tGet,\n\tPost,\n\tPut,\n\tDelete,\n\tBody,\n\tParam,\n\tRes,\n\tHttpStatus,\n\tReq,\n\tIp,\n} from \"@nestjs/common\";\nimport { Connection, Document } from \"mongoose\";\nimport { AppService } from \"src/app.service\";\nimport { Response, Request } from \"express\";\nimport { Responses } from \"@helpers/responses.helper\";\nimport { StringHelper } from \"@helpers/string.helper\";\nimport { LogLevelEnum } from \"@enums/log-level.enum\";\nimport { LogHelper } from \"@helpers/log.helper\";\nimport { InjectConnection } from \"@nestjs/mongoose\";\n\n@Controller()\nexport abstract class AppController {\n\tprotected readonly logHelper: LogHelper;\n\n\tconstructor(\n\t\tprivate readonly service: AppService,\n\t\tprivate readonly schema: string,\n\t\t@InjectConnection() private readonly connection: Connection,\n\t\tlogHelper: LogHelper,\n\t) {\n\t\tthis.logHelper = logHelper;\n\t}\n\n\t@Post()\n\tasync create(\n\t\t@Body() createDto: CreateDto,\n\t\t@Res() res: Response,\n\t\t@Req() req: Request,\n\t\t@Ip() ip: string,\n\t) {\n\t\tconst path = \"create\";\n\t\tconst method = \"Post\";\n\t\tconst session = await this.connection.startSession();\n\t\tsession.startTransaction();\n\n\t\ttry {\n\t\t\tconst data = await this.service.create(createDto);\n\n\t\t\tif (!data) {\n\t\t\t\tthis.logHelper.log({\n\t\t\t\t\tip: ip,\n\t\t\t\t\tuser: req[\"user\"],\n\t\t\t\t\tuserInfos: req[\"userInfos\"],\n\t\t\t\t\tlevel: LogLevelEnum.ERROR,\n\t\t\t\t\tmessage: `Created ${this.schema}`,\n\t\t\t\t\tcontext: path,\n\t\t\t\t\tmetadata: { data },\n\t\t\t\t});\n\n\t\t\t\tthrow new Error(\"Not Found\");\n\t\t\t}\n\n\t\t\tthis.logHelper.log({\n\t\t\t\tip: ip,\n\t\t\t\tuser: req[\"user\"],\n\t\t\t\tuserInfos: req[\"userInfos\"],\n\t\t\t\tlevel: LogLevelEnum.INFO,\n\t\t\t\tmessage: `Created ${this.schema}`,\n\t\t\t\tcontext: path,\n\t\t\t\tmetadata: { data },\n\t\t\t});\n\n\t\t\tawait session.commitTransaction();\n\n\t\t\treturn Responses.getResponse({\n\t\t\t\tres,\n\t\t\t\tpath,\n\t\t\t\tmethod,\n\t\t\t\tcode: HttpStatus.CREATED,\n\t\t\t\tsubject: this.schema,\n\t\t\t\tdata: {\n\t\t\t\t\t[StringHelper.removeLastS(this.schema)]: data,\n\t\t\t\t},\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tawait session.abortTransaction();\n\n\t\t\tconsole.error(\n\t\t\t\t`${this.schema.toUpperCase()}Controller > ${path} : `,\n\t\t\t\terror,\n\t\t\t);\n\t\t\tif (error.message === \"Not Found\") {\n\t\t\t\treturn Responses.getResponse({\n\t\t\t\t\tres,\n\t\t\t\t\tpath,\n\t\t\t\t\tmethod,\n\t\t\t\t\tcode: HttpStatus.UNPROCESSABLE_ENTITY,\n\t\t\t\t\tsubject: this.schema,\n\t\t\t\t\terror: error.message,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn Responses.getResponse({\n\t\t\t\t\tres,\n\t\t\t\t\tpath,\n\t\t\t\t\tmethod,\n\t\t\t\t\tcode: HttpStatus.INTERNAL_SERVER_ERROR,\n\t\t\t\t\tsubject: this.schema,\n\t\t\t\t\terror: `An error occured while creating the ${this.schema}`,\n\t\t\t\t});\n\t\t\t}\n\t\t} finally {\n\t\t\tsession.endSession();\n\t\t}\n\t}\n\n\t@Get()\n\tasync findAll(@Res() res: Response, @Req() req: Request, @Ip() ip: string) {\n\t\tconst path = \"findAll\";\n\t\tconst method = \"Get\";\n\t\tconst session = await this.connection.startSession();\n\t\tsession.startTransaction();\n\n\t\ttry {\n\t\t\tconst data = await this.service.findAll();\n\n\t\t\tif (!data || data.length === 0) {\n\t\t\t\tthrow new Error(\"Not Found\");\n\t\t\t}\n\n\t\t\tthis.logHelper.log({\n\t\t\t\tip: ip,\n\t\t\t\tuser: req[\"user\"],\n\t\t\t\tuserInfos: req[\"userInfos\"],\n\t\t\t\tlevel: LogLevelEnum.INFO,\n\t\t\t\tmessage: `Retrieved all ${this.schema}`,\n\t\t\t\tcontext: path,\n\t\t\t\tmetadata: { data },\n\t\t\t});\n\n\t\t\tawait session.commitTransaction();\n\n\t\t\treturn Responses.getResponse({\n\t\t\t\tres,\n\t\t\t\tpath,\n\t\t\t\tmethod,\n\t\t\t\tcode: HttpStatus.OK,\n\t\t\t\tsubject: this.schema,\n\t\t\t\tmultiple: true,\n\t\t\t\tdata: {\n\t\t\t\t\t[this.schema]: data,\n\t\t\t\t},\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tawait session.abortTransaction();\n\n\t\t\tconsole.error(\n\t\t\t\t`${this.schema.toUpperCase()}Controller > ${path} : `,\n\t\t\t\terror,\n\t\t\t);\n\t\t\tif (error.message === \"Not Found\") {\n\t\t\t\treturn Responses.getResponse({\n\t\t\t\t\tres,\n\t\t\t\t\tpath,\n\t\t\t\t\tmethod,\n\t\t\t\t\tcode: HttpStatus.NOT_FOUND,\n\t\t\t\t\tsubject: this.schema,\n\t\t\t\t\tmultiple: true,\n\t\t\t\t\terror: `Not found`,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn Responses.getResponse({\n\t\t\t\t\tres,\n\t\t\t\t\tpath,\n\t\t\t\t\tmethod,\n\t\t\t\t\tcode: HttpStatus.INTERNAL_SERVER_ERROR,\n\t\t\t\t\tmultiple: true,\n\t\t\t\t\tsubject: this.schema,\n\t\t\t\t\terror: `An error occured while creating the ${this.schema}`,\n\t\t\t\t});\n\t\t\t}\n\t\t} finally {\n\t\t\tsession.endSession();\n\t\t}\n\t}\n\n\t@Get(\":id\")\n\tasync findOne(\n\t\t@Param(\"id\") id: string,\n\t\t@Res() res: Response,\n\t\t@Req() req: Request,\n\t\t@Ip() ip: string,\n\t) {\n\t\tconst path = \"findOne\";\n\t\tconst method = \"Get\";\n\t\tconst session = await this.connection.startSession();\n\t\tsession.startTransaction();\n\n\t\ttry {\n\t\t\tconst data = await this.service.findOne(id);\n\n\t\t\tif (!data) {\n\t\t\t\tthrow new Error(\"Not Found\");\n\t\t\t}\n\n\t\t\tthis.logHelper.log({\n\t\t\t\tip: ip,\n\t\t\t\tuser: req[\"user\"],\n\t\t\t\tuserInfos: req[\"userInfos\"],\n\t\t\t\tlevel: LogLevelEnum.INFO,\n\t\t\t\tmessage: `Retrieved all ${this.schema}`,\n\t\t\t\tcontext: path,\n\t\t\t\tmetadata: { data },\n\t\t\t});\n\n\t\t\tawait session.commitTransaction();\n\n\t\t\treturn Responses.getResponse({\n\t\t\t\tres,\n\t\t\t\tpath,\n\t\t\t\tmethod,\n\t\t\t\tcode: HttpStatus.OK,\n\t\t\t\tsubject: this.schema,\n\t\t\t\tdata: {\n\t\t\t\t\t[StringHelper.removeLastS(this.schema)]: data,\n\t\t\t\t},\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tawait session.abortTransaction();\n\n\t\t\tconsole.error(\n\t\t\t\t`${this.schema.toUpperCase()}Controller > ${path} : `,\n\t\t\t\terror,\n\t\t\t);\n\t\t\tif (error.message === \"Not Found\") {\n\t\t\t\treturn Responses.getResponse({\n\t\t\t\t\tres,\n\t\t\t\t\tpath,\n\t\t\t\t\tmethod,\n\t\t\t\t\tcode: HttpStatus.NOT_FOUND,\n\t\t\t\t\tsubject: this.schema,\n\t\t\t\t\terror: error.message,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn Responses.getResponse({\n\t\t\t\t\tres,\n\t\t\t\t\tpath,\n\t\t\t\t\tmethod,\n\t\t\t\t\tcode: HttpStatus.INTERNAL_SERVER_ERROR,\n\t\t\t\t\tsubject: this.schema,\n\t\t\t\t\terror: `An error occured while creating the ${this.schema}`,\n\t\t\t\t});\n\t\t\t}\n\t\t} finally {\n\t\t\tsession.endSession();\n\t\t}\n\t}\n\n\t@Put(\":id\")\n\tasync update(\n\t\t@Param(\"id\") id: string,\n\t\t@Body() updateDto: UpdateDto,\n\t\t@Res() res: Response,\n\t\t@Req() req: Request,\n\t\t@Ip() ip: string,\n\t) {\n\t\tconst path = \"update\";\n\t\tconst method = \"Put\";\n\t\tconst session = await this.connection.startSession();\n\t\tsession.startTransaction();\n\n\t\ttry {\n\t\t\tconst data = await this.service.update(id, updateDto);\n\n\t\t\tif (!data) {\n\t\t\t\tthrow new Error(\"Not Found\");\n\t\t\t}\n\n\t\t\tthis.logHelper.log({\n\t\t\t\tip: ip,\n\t\t\t\tuser: req[\"user\"],\n\t\t\t\tuserInfos: req[\"userInfos\"],\n\t\t\t\tlevel: LogLevelEnum.INFO,\n\t\t\t\tmessage: `Created ${this.schema}`,\n\t\t\t\tcontext: path,\n\t\t\t\tmetadata: { data },\n\t\t\t});\n\n\t\t\tawait session.commitTransaction();\n\n\t\t\treturn Responses.getResponse({\n\t\t\t\tres,\n\t\t\t\tpath,\n\t\t\t\tmethod,\n\t\t\t\tcode: HttpStatus.OK,\n\t\t\t\tsubject: this.schema,\n\t\t\t\tdata: {\n\t\t\t\t\t[StringHelper.removeLastS(this.schema)]: data,\n\t\t\t\t},\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tawait session.abortTransaction();\n\n\t\t\tconsole.error(\n\t\t\t\t`${this.schema.toUpperCase()}Controller > ${path} : `,\n\t\t\t\terror,\n\t\t\t);\n\t\t\tif (error.message === \"Not Found\") {\n\t\t\t\treturn Responses.getResponse({\n\t\t\t\t\tres,\n\t\t\t\t\tpath,\n\t\t\t\t\tmethod,\n\t\t\t\t\tcode: HttpStatus.NOT_FOUND,\n\t\t\t\t\tsubject: this.schema,\n\t\t\t\t\terror: error.message,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn Responses.getResponse({\n\t\t\t\t\tres,\n\t\t\t\t\tpath,\n\t\t\t\t\tmethod,\n\t\t\t\t\tcode: HttpStatus.INTERNAL_SERVER_ERROR,\n\t\t\t\t\tsubject: this.schema,\n\t\t\t\t\terror: `An error occured while creating the ${this.schema}`,\n\t\t\t\t});\n\t\t\t}\n\t\t} finally {\n\t\t\tsession.endSession();\n\t\t}\n\t}\n\n\t@Delete(\":id\")\n\tasync remove(\n\t\t@Param(\"id\") id: string,\n\t\t@Res() res: Response,\n\t\t@Req() req: Request,\n\t\t@Ip() ip: string,\n\t) {\n\t\tconst path = \"remove\";\n\t\tconst method = \"Delete\";\n\t\tconst session = await this.connection.startSession();\n\t\tsession.startTransaction();\n\n\t\ttry {\n\t\t\tconst data = await this.service.findOne(id);\n\n\t\t\tif (!data) {\n\t\t\t\tthrow new Error(\"Not Found\");\n\t\t\t}\n\n\t\t\tawait this.service.remove(id);\n\n\t\t\tthis.logHelper.log({\n\t\t\t\tip: ip,\n\t\t\t\tuser: req[\"user\"],\n\t\t\t\tuserInfos: req[\"userInfos\"],\n\t\t\t\tlevel: LogLevelEnum.INFO,\n\t\t\t\tmessage: `Created ${this.schema}`,\n\t\t\t\tcontext: path,\n\t\t\t\tmetadata: { data },\n\t\t\t});\n\n\t\t\tawait session.commitTransaction();\n\n\t\t\treturn Responses.getResponse({\n\t\t\t\tres,\n\t\t\t\tpath,\n\t\t\t\tmethod,\n\t\t\t\tcode: HttpStatus.NO_CONTENT,\n\t\t\t\tsubject: this.schema,\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tawait session.abortTransaction();\n\n\t\t\tconsole.error(\n\t\t\t\t`${this.schema.toUpperCase()}Controller > ${path} : `,\n\t\t\t\terror,\n\t\t\t);\n\t\t\tif (error.message === \"Not Found\") {\n\t\t\t\treturn Responses.getResponse({\n\t\t\t\t\tres,\n\t\t\t\t\tpath,\n\t\t\t\t\tmethod,\n\t\t\t\t\tcode: HttpStatus.NOT_FOUND,\n\t\t\t\t\tsubject: this.schema,\n\t\t\t\t\terror: error.message,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn Responses.getResponse({\n\t\t\t\t\tres,\n\t\t\t\t\tpath,\n\t\t\t\t\tmethod,\n\t\t\t\t\tcode: HttpStatus.INTERNAL_SERVER_ERROR,\n\t\t\t\t\tsubject: this.schema,\n\t\t\t\t\terror: `An error occured while creating the ${this.schema}`,\n\t\t\t\t});\n\t\t\t}\n\t\t} finally {\n\t\t\tsession.endSession();\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_exports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nClientsModule\n\nClientsModule\n\nAppModule -->\n\nClientsModule->AppModule\n\n\n\n\n\nLogsModule\n\nLogsModule\n\nAppModule -->\n\nLogsModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nMongooseConfig\n\nMongooseConfig\n\nAppModule -->\n\nMongooseConfig->AppModule\n\n\n\n\n\nStripeModule\n\nStripeModule\n\nAppModule -->\n\nStripeModule->AppModule\n\n\n\n\n\nThrottlerConfig\n\nThrottlerConfig\n\nAppModule -->\n\nThrottlerConfig->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppModule \n\nAppModule \n\nAppModule  -->\n\nAppModule->AppModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            ClientsModule\n                        \n                        \n                            LogsModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            MongooseConfig\n                        \n                        \n                            StripeModule\n                        \n                        \n                            ThrottlerConfig\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AppModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // CONFIGS\nimport {\n\tGlobal,\n\t// MiddlewareConsumer,\n\tModule,\n} from \"@nestjs/common\";\n// import { AppController } from \"@modules/app.controller\";\n// import { AppService } from \"@modules/app.service\";\n// import { MongooseModule } from \"@nestjs/mongoose\";\nimport { ConfigModule } from \"@nestjs/config\";\nimport { MongooseConfig } from \"@config/database/mongoose.config\";\nimport { MailModule } from \"@src/providers/mail/mail.module\";\n// import { StripeModule } from \"@providers/services/stripe/stripe.module\";\nimport { settings } from \"@constants/settings\";\n\n// MODULES\nimport { ClientsModule } from \"@modules/clients/clients.module\";\n// import { CustomFieldsModule } from \"@modules/custom-fields/custom-fields.module\";\n// import { CustomersModule } from \"@modules/customers/customers.module\";\n// import { NotificationsModule } from \"TEMPORAIRE/notifications/notifications.module\";\n// import { PaymentsModule } from \"@modules/payments/payments.module\";\n// import { PlansModule } from \"@modules/plans/plans.module\";\n// import { SubscriptionsModule } from \"@modules/subscriptions/subscriptions.module\";\nimport { UsersModule } from \"@modules/users/users.module\";\nimport { AuthModule } from \"@modules/auth/auth.module\";\nimport { LogsModule } from \"@modules/logs/logs.module\";\nimport { ThrottlerConfig } from \"@config/security/throttler.config\";\nimport { StripeModule } from \"@src/providers/stripe/stripe.module\";\n// import { APP_GUARD } from \"@nestjs/core\";\n// import { ThrottlerBehindProxyGuard } from \"@guards/throttler-behind-proxy.guard\";\n\n@Global()\n@Module({\n\timports: [\n\t\tConfigModule.forRoot({\n\t\t\tisGlobal: true,\n\t\t\tenvFilePath: \".env\",\n\t\t}),\n\t\tMongooseConfig,\n\t\tMailModule,\n\t\tThrottlerConfig,\n\t\tStripeModule,\n\t\tLogsModule,\n\t\tAuthModule,\n\t\tUsersModule,\n\t\tClientsModule,\n\t\t// CustomFieldsModule,\n\t\t// CustomersModule,\n\t\t// NotificationsModule,\n\t\t// PaymentsModule,\n\t\t// PlansModule,\n\t\t// SubscriptionsModule,\n\t],\n\tcontrollers: [],\n\tproviders: [\n\t\t// {\n\t\t// \tprovide: APP_GUARD,\n\t\t// \tuseClass: ThrottlerBehindProxyGuard,\n\t\t// },\n\t],\n\texports: [AppModule],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findWhere\n                            \n                            \n                                    Protected\n                                    Async\n                                populateModel\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updateMany\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(appModel: Model, populate: Array)\n                    \n                \n                        \n                            \n                                Defined in src/app.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        appModel\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        populate\n                                                  \n                                                        \n                                                                    Array\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createDto: CreateDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDto\n                                            \n                                                        CreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findWhere\n                        \n                    \n                \n            \n            \n                \n                        \n                    findWhere(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        populateModel\n                        \n                    \n                \n            \n            \n                \n                        \n                    populateModel(model: AppModel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                        AppModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateDto: UpdateDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDto\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateMany\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateMany(where: object, updateDto: UpdateDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                where\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDto\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { Model, Document } from \"mongoose\";\n\n@Injectable()\nexport abstract class AppService {\n\tconstructor(\n\t\tprotected readonly appModel: Model,\n\t\tprivate readonly populate: Array = [],\n\t) {}\n\n\tasync create(createDto: CreateDto): Promise {\n\t\ttry {\n\t\t\tconst createdModel = new this.appModel(createDto);\n\t\t\tawait createdModel.save();\n\t\t\treturn this.populateModel(createdModel);\n\t\t} catch (error) {\n\t\t\tconsole.error(\"AppService > create : \", error);\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tasync findAll(): Promise {\n\t\treturn this.appModel.find().populate(this.populate).exec();\n\t}\n\n\tasync findOne(id: string): Promise {\n\t\tconst model = await this.appModel\n\t\t\t.findById(id)\n\t\t\t.populate(this.populate)\n\t\t\t.exec();\n\t\treturn this.populateModel(model);\n\t}\n\n\tasync update(id: string, updateDto: UpdateDto): Promise {\n\t\ttry {\n\t\t\tconst updatedModel = await this.appModel\n\t\t\t\t.findByIdAndUpdate(id, updateDto, { new: true })\n\t\t\t\t.populate(this.populate)\n\t\t\t\t.exec();\n\t\t\treturn this.populateModel(updatedModel);\n\t\t} catch (error) {\n\t\t\tconsole.error(\"AppService > update : \", error);\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tasync remove(id: string): Promise {\n\t\tawait this.appModel.findByIdAndDelete(id).exec();\n\t}\n\n\tasync findWhere({\n\t\twhere,\n\t\tsort,\n\t\tlimit,\n\t\tfind,\n\t}: {\n\t\twhere: object;\n\t\tsort?: string;\n\t\tlimit?: number;\n\t\tfind?: string;\n\t}): Promise {\n\t\treturn await this.appModel\n\t\t\t.find(where)\n\t\t\t.sort(sort)\n\t\t\t.populate(this.populate)\n\t\t\t.limit(limit)\n\t\t\t.select(find)\n\t\t\t.exec();\n\t}\n\n\tasync updateMany(where: object, updateDto: UpdateDto): Promise {\n\t\ttry {\n\t\t\treturn await this.appModel.updateMany(where, updateDto).exec();\n\t\t} catch (error) {\n\t\t\tconsole.error(\"AppService > updateMany : \", error);\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tprotected async populateModel(model: AppModel): Promise {\n\t\treturn model;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/common/guards/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/common/guards/auth.guard.ts:17\n                            \n                        \n\n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/guards/auth.guard.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n\tInjectable,\n\tCanActivate,\n\tExecutionContext,\n\tUnauthorizedException,\n\tForbiddenException,\n} from \"@nestjs/common\";\nimport { Reflector } from \"@nestjs/core\";\n// import { FirebaseService } from '@providers/services/firebase/firebase.service';\nimport { UsersService } from \"@modules/users/users.service\";\n// import { CustomersService } from \"@modules/customers/customers.service\";\nimport { UserRoleEnum } from \"@enums/user-role.enum\";\nimport { ROLES_KEY } from \"@decorators/roles.decorator\";\nimport { OWNERSHIP_KEY } from \"@decorators/ownership.decorator\";\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\tconstructor() {} // private readonly reflector: Reflector // private readonly customersService: CustomersService, // private readonly usersService: UsersService, // private readonly firebaseService: FirebaseService,\n\n\tasync canActivate(context: ExecutionContext): Promise {\n\t\tconst request = context.switchToHttp().getRequest();\n\n\t\ttry {\n\t\t\t// const user = await this.usersService.findOne(request[\"request\"].uid);\n\t\t\t// request['user'] = user;\n\n\t\t\t// const customer = await this.customersService.findOneByUser(user._id);\n\t\t\t// request['customer'] = customer;\n\n\t\t\t// const ownership = this.reflector.get(OWNERSHIP_KEY, context.getHandler());\n\n\t\t\t// const roles = this.reflector.get(ROLES_KEY, context.getHandler());\n\n\t\t\t// if (!roles || ownership) {\n\t\t\t//   return true;\n\t\t\t// }\n\n\t\t\t// const userRole = user.role;\n\n\t\t\t// if (!this.hasRole(userRole, roles)) {\n\t\t\t//   throw new ForbiddenException('You do not have permission to access this resource');\n\t\t\t// }\n\n\t\t\treturn true;\n\t\t} catch (error) {\n\t\t\tthrow new UnauthorizedException(\"Invalid token\");\n\t\t}\n\t}\n\n\t// private hasRole(userRole: RoleEnum, roles: RoleEnum[]): boolean {\n\t// \tconst roleHierarchy = {\n\t// \t\t[RoleEnum.CLIENT]: [RoleEnum.CLIENT],\n\t// \t\t[RoleEnum.EMPLOYEE]: [RoleEnum.CLIENT, RoleEnum.EMPLOYEE],\n\t// \t\t[RoleEnum.ADMIN]: [\n\t// \t\t\tRoleEnum.CLIENT,\n\t// \t\t\tRoleEnum.EMPLOYEE,\n\t// \t\t\tRoleEnum.ADMIN,\n\t// \t\t],\n\t// \t\t[RoleEnum.SUPER_ADMIN]: [\n\t// \t\t\tRoleEnum.CLIENT,\n\t// \t\t\tRoleEnum.EMPLOYEE,\n\t// \t\t\tRoleEnum.ADMIN,\n\t// \t\t\tRoleEnum.SUPER_ADMIN,\n\t// \t\t],\n\t// \t\t[RoleEnum.BRAINST_EMPLOYEE]: [\n\t// \t\t\tRoleEnum.CLIENT,\n\t// \t\t\tRoleEnum.EMPLOYEE,\n\t// \t\t\tRoleEnum.ADMIN,\n\t// \t\t\tRoleEnum.SUPER_ADMIN,\n\t// \t\t\tRoleEnum.BRAINST_EMPLOYEE,\n\t// \t\t],\n\t// \t\t[RoleEnum.BRAINST_ADMIN]: [\n\t// \t\t\tRoleEnum.CLIENT,\n\t// \t\t\tRoleEnum.EMPLOYEE,\n\t// \t\t\tRoleEnum.ADMIN,\n\t// \t\t\tRoleEnum.SUPER_ADMIN,\n\t// \t\t\tRoleEnum.BRAINST_EMPLOYEE,\n\t// \t\t\tRoleEnum.BRAINST_ADMIN,\n\t// \t\t],\n\t// \t\t[RoleEnum.BRAINST_SUPER_ADMIN]: [\n\t// \t\t\tRoleEnum.CLIENT,\n\t// \t\t\tRoleEnum.EMPLOYEE,\n\t// \t\t\tRoleEnum.ADMIN,\n\t// \t\t\tRoleEnum.SUPER_ADMIN,\n\t// \t\t\tRoleEnum.BRAINST_EMPLOYEE,\n\t// \t\t\tRoleEnum.BRAINST_ADMIN,\n\t// \t\t\tRoleEnum.BRAINST_SUPER_ADMIN,\n\t// \t\t],\n\t// \t};\n\n\t// \tconst allowedRoles = roleHierarchy[userRole] || [];\n\t// \treturn roles.some((role) => allowedRoles.includes(role));\n\t// }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthMiddleware.html":{"url":"injectables/AuthMiddleware.html","title":"injectable - AuthMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/middlewares/auth.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, clientsService: ClientsService, employeesService: EmployeesService, bookerEmployeesService: BookerEmployeesService)\n                    \n                \n                        \n                            \n                                Defined in src/common/middlewares/auth.middleware.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clientsService\n                                                  \n                                                        \n                                                                        ClientsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        employeesService\n                                                  \n                                                        \n                                                                        EmployeesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bookerEmployeesService\n                                                  \n                                                        \n                                                                        BookerEmployeesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        use\n                        \n                    \n                \n            \n            \n                \n                        \n                    use(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/middlewares/auth.middleware.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        NextFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n\tHttpStatus,\n\tInjectable,\n\tNestMiddleware,\n\tUnauthorizedException,\n} from \"@nestjs/common\";\nimport { Reflector } from \"@nestjs/core\";\nimport { Request, Response, NextFunction } from \"express\";\nimport { UsersService } from \"@modules/users/users.service\";\nimport { Token } from \"@helpers/token.helper\";\nimport { UserRoleEnum } from \"@enums/user-role.enum\";\nimport { EmployeesService } from \"@modules/employees/employees.service\";\nimport { BookerEmployeesService } from \"@modules/booker-employees/booker-employees.service\";\nimport { ClientsService } from \"@modules/clients/clients.service\";\nimport { Responses } from \"@helpers/responses.helper\";\n// import { CustomersService } from \"@modules/customers/customers.service\";\n\n@Injectable()\nexport class AuthMiddleware implements NestMiddleware {\n\tconstructor(\n\t\tprivate readonly usersService: UsersService,\n\t\tprivate readonly clientsService: ClientsService,\n\t\tprivate readonly employeesService: EmployeesService,\n\t\tprivate readonly bookerEmployeesService: BookerEmployeesService,\n\t\t// private readonly customersService: CustomersService,\n\t) {}\n\n\tasync use(req: Request, res: Response, next: NextFunction) {\n\t\tconst authHeader = req.headers.authorization;\n\n\t\tif (!authHeader || !authHeader.startsWith(\"Bearer \")) {\n\t\t\tthrow new UnauthorizedException(\n\t\t\t\t\"Missing or invalid authentication token\",\n\t\t\t);\n\t\t}\n\n\t\tconst token = authHeader.split(\" \")[1];\n\t\tconsole.log(token);\n\n\t\tif (!token) {\n\t\t\treturn res.status(401).json({ message: \"No token provided\" });\n\t\t}\n\n\t\ttry {\n\t\t\tconst isValid = Token.verifyToken(token);\n\n\t\t\tif (!isValid) {\n\t\t\t\treturn res.status(401).json({ message: \"Invalid token\" });\n\t\t\t}\n\n\t\t\tconst isExpired = Token.isTokenExpired(token);\n\n\t\t\tif (!isExpired) {\n\t\t\t\treturn res.status(401).json({ message: \"Token expired\" });\n\t\t\t}\n\n\t\t\tconst payload = Token.getPayload(token);\n\n\t\t\tif (!payload) {\n\t\t\t\treturn res.status(401).json({ message: \"Invalid token\" });\n\t\t\t}\n\n\t\t\tconst user = await this.usersService.findOne(payload.sub);\n\n\t\t\tif (!user) {\n\t\t\t\treturn Responses.getResponse({\n\t\t\t\t\tres,\n\t\t\t\t\tpath: \"AuthMiddleware\",\n\t\t\t\t\tmethod: \"\",\n\t\t\t\t\tcode: HttpStatus.NOT_FOUND,\n\t\t\t\t\tsubject: \"auth\",\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treq[\"user\"] = user;\n\n\t\t\tif (user.role.startsWith(\"ORGANIZATION_\")) {\n\t\t\t\treq[\"userInfos\"] = await this.employeesService.findWhere({\n\t\t\t\t\twhere: { userId: payload.sub },\n\t\t\t\t})[0];\n\t\t\t} else if (user.role.startsWith(\"BOOKER_\")) {\n\t\t\t\treq[\"userInfos\"] = await this.bookerEmployeesService.findWhere({\n\t\t\t\t\twhere: { userId: payload.sub },\n\t\t\t\t})[0];\n\t\t\t} else {\n\t\t\t\treq[\"userInfos\"] = await this.clientsService.findWhere({\n\t\t\t\t\twhere: { userId: payload.sub },\n\t\t\t\t})[0];\n\t\t\t}\n\n\t\t\tnext();\n\t\t} catch (err) {\n\t\t\treturn res.status(401).json({ message: \"Invalid token\" });\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nMailModule\n\nMailModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nMailModule->AuthModule\n\n\n\n\n\nClientsService\n\nClientsService\n\nAuthModule -->\n\nClientsService->AuthModule\n\n\n\n\n\nLogsService\n\nLogsService\n\nAuthModule -->\n\nLogsService->AuthModule\n\n\n\n\n\nMailHelper\n\nMailHelper\n\nAuthModule -->\n\nMailHelper->AuthModule\n\n\n\n\n\nMailService\n\nMailService\n\nAuthModule -->\n\nMailService->AuthModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nAuthModule -->\n\nUsersService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ClientsService\n                        \n                        \n                            LogsService\n                        \n                        \n                            MailHelper\n                        \n                        \n                            MailService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MailModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { AuthController } from \"@modules/auth/auth.controller\";\nimport { UsersService } from \"@modules/users/users.service\";\nimport { ClientsService } from \"@modules/clients/clients.service\";\nimport { MailHelper } from \"@src/providers/mail/helpers/mail.helper\";\nimport { MailModule } from \"@src/providers/mail/mail.module\";\nimport { MailService } from \"@src/providers/mail/mail.service\";\nimport { LogsService } from \"@modules/logs/logs.service\";\n\n@Module({\n\timports: [MailModule],\n\tcontrollers: [AuthController],\n\tproviders: [\n\t\tUsersService,\n\t\tClientsService,\n\t\tMailService,\n\t\tMailHelper,\n\t\tLogsService,\n\t],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseProps.html":{"url":"interfaces/BaseProps.html","title":"interface - BaseProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BaseProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/providers/mail/helpers/mail.helper.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            sender\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            subject\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            templateDatas\n                                        \n                                \n                                \n                                        \n                                            to\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        sender\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sender:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subject:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        templateDatas\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        templateDatas:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        to:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { MailService } from \"@src/providers/mail/mail.service\";\nimport { settings } from \"@constants/settings\";\n\n@Injectable()\nexport class MailHelper {\n\tprivate readonly sender = \"no-reply@NOM.com\";\n\n\tconstructor(private readonly mailService: MailService) {}\n\n\t// Account methods\n\n\t/**\n\t * @description : This method sends a confirmation email to the client\n\t * @param params : ConfirmAccountProps\n\t */\n\tpublic async sendConfirmAccountClient(params: ConfirmAccountClientProps) {\n\t\tconst sendEmail = await this.mailService.sendMail({\n\t\t\tto: params.to,\n\t\t\tsender: params.sender ?? this.sender,\n\t\t\tsubject: \"Welcome to NOM\",\n\t\t\ttemplate: \"./confirmation\",\n\t\t\ttemplateDatas: {\n\t\t\t\tfirstName: params.templateDatas.firstName,\n\t\t\t\turl: `${settings.FRONTEND_URL}auth/confirm/${params.templateDatas.token}`,\n\t\t\t},\n\t\t});\n\n\t\treturn sendEmail;\n\t}\n\n\t/**\n\t * @description : This method sends a confirmation email to the client\n\t * @param params : ConfirmAccountProps\n\t */\n\tpublic async sendConfirmAccountOrganization(params: ConfirmAccountOrganizationProps) {\n\t\tconst sendEmail = await this.mailService.sendMail({\n\t\t\tto: params.to,\n\t\t\tsender: params.sender ?? this.sender,\n\t\t\tsubject: \"Welcome to NOM\",\n\t\t\ttemplate: \"./confirmation\",\n\t\t\ttemplateDatas: {\n\t\t\t\torganizationName: params.templateDatas.organizationName,\n\t\t\t\tuserEmail: params.templateDatas.userEmail,\n\t\t\t\turl: `${settings.FRONTEND_URL}auth/confirm/${params.templateDatas.token}`,\n\t\t\t},\n\t\t});\n\n\t\treturn sendEmail;\n\t}\n\n\tpublic async sendResetPasswordEmail(params: ResetPasswordProps) {\n\t\tconst sendEmail = await this.mailService.sendMail({\n\t\t\tto: params.to,\n\t\t\tsender: params.sender ?? this.sender,\n\t\t\tsubject: \"Reset your password\",\n\t\t\ttemplate: \"./reset-password\",\n\t\t\ttemplateDatas: {\n\t\t\t\turl: `${settings.FRONTEND_URL}auth/reset-password/${params.templateDatas.token}`,\n\t\t\t},\n\t\t});\n\n\t\treturn sendEmail;\n\t}\n\n\tpublic async sendInitPasswordEmail(params: InitPasswordProps) {\n\t\tconst sendEmail = await this.mailService.sendMail({\n\t\t\tto: params.to,\n\t\t\tsender: params.sender ?? this.sender,\n\t\t\tsubject: \"Init your password\",\n\t\t\ttemplate: \"./init-password\",\n\t\t\ttemplateDatas: {\n\t\t\t\turl: `${settings.FRONTEND_URL}auth/init-password/${params.templateDatas.token}`,\n\t\t\t},\n\t\t});\n\n\t\treturn sendEmail;\n\t}\n}\n\ninterface BaseProps {\n\tto: string[];\n\tsender?: string;\n\tsubject?: string;\n\ttemplateDatas?: object;\n}\n\n// Account interfaces\n\n/**\n * @description : This is the interface for the sendConfirmAccountClient method\n */\ninterface ConfirmAccountClientProps extends BaseProps {\n\ttemplateDatas?: {\n\t\tfirstName: string;\n\t\ttoken: string;\n\t};\n}\n\n/**\n * @description : This is the interface for the sendConfirmAccountOrganization method\n */\ninterface ConfirmAccountOrganizationProps extends BaseProps {\n\ttemplateDatas?: {\n\t\torganizationName: string;\n\t\tuserEmail: string;\n\t\ttoken: string;\n\t};\n}\n\n/**\n * @description : This is the interface for the sendResetPasswordEmail method\n */\ninterface ResetPasswordProps extends BaseProps {\n\ttemplateDatas?: {\n\t\ttoken: string;\n\t};\n}\n\n/**\n * @description : This is the interface for the sendResetPasswordEmail method\n */\ninterface InitPasswordProps extends BaseProps {\n\ttemplateDatas?: {\n\t\ttoken: string;\n\t};\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BookerEmployee.html":{"url":"classes/BookerEmployee.html","title":"class - BookerEmployee","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BookerEmployee\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/booker-employees/entities/booker-employee.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    \n                                firstName\n                            \n                            \n                                    \n                                lastName\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/booker-employees/entities/booker-employee.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/booker-employees/entities/booker-employee.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/booker-employees/entities/booker-employee.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/booker-employees/entities/booker-employee.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/booker-employees/entities/booker-employee.entity.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Schema, Prop, SchemaFactory } from \"@nestjs/mongoose\";\nimport { Document } from \"mongoose\";\n\nexport type BookerEmployeeDocument = BookerEmployee & Document;\n\n@Schema({\n\ttimestamps: true,\n})\nexport class BookerEmployee {\n\t@Prop({ required: true, unique: true })\n\tuserId: string;\n\n\t@Prop({ required: true })\n\tlastName: string;\n\n\t@Prop({ required: true })\n\tfirstName: string;\n\n\tcreatedAt?: Date;\n\tupdatedAt?: Date;\n}\n\nexport const BookerEmployeeSchema =\n\tSchemaFactory.createForClass(BookerEmployee);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BookerEmployeesController.html":{"url":"controllers/BookerEmployeesController.html","title":"controller - BookerEmployeesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BookerEmployeesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/booker-employees/booker-employees.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                booker-employees\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createDto: CreateDto, res: Response, req: Request, ip: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Inherited from         AppController\n\n                        \n                    \n                    \n                        \n                                Defined in         AppController:41\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDto\n                                            \n                                                        CreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(res: Response, req: Request, ip: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Inherited from         AppController\n\n                        \n                    \n                    \n                        \n                                Defined in         AppController:123\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string, res: Response, req: Request, ip: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Inherited from         AppController\n\n                        \n                    \n                    \n                        \n                                Defined in         AppController:193\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, res: Response, req: Request, ip: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Inherited from         AppController\n\n                        \n                    \n                    \n                        \n                                Defined in         AppController:338\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateDto: UpdateDto, res: Response, req: Request, ip: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n                    \n                        \n                            Inherited from         AppController\n\n                        \n                    \n                    \n                        \n                                Defined in         AppController:265\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDto\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from \"@nestjs/common\";\nimport { BookerEmployeesService } from \"@modules/booker-employees/booker-employees.service\";\nimport { CreateBookerEmployeeDto } from \"@modules/booker-employees/dto/create-booker-employee.dto\";\nimport { UpdateBookerEmployeeDto } from \"@modules/booker-employees/dto/update-booker-employee.dto\";\nimport { BookerEmployeeDocument } from \"@modules/booker-employees/entities/booker-employee.entity\";\nimport { AppController } from \"@src/app.controller\";\nimport {\n\tApiTags,\n\tApiOperation,\n\tApiResponse,\n\tApiBearerAuth,\n} from \"@nestjs/swagger\";\nimport { Response } from \"express\";\nimport { LogHelper } from \"@helpers/log.helper\";\nimport { Connection } from \"mongoose\";\n\n@ApiTags(\"booker-employees\")\n@Controller(\"booker-employees\")\nexport class BookerEmployeesController extends AppController {\n\tconstructor(\n\t\tprivate readonly bookerEmployeesService: BookerEmployeesService,\n\t\tlogHelper: LogHelper,\n\t\tconnection: Connection,\n\t) {\n\t\tsuper(bookerEmployeesService, \"bookerEmployees\", connection, logHelper);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BookerEmployeesModule.html":{"url":"modules/BookerEmployeesModule.html","title":"module - BookerEmployeesModule","body":"\n                   \n\n\n\n\n    Modules\n    BookerEmployeesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BookerEmployeesModule\n\n\n\ncluster_BookerEmployeesModule_exports\n\n\n\ncluster_BookerEmployeesModule_providers\n\n\n\n\nBookerEmployeesModule \n\nBookerEmployeesModule \n\n\n\nBookerEmployeesModule\n\nBookerEmployeesModule\n\nBookerEmployeesModule  -->\n\nBookerEmployeesModule->BookerEmployeesModule \n\n\n\n\n\nBookerEmployeesService\n\nBookerEmployeesService\n\nBookerEmployeesModule -->\n\nBookerEmployeesService->BookerEmployeesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/booker-employees/booker-employees.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BookerEmployeesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BookerEmployeesController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BookerEmployeesModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/booker-employees/booker-employees.module.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                consumer\n                                            \n                                                        MiddlewareConsumer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, MiddlewareConsumer } from \"@nestjs/common\";\nimport { AuthMiddleware } from \"@middlewares/auth.middleware\";\nimport { BookerEmployeesController } from \"@modules/booker-employees/booker-employees.controller\";\nimport { BookerEmployeesService } from \"@modules/booker-employees/booker-employees.service\";\n\n@Module({\n\timports: [],\n\tcontrollers: [BookerEmployeesController],\n\tproviders: [BookerEmployeesService],\n\texports: [BookerEmployeesModule],\n})\nexport class BookerEmployeesModule {\n\tconfigure(consumer: MiddlewareConsumer) {\n\t\tconsumer.apply(AuthMiddleware).forRoutes(BookerEmployeesController);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BookerEmployeesService.html":{"url":"injectables/BookerEmployeesService.html","title":"injectable - BookerEmployeesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BookerEmployeesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/booker-employees/booker-employees.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AppService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findWhere\n                            \n                            \n                                    Protected\n                                    Async\n                                populateModel\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updateMany\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(bookerEmployeesModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/booker-employees/booker-employees.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bookerEmployeesModel\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createDto: CreateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:15\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDto\n                                            \n                                                        CreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:26\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:30\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findWhere\n                        \n                    \n                \n            \n            \n                \n                        \n                    findWhere(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:55\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        populateModel\n                        \n                    \n                \n            \n            \n                \n                        \n                    populateModel(model: AppModel)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:84\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                        AppModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:51\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateDto: UpdateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:38\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDto\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateMany\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateMany(where: object, updateDto: UpdateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:75\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                where\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDto\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { Model } from \"mongoose\";\nimport { CreateBookerEmployeeDto } from \"@modules/booker-employees/dto/create-booker-employee.dto\";\nimport { UpdateBookerEmployeeDto } from \"@modules/booker-employees/dto/update-booker-employee.dto\";\nimport {\n\tBookerEmployee,\n\tBookerEmployeeDocument,\n} from \"@modules/booker-employees/entities/booker-employee.entity\";\nimport { AppService } from \"@src/app.service\";\n\n@Injectable()\nexport class BookerEmployeesService extends AppService {\n\tconstructor(\n\t\t@InjectModel(BookerEmployee.name)\n\t\tprivate bookerEmployeesModel: Model,\n\t) {\n\t\tsuper(bookerEmployeesModel);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Client.html":{"url":"classes/Client.html","title":"class - Client","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Client\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/clients/entities/client.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                address1\n                            \n                            \n                                    \n                                    Optional\n                                address2\n                            \n                            \n                                    \n                                    Optional\n                                city\n                            \n                            \n                                    \n                                    Optional\n                                country\n                            \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    \n                                firstName\n                            \n                            \n                                    \n                                lastName\n                            \n                            \n                                    \n                                notificationEmail\n                            \n                            \n                                    \n                                notificationSms\n                            \n                            \n                                    \n                                    Optional\n                                postalCode\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        address1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/clients/entities/client.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        address2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/clients/entities/client.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/clients/entities/client.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/clients/entities/client.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/clients/entities/client.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/clients/entities/client.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/clients/entities/client.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        notificationEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/clients/entities/client.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        notificationSms\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/clients/entities/client.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        postalCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/clients/entities/client.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/clients/entities/client.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/clients/entities/client.entity.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Schema, Prop, SchemaFactory } from \"@nestjs/mongoose\";\nimport { Document } from \"mongoose\";\n\nexport type ClientDocument = Client & Document;\n\n@Schema({\n\ttimestamps: true,\n})\nexport class Client {\n\t@Prop({ required: true, unique: true })\n\tuserId: string;\n\n\t@Prop({ required: true })\n\tlastName: string;\n\n\t@Prop({ required: true })\n\tfirstName: string;\n\n\t@Prop({ default: null })\n\taddress1?: string;\n\n\t@Prop({ default: null })\n\taddress2?: string;\n\n\t@Prop()\n\tpostalCode?: string;\n\n\t@Prop({ default: null })\n\tcity?: string;\n\n\t@Prop({ default: null })\n\tcountry?: string;\n\n\t@Prop()\n\tnotificationEmail: boolean;\n\n\t@Prop()\n\tnotificationSms: boolean;\n\n\t// @Prop()\n\t// customFieldValues?: Array;\n\n\tcreatedAt?: Date;\n\tupdatedAt?: Date;\n}\n\nexport const ClientSchema = SchemaFactory.createForClass(Client);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ClientsController.html":{"url":"controllers/ClientsController.html","title":"controller - ClientsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ClientsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/clients/clients.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                clients\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createClientDto: CreateClientDto, res: Response, req: Request, ip: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Create a new client'})@ApiResponse({status: undefined, description: 'The client has been successfully created.'})@ApiResponse({status: undefined, description: 'Bad Request.'})@ApiBearerAuth()@Post()\n                \n            \n\n                    \n                        \n                            Inherited from         AppController\n\n                        \n                    \n                    \n                        \n                                Defined in         AppController:55\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createClientDto\n                                            \n                                                            CreateClientDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(res: Response, req: Request, ip: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get all clients'})@ApiResponse({status: undefined, description: 'Return all clients.'})@ApiResponse({status: undefined, description: 'Clients not found.'})@ApiBearerAuth()@Get()\n                \n            \n\n                    \n                        \n                            Inherited from         AppController\n\n                        \n                    \n                    \n                        \n                                Defined in         AppController:72\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string, res: Response, req: Request, ip: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get a client by id'})@ApiResponse({status: undefined, description: 'Return a client.'})@ApiResponse({status: undefined, description: 'Client not found.'})@ApiBearerAuth()@Get(':id')\n                \n            \n\n                    \n                        \n                            Inherited from         AppController\n\n                        \n                    \n                    \n                        \n                                Defined in         AppController:84\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, res: Response, req: Request, ip: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Delete a client by id'})@ApiResponse({status: undefined, description: 'The client has been successfully deleted.'})@ApiResponse({status: undefined, description: 'Client not found.'})@ApiBearerAuth()@Delete(':id')\n                \n            \n\n                    \n                        \n                            Inherited from         AppController\n\n                        \n                    \n                    \n                        \n                                Defined in         AppController:127\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateClientDto: UpdateClientDto, res: Response, req: Request, ip: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Update a client by id'})@ApiResponse({status: undefined, description: 'The client has been successfully updated.'})@ApiResponse({status: undefined, description: 'Client not found.'})@ApiBearerAuth()@Put(':id')\n                \n            \n\n                    \n                        \n                            Inherited from         AppController\n\n                        \n                    \n                    \n                        \n                                Defined in         AppController:104\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateClientDto\n                                            \n                                                            UpdateClientDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n\tController,\n\tGet,\n\tPost,\n\tBody,\n\tParam,\n\tDelete,\n\tRes,\n\tHttpStatus,\n\tPut,\n\tReq,\n\tIp,\n} from \"@nestjs/common\";\nimport { ClientsService } from \"@modules/clients/clients.service\";\nimport { CreateClientDto } from \"@modules/clients/dto/create-client.dto\";\nimport { UpdateClientDto } from \"@modules/clients/dto/update-client.dto\";\nimport { AppController } from \"src/app.controller\";\nimport { ClientDocument } from \"@modules/clients/entities/client.entity\";\nimport { Response, Request } from \"express\";\nimport {\n\tApiTags,\n\tApiOperation,\n\tApiResponse,\n\tApiBearerAuth,\n} from \"@nestjs/swagger\";\nimport { LogHelper } from \"@helpers/log.helper\";\nimport { Connection } from \"mongoose\";\n\n@ApiTags(\"clients\")\n@Controller(\"clients\")\nexport class ClientsController extends AppController {\n\tconstructor(\n\t\tprivate readonly clientsService: ClientsService,\n\t\tlogHelper: LogHelper,\n\t\tconnection: Connection,\n\t) {\n\t\tsuper(clientsService, \"clients\", connection, logHelper);\n\t}\n\n\t@ApiOperation({ summary: \"Create a new client\" })\n\t@ApiResponse({\n\t\tstatus: HttpStatus.CREATED,\n\t\tdescription: \"The client has been successfully created.\",\n\t})\n\t@ApiResponse({\n\t\tstatus: HttpStatus.BAD_REQUEST,\n\t\tdescription: \"Bad Request.\",\n\t})\n\t@ApiBearerAuth()\n\t@Post()\n\tasync create(\n\t\t@Body() createClientDto: CreateClientDto,\n\t\t@Res() res: Response,\n\t\t@Req() req: Request,\n\t\t@Ip() ip: string,\n\t) {\n\t\treturn super.create(createClientDto, res, req, ip);\n\t}\n\n\t@ApiOperation({ summary: \"Get all clients\" })\n\t@ApiResponse({ status: HttpStatus.OK, description: \"Return all clients.\" })\n\t@ApiResponse({\n\t\tstatus: HttpStatus.NOT_FOUND,\n\t\tdescription: \"Clients not found.\",\n\t})\n\t@ApiBearerAuth()\n\t@Get()\n\tasync findAll(@Res() res: Response, @Req() req: Request, @Ip() ip: string) {\n\t\treturn super.findAll(res, req, ip);\n\t}\n\n\t@ApiOperation({ summary: \"Get a client by id\" })\n\t@ApiResponse({ status: HttpStatus.OK, description: \"Return a client.\" })\n\t@ApiResponse({\n\t\tstatus: HttpStatus.NOT_FOUND,\n\t\tdescription: \"Client not found.\",\n\t})\n\t@ApiBearerAuth()\n\t@Get(\":id\")\n\tasync findOne(\n\t\t@Param(\"id\") id: string,\n\t\t@Res() res: Response,\n\t\t@Req() req: Request,\n\t\t@Ip() ip: string,\n\t) {\n\t\treturn super.findOne(id, res, req, ip);\n\t}\n\n\t@ApiOperation({ summary: \"Update a client by id\" })\n\t@ApiResponse({\n\t\tstatus: HttpStatus.OK,\n\t\tdescription: \"The client has been successfully updated.\",\n\t})\n\t@ApiResponse({\n\t\tstatus: HttpStatus.NOT_FOUND,\n\t\tdescription: \"Client not found.\",\n\t})\n\t@ApiBearerAuth()\n\t@Put(\":id\")\n\tasync update(\n\t\t@Param(\"id\") id: string,\n\t\t@Body() updateClientDto: UpdateClientDto,\n\t\t@Res() res: Response,\n\t\t@Req() req: Request,\n\t\t@Ip() ip: string,\n\t) {\n\t\tconsole.log(\"update\");\n\n\t\treturn super.update(id, updateClientDto, res, req, ip);\n\t}\n\n\t@ApiOperation({ summary: \"Delete a client by id\" })\n\t@ApiResponse({\n\t\tstatus: HttpStatus.OK,\n\t\tdescription: \"The client has been successfully deleted.\",\n\t})\n\t@ApiResponse({\n\t\tstatus: HttpStatus.NOT_FOUND,\n\t\tdescription: \"Client not found.\",\n\t})\n\t@ApiBearerAuth()\n\t@Delete(\":id\")\n\tasync remove(\n\t\t@Param(\"id\") id: string,\n\t\t@Res() res: Response,\n\t\t@Req() req: Request,\n\t\t@Ip() ip: string,\n\t) {\n\t\treturn super.remove(id, res, req, ip);\n\t}\n\n\t// @ApiOperation({ summary: \"Get all company clients\" })\n\t// @ApiResponse({\n\t// \tstatus: HttpStatus.OK,\n\t// \tdescription: \"Return all company clients.\",\n\t// })\n\t// @ApiResponse({\n\t// \tstatus: HttpStatus.NOT_FOUND,\n\t// \tdescription: \"Company clients not found.\",\n\t// })\n\t// @Ownership()\n\t// @Get(\"me/all\")\n\t// async findAllOwner(@Res() res: Response, @Req() req: Request) {\n\t// \tconst user = req[\"user\"];\n\t// \tconst client = req[\"client\"];\n\t// \tlet path = \"findAllOwner\";\n\t// \tlet method = \"Get\";\n\n\t// \ttry {\n\t// \t\tconst data = await this.clientsService.findWhere({\n\t// \t\t\twhere: { ownerId: client.id.toString() },\n\t// \t\t});\n\n\t// \t\tif (!data || data?.length === 0) {\n\t// \t\t\tthrow new Error(\"Not Found\");\n\t// \t\t}\n\t// \t\treturn Responses.getResponse({\n\t// \t\t\tres,\n\t// \t\t\tpath,\n\t// \t\t\tmethod,\n\t// \t\t\tcode: HttpStatus.OK,\n\t// \t\t\tsubject: \"clients\",\n\t// \t\t\tdata,\n\t// \t\t});\n\t// \t} catch (error) {\n\t// \t\tconsole.error(\n\t// \t\t\t`${\"clients\".toUpperCase()}Controller > ${path} : `,\n\t// \t\t\terror,\n\t// \t\t);\n\t// \t\tif (error.message === \"Not Found\") {\n\t// \t\t\treturn Responses.getResponse({\n\t// \t\t\t\tres,\n\t// \t\t\t\tpath,\n\t// \t\t\t\tmethod,\n\t// \t\t\t\tcode: HttpStatus.NOT_FOUND,\n\t// \t\t\t\tsubject: \"clients\",\n\t// \t\t\t\tdata: error.message,\n\t// \t\t\t});\n\t// \t\t} else {\n\t// \t\t\treturn Responses.getResponse({\n\t// \t\t\t\tres,\n\t// \t\t\t\tpath,\n\t// \t\t\t\tmethod,\n\t// \t\t\t\tcode: HttpStatus.INTERNAL_SERVER_ERROR,\n\t// \t\t\t\tsubject: \"clients\",\n\t// \t\t\t\tdata: error.message,\n\t// \t\t\t});\n\t// \t\t}\n\t// \t}\n\t// }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ClientsModule.html":{"url":"modules/ClientsModule.html","title":"module - ClientsModule","body":"\n                   \n\n\n\n\n    Modules\n    ClientsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ClientsModule\n\n\n\ncluster_ClientsModule_exports\n\n\n\ncluster_ClientsModule_providers\n\n\n\n\nClientsModule \n\nClientsModule \n\n\n\nClientsModule\n\nClientsModule\n\nClientsModule  -->\n\nClientsModule->ClientsModule \n\n\n\n\n\nClientsService\n\nClientsService\n\nClientsModule -->\n\nClientsService->ClientsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/clients/clients.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ClientsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ClientsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ClientsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, MiddlewareConsumer } from \"@nestjs/common\";\nimport { AuthMiddleware } from \"@middlewares/auth.middleware\";\nimport { ClientsService } from \"@modules/clients/clients.service\";\nimport { ClientsController } from \"@modules/clients/clients.controller\";\n// import { UsersService } from \"@modules/users/users.service\";\n// import { UsersModule } from \"@modules/users/users.module\";\n// import { CustomersService } from \"@modules/customers/customers.service\";\n// import { CustomersModule } from \"@modules/customers/customers.module\";\n// import { CustomFieldsService } from \"@modules/custom-fields/custom-fields.service\";\n// import { CustomFieldsModule } from \"@modules/custom-fields/custom-fields.module\";\n\n@Module({\n\timports: [],\n\tcontrollers: [ClientsController],\n\tproviders: [ClientsService],\n\texports: [ClientsModule],\n})\nexport class ClientsModule {\n\t// configure(consumer: MiddlewareConsumer) {\n\t// \tconsumer.apply(AuthMiddleware).forRoutes(ClientsController);\n\t// }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ClientsService.html":{"url":"injectables/ClientsService.html","title":"injectable - ClientsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ClientsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/clients/clients.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AppService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findWhere\n                            \n                            \n                                    Protected\n                                    Async\n                                populateModel\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updateMany\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(clientModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/clients/clients.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clientModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createDto: CreateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:15\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDto\n                                            \n                                                        CreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:26\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:30\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findWhere\n                        \n                    \n                \n            \n            \n                \n                        \n                    findWhere(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:55\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        populateModel\n                        \n                    \n                \n            \n            \n                \n                        \n                    populateModel(model: AppModel)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:84\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                        AppModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:51\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateDto: UpdateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:38\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDto\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateMany\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateMany(where: object, updateDto: UpdateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:75\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                where\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDto\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { Model } from \"mongoose\";\nimport {\n\tClient,\n\tClientDocument,\n} from \"@modules/clients/entities/client.entity\";\nimport { CreateClientDto } from \"@modules/clients/dto/create-client.dto\";\nimport { UpdateClientDto } from \"@modules/clients/dto/update-client.dto\";\nimport { AppService } from \"src/app.service\";\n\n// TODO: Add more tests\n@Injectable()\nexport class ClientsService extends AppService {\n\tconstructor(\n\t\t@InjectModel(Client.name) private clientModel: Model,\n\t) {\n\t\tsuper(clientModel);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfirmAccountClientProps.html":{"url":"interfaces/ConfirmAccountClientProps.html","title":"interface - ConfirmAccountClientProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ConfirmAccountClientProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/providers/mail/helpers/mail.helper.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseProps\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            templateDatas\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        templateDatas\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        templateDatas:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { MailService } from \"@src/providers/mail/mail.service\";\nimport { settings } from \"@constants/settings\";\n\n@Injectable()\nexport class MailHelper {\n\tprivate readonly sender = \"no-reply@NOM.com\";\n\n\tconstructor(private readonly mailService: MailService) {}\n\n\t// Account methods\n\n\t/**\n\t * @description : This method sends a confirmation email to the client\n\t * @param params : ConfirmAccountProps\n\t */\n\tpublic async sendConfirmAccountClient(params: ConfirmAccountClientProps) {\n\t\tconst sendEmail = await this.mailService.sendMail({\n\t\t\tto: params.to,\n\t\t\tsender: params.sender ?? this.sender,\n\t\t\tsubject: \"Welcome to NOM\",\n\t\t\ttemplate: \"./confirmation\",\n\t\t\ttemplateDatas: {\n\t\t\t\tfirstName: params.templateDatas.firstName,\n\t\t\t\turl: `${settings.FRONTEND_URL}auth/confirm/${params.templateDatas.token}`,\n\t\t\t},\n\t\t});\n\n\t\treturn sendEmail;\n\t}\n\n\t/**\n\t * @description : This method sends a confirmation email to the client\n\t * @param params : ConfirmAccountProps\n\t */\n\tpublic async sendConfirmAccountOrganization(params: ConfirmAccountOrganizationProps) {\n\t\tconst sendEmail = await this.mailService.sendMail({\n\t\t\tto: params.to,\n\t\t\tsender: params.sender ?? this.sender,\n\t\t\tsubject: \"Welcome to NOM\",\n\t\t\ttemplate: \"./confirmation\",\n\t\t\ttemplateDatas: {\n\t\t\t\torganizationName: params.templateDatas.organizationName,\n\t\t\t\tuserEmail: params.templateDatas.userEmail,\n\t\t\t\turl: `${settings.FRONTEND_URL}auth/confirm/${params.templateDatas.token}`,\n\t\t\t},\n\t\t});\n\n\t\treturn sendEmail;\n\t}\n\n\tpublic async sendResetPasswordEmail(params: ResetPasswordProps) {\n\t\tconst sendEmail = await this.mailService.sendMail({\n\t\t\tto: params.to,\n\t\t\tsender: params.sender ?? this.sender,\n\t\t\tsubject: \"Reset your password\",\n\t\t\ttemplate: \"./reset-password\",\n\t\t\ttemplateDatas: {\n\t\t\t\turl: `${settings.FRONTEND_URL}auth/reset-password/${params.templateDatas.token}`,\n\t\t\t},\n\t\t});\n\n\t\treturn sendEmail;\n\t}\n\n\tpublic async sendInitPasswordEmail(params: InitPasswordProps) {\n\t\tconst sendEmail = await this.mailService.sendMail({\n\t\t\tto: params.to,\n\t\t\tsender: params.sender ?? this.sender,\n\t\t\tsubject: \"Init your password\",\n\t\t\ttemplate: \"./init-password\",\n\t\t\ttemplateDatas: {\n\t\t\t\turl: `${settings.FRONTEND_URL}auth/init-password/${params.templateDatas.token}`,\n\t\t\t},\n\t\t});\n\n\t\treturn sendEmail;\n\t}\n}\n\ninterface BaseProps {\n\tto: string[];\n\tsender?: string;\n\tsubject?: string;\n\ttemplateDatas?: object;\n}\n\n// Account interfaces\n\n/**\n * @description : This is the interface for the sendConfirmAccountClient method\n */\ninterface ConfirmAccountClientProps extends BaseProps {\n\ttemplateDatas?: {\n\t\tfirstName: string;\n\t\ttoken: string;\n\t};\n}\n\n/**\n * @description : This is the interface for the sendConfirmAccountOrganization method\n */\ninterface ConfirmAccountOrganizationProps extends BaseProps {\n\ttemplateDatas?: {\n\t\torganizationName: string;\n\t\tuserEmail: string;\n\t\ttoken: string;\n\t};\n}\n\n/**\n * @description : This is the interface for the sendResetPasswordEmail method\n */\ninterface ResetPasswordProps extends BaseProps {\n\ttemplateDatas?: {\n\t\ttoken: string;\n\t};\n}\n\n/**\n * @description : This is the interface for the sendResetPasswordEmail method\n */\ninterface InitPasswordProps extends BaseProps {\n\ttemplateDatas?: {\n\t\ttoken: string;\n\t};\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfirmAccountOrganizationProps.html":{"url":"interfaces/ConfirmAccountOrganizationProps.html","title":"interface - ConfirmAccountOrganizationProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ConfirmAccountOrganizationProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/providers/mail/helpers/mail.helper.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseProps\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            templateDatas\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        templateDatas\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        templateDatas:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { MailService } from \"@src/providers/mail/mail.service\";\nimport { settings } from \"@constants/settings\";\n\n@Injectable()\nexport class MailHelper {\n\tprivate readonly sender = \"no-reply@NOM.com\";\n\n\tconstructor(private readonly mailService: MailService) {}\n\n\t// Account methods\n\n\t/**\n\t * @description : This method sends a confirmation email to the client\n\t * @param params : ConfirmAccountProps\n\t */\n\tpublic async sendConfirmAccountClient(params: ConfirmAccountClientProps) {\n\t\tconst sendEmail = await this.mailService.sendMail({\n\t\t\tto: params.to,\n\t\t\tsender: params.sender ?? this.sender,\n\t\t\tsubject: \"Welcome to NOM\",\n\t\t\ttemplate: \"./confirmation\",\n\t\t\ttemplateDatas: {\n\t\t\t\tfirstName: params.templateDatas.firstName,\n\t\t\t\turl: `${settings.FRONTEND_URL}auth/confirm/${params.templateDatas.token}`,\n\t\t\t},\n\t\t});\n\n\t\treturn sendEmail;\n\t}\n\n\t/**\n\t * @description : This method sends a confirmation email to the client\n\t * @param params : ConfirmAccountProps\n\t */\n\tpublic async sendConfirmAccountOrganization(params: ConfirmAccountOrganizationProps) {\n\t\tconst sendEmail = await this.mailService.sendMail({\n\t\t\tto: params.to,\n\t\t\tsender: params.sender ?? this.sender,\n\t\t\tsubject: \"Welcome to NOM\",\n\t\t\ttemplate: \"./confirmation\",\n\t\t\ttemplateDatas: {\n\t\t\t\torganizationName: params.templateDatas.organizationName,\n\t\t\t\tuserEmail: params.templateDatas.userEmail,\n\t\t\t\turl: `${settings.FRONTEND_URL}auth/confirm/${params.templateDatas.token}`,\n\t\t\t},\n\t\t});\n\n\t\treturn sendEmail;\n\t}\n\n\tpublic async sendResetPasswordEmail(params: ResetPasswordProps) {\n\t\tconst sendEmail = await this.mailService.sendMail({\n\t\t\tto: params.to,\n\t\t\tsender: params.sender ?? this.sender,\n\t\t\tsubject: \"Reset your password\",\n\t\t\ttemplate: \"./reset-password\",\n\t\t\ttemplateDatas: {\n\t\t\t\turl: `${settings.FRONTEND_URL}auth/reset-password/${params.templateDatas.token}`,\n\t\t\t},\n\t\t});\n\n\t\treturn sendEmail;\n\t}\n\n\tpublic async sendInitPasswordEmail(params: InitPasswordProps) {\n\t\tconst sendEmail = await this.mailService.sendMail({\n\t\t\tto: params.to,\n\t\t\tsender: params.sender ?? this.sender,\n\t\t\tsubject: \"Init your password\",\n\t\t\ttemplate: \"./init-password\",\n\t\t\ttemplateDatas: {\n\t\t\t\turl: `${settings.FRONTEND_URL}auth/init-password/${params.templateDatas.token}`,\n\t\t\t},\n\t\t});\n\n\t\treturn sendEmail;\n\t}\n}\n\ninterface BaseProps {\n\tto: string[];\n\tsender?: string;\n\tsubject?: string;\n\ttemplateDatas?: object;\n}\n\n// Account interfaces\n\n/**\n * @description : This is the interface for the sendConfirmAccountClient method\n */\ninterface ConfirmAccountClientProps extends BaseProps {\n\ttemplateDatas?: {\n\t\tfirstName: string;\n\t\ttoken: string;\n\t};\n}\n\n/**\n * @description : This is the interface for the sendConfirmAccountOrganization method\n */\ninterface ConfirmAccountOrganizationProps extends BaseProps {\n\ttemplateDatas?: {\n\t\torganizationName: string;\n\t\tuserEmail: string;\n\t\ttoken: string;\n\t};\n}\n\n/**\n * @description : This is the interface for the sendResetPasswordEmail method\n */\ninterface ResetPasswordProps extends BaseProps {\n\ttemplateDatas?: {\n\t\ttoken: string;\n\t};\n}\n\n/**\n * @description : This is the interface for the sendResetPasswordEmail method\n */\ninterface InitPasswordProps extends BaseProps {\n\ttemplateDatas?: {\n\t\ttoken: string;\n\t};\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAuthClientDto.html":{"url":"classes/CreateAuthClientDto.html","title":"class - CreateAuthClientDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAuthClientDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/create-auth-client.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IntersectionType(\n\tDocument,\n\tCreateUserDto,\n\tCreateClientDto,\n)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Document } from \"mongoose\";\nimport { IntersectionType } from \"@nestjs/swagger\";\nimport { CreateUserDto } from \"@modules/users/dto/create-user.dto\";\nimport { CreateClientDto } from \"@modules/clients/dto/create-client.dto\";\n\nexport class CreateAuthClientDto extends IntersectionType(\n\tDocument,\n\tCreateUserDto,\n\tCreateClientDto,\n) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAuthOrganizationDto.html":{"url":"classes/CreateAuthOrganizationDto.html","title":"class - CreateAuthOrganizationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAuthOrganizationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/create-auth-organization.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                bookerEmployee\n                            \n                            \n                                    \n                                organization\n                            \n                            \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        bookerEmployee\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateBookerEmployeeDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/create-auth-organization.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        organization\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateOrganizationDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/create-auth-organization.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateUserDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/create-auth-organization.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateUserDto } from \"@modules/users/dto/create-user.dto\";\nimport { CreateOrganizationDto } from \"@modules/organizations/dto/create-organization.dto\";\nimport { Type } from \"class-transformer\";\nimport { CreateBookerEmployeeDto } from \"@modules/booker-employees/dto/create-booker-employee.dto\";\n\nexport class CreateAuthOrganizationDto {\n\t@Type(() => CreateOrganizationDto)\n\torganization: CreateOrganizationDto;\n\n\t@Type(() => CreateUserDto)\n\tuser: CreateUserDto;\n\n\t@Type(() => CreateBookerEmployeeDto)\n\tbookerEmployee: CreateBookerEmployeeDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateBookerEmployeeDto.html":{"url":"classes/CreateBookerEmployeeDto.html","title":"class - CreateBookerEmployeeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateBookerEmployeeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/booker-employees/dto/create-booker-employee.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                    \n                                    \n                                lastName\n                            \n                            \n                                    \n                                    \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The first name of the employee', example: 'John'})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/booker-employees/dto/create-booker-employee.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The last name of the employee', example: 'Doe'})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/booker-employees/dto/create-booker-employee.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The unique user ID of the employee', example: 'user_12345'})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/booker-employees/dto/create-booker-employee.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString, IsBoolean, IsOptional } from \"class-validator\";\nimport { ApiProperty, ApiPropertyOptional } from \"@nestjs/swagger\";\n\nexport class CreateBookerEmployeeDto {\n\t@ApiProperty({\n\t\tdescription: \"The unique user ID of the employee\",\n\t\texample: \"user_12345\",\n\t})\n\t@IsNotEmpty()\n\t@IsString()\n\tuserId: string;\n\n\t@ApiProperty({\n\t\tdescription: \"The last name of the employee\",\n\t\texample: \"Doe\",\n\t})\n\t@IsNotEmpty()\n\t@IsString()\n\tlastName: string;\n\n\t@ApiProperty({\n\t\tdescription: \"The first name of the employee\",\n\t\texample: \"John\",\n\t})\n\t@IsNotEmpty()\n\t@IsString()\n\tfirstName: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateClientDto.html":{"url":"classes/CreateClientDto.html","title":"class - CreateClientDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateClientDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/clients/dto/create-client.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                address1\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                address2\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                city\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                country\n                            \n                            \n                                    \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                    \n                                    \n                                lastName\n                            \n                            \n                                    \n                                    \n                                    \n                                notificationEmail\n                            \n                            \n                                    \n                                    \n                                    \n                                notificationSms\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                postalCode\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        address1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The address1 of the client'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/clients/dto/create-client.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        address2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The address2 of the client'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/clients/dto/create-client.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The city of the client'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/clients/dto/create-client.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The country of the client'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/clients/dto/create-client.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The first name of the client'})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/clients/dto/create-client.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The last name of the client'})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/clients/dto/create-client.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        notificationEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The client want email notifications'})@IsNotEmpty()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/clients/dto/create-client.dto.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        notificationSms\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The client want sms notifications'})@IsNotEmpty()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/clients/dto/create-client.dto.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        postalCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The postal code of the client'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/clients/dto/create-client.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/clients/dto/create-client.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CustomFieldValueDto } from \"@dtos/custom-field-value.dto\";\nimport { Type } from \"class-transformer\";\nimport { IsNotEmpty, IsString, IsOptional, IsBoolean } from \"class-validator\";\nimport { ApiProperty } from \"@nestjs/swagger\";\n\nexport class CreateClientDto {\n\t@IsOptional()\n\t@IsString()\n\tuserId?: string;\n\n\t@ApiProperty({ description: \"The first name of the client\" })\n\t@IsNotEmpty()\n\t@IsString()\n\tfirstName: string;\n\n\t@ApiProperty({ description: \"The last name of the client\" })\n\t@IsNotEmpty()\n\t@IsString()\n\tlastName: string;\n\n\t@ApiProperty({ description: \"The address1 of the client\" })\n\t@IsOptional()\n\t@IsString()\n\taddress1?: string;\n\n\t@ApiProperty({ description: \"The address2 of the client\" })\n\t@IsOptional()\n\t@IsString()\n\taddress2?: string;\n\n\t@ApiProperty({ description: \"The postal code of the client\" })\n\t@IsOptional()\n\t@IsString()\n\tpostalCode?: string;\n\n\t@ApiProperty({ description: \"The city of the client\" })\n\t@IsOptional()\n\t@IsString()\n\tcity?: string;\n\n\t@ApiProperty({ description: \"The country of the client\" })\n\t@IsOptional()\n\t@IsString()\n\tcountry?: string;\n\n\t@ApiProperty({ description: \"The client want email notifications\" })\n\t@IsNotEmpty()\n\t@IsBoolean()\n\tnotificationEmail: boolean;\n\n\t@ApiProperty({ description: \"The client want sms notifications\" })\n\t@IsNotEmpty()\n\t@IsBoolean()\n\tnotificationSms: boolean;\n\n\t// @ApiProperty({ description: \"The company ID of the Company\" })\n\t// @IsString()\n\t// @IsNotEmpty()\n\t// companyId: string;\n\n\t// @ApiPropertyOptional({\n\t// \tdescription: \"The custom field values of the client\",\n\t// \ttype: CustomFieldValueDto,\n\t// })\n\t// @IsOptional()\n\t// @IsObject()\n\t// @ValidateNested({ each: true })\n\t// @Type(() => CustomFieldValueDto)\n\t// customFieldValues?: CustomFieldValueDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateEmployeeDto.html":{"url":"classes/CreateEmployeeDto.html","title":"class - CreateEmployeeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateEmployeeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/employees/dto/create-employee.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                    \n                                    \n                                lastName\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                notificationEmail\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                notificationSms\n                            \n                            \n                                    \n                                    \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The first name of the employee', example: 'John'})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/employees/dto/create-employee.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The last name of the employee', example: 'Doe'})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/employees/dto/create-employee.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        notificationEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Indicates if the employee wants email notifications', example: true})@IsOptional()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/employees/dto/create-employee.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        notificationSms\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Indicates if the employee wants SMS notifications', example: false})@IsOptional()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/employees/dto/create-employee.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The unique user ID of the employee', example: 'user_12345'})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/employees/dto/create-employee.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString, IsBoolean, IsOptional } from \"class-validator\";\nimport { ApiProperty } from \"@nestjs/swagger\";\n\nexport class CreateEmployeeDto {\n\t@ApiProperty({\n\t\tdescription: \"The unique user ID of the employee\",\n\t\texample: \"user_12345\",\n\t})\n\t@IsNotEmpty()\n\t@IsString()\n\tuserId: string;\n\n\t@ApiProperty({\n\t\tdescription: \"The last name of the employee\",\n\t\texample: \"Doe\",\n\t})\n\t@IsNotEmpty()\n\t@IsString()\n\tlastName: string;\n\n\t@ApiProperty({\n\t\tdescription: \"The first name of the employee\",\n\t\texample: \"John\",\n\t})\n\t@IsNotEmpty()\n\t@IsString()\n\tfirstName: string;\n\n\t@ApiProperty({\n\t\tdescription: \"Indicates if the employee wants email notifications\",\n\t\texample: true,\n\t})\n\t@IsOptional()\n\t@IsBoolean()\n\tnotificationEmail?: boolean;\n\n\t@ApiProperty({\n\t\tdescription: \"Indicates if the employee wants SMS notifications\",\n\t\texample: false,\n\t})\n\t@IsOptional()\n\t@IsBoolean()\n\tnotificationSms?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateEstablishmentDto.html":{"url":"classes/CreateEstablishmentDto.html","title":"class - CreateEstablishmentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateEstablishmentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/establishments/dto/create-establishment.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                address1\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                address2\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                city\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                country\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                logo\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                organizationId\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                phone\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                postalCode\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                website\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        address1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The first address of the establishment', example: '456 Main Street'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/establishments/dto/create-establishment.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        address2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The second address of the establishment', example: 'Floor 2'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/establishments/dto/create-establishment.dto.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The city of the establishment', example: 'Barberville'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/establishments/dto/create-establishment.dto.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The country of the establishment', example: 'USA'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/establishments/dto/create-establishment.dto.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The description of the establishment', example: 'A cozy barber shop located in the heart of the city.'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/establishments/dto/create-establishment.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The logo of the establishment', example: 'https://example.com/establishment-logo.png'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/establishments/dto/create-establishment.dto.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The name of the establishment', example: 'Main Street Barber Shop'})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/establishments/dto/create-establishment.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        organizationId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The organization ID associated with the establishment', example: 'organization_001'})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/establishments/dto/create-establishment.dto.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The phone number of the establishment', example: '+1234567890'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/establishments/dto/create-establishment.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        postalCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The postal code of the establishment', example: '67890'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/establishments/dto/create-establishment.dto.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        website\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The website of the establishment', example: 'https://mainstreetbarbers.com'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/establishments/dto/create-establishment.dto.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString, IsOptional } from \"class-validator\";\nimport { ApiProperty } from \"@nestjs/swagger\";\n\nexport class CreateEstablishmentDto {\n\t@ApiProperty({\n\t\tdescription: \"The name of the establishment\",\n\t\texample: \"Main Street Barber Shop\",\n\t})\n\t@IsNotEmpty()\n\t@IsString()\n\tname: string;\n\n\t@ApiProperty({\n\t\tdescription: \"The description of the establishment\",\n\t\texample: \"A cozy barber shop located in the heart of the city.\",\n\t})\n\t@IsOptional()\n\t@IsString()\n\tdescription?: string;\n\n\t@ApiProperty({\n\t\tdescription: \"The website of the establishment\",\n\t\texample: \"https://mainstreetbarbers.com\",\n\t})\n\t@IsOptional()\n\t@IsString()\n\twebsite?: string;\n\n\t@ApiProperty({\n\t\tdescription: \"The phone number of the establishment\",\n\t\texample: \"+1234567890\",\n\t})\n\t@IsOptional()\n\t@IsString()\n\tphone?: string;\n\n\t@ApiProperty({\n\t\tdescription: \"The first address of the establishment\",\n\t\texample: \"456 Main Street\",\n\t})\n\t@IsOptional()\n\t@IsString()\n\taddress1?: string;\n\n\t@ApiProperty({\n\t\tdescription: \"The second address of the establishment\",\n\t\texample: \"Floor 2\",\n\t})\n\t@IsOptional()\n\t@IsString()\n\taddress2?: string;\n\n\t@ApiProperty({\n\t\tdescription: \"The postal code of the establishment\",\n\t\texample: \"67890\",\n\t})\n\t@IsOptional()\n\t@IsString()\n\tpostalCode?: string;\n\n\t@ApiProperty({\n\t\tdescription: \"The city of the establishment\",\n\t\texample: \"Barberville\",\n\t})\n\t@IsOptional()\n\t@IsString()\n\tcity?: string;\n\n\t@ApiProperty({\n\t\tdescription: \"The country of the establishment\",\n\t\texample: \"USA\",\n\t})\n\t@IsOptional()\n\t@IsString()\n\tcountry?: string;\n\n\t@ApiProperty({\n\t\tdescription: \"The logo of the establishment\",\n\t\texample: \"https://example.com/establishment-logo.png\",\n\t})\n\t@IsOptional()\n\t@IsString()\n\tlogo?: string;\n\n\t@ApiProperty({\n\t\tdescription: \"The organization ID associated with the establishment\",\n\t\texample: \"organization_001\",\n\t})\n\t@IsNotEmpty()\n\t@IsString()\n\torganizationId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateLogDto.html":{"url":"classes/CreateLogDto.html","title":"class - CreateLogDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateLogDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/logs/dto/create-log.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                context\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                firstName\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                ip\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                lastName\n                            \n                            \n                                    \n                                    \n                                    \n                                level\n                            \n                            \n                                    \n                                    \n                                    \n                                message\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                metadata\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The context of the log (e.g., UserService)', example: 'UserService'})@IsNotEmpty({message: 'Log context is required'})@IsString({message: 'Log context must be a string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/logs/dto/create-log.dto.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The first name of the user', example: 'John'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/logs/dto/create-log.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        ip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The IP address of the user who generated the log', example: '123.45.6.7'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/logs/dto/create-log.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The last name of the user', example: 'Doe'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/logs/dto/create-log.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LogLevelEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The log level (e.g., info, error)', example: 'info'})@IsNotEmpty({message: 'Log level is required'})@IsEnum(LogLevelEnum, {message: 'Invalid log level'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/logs/dto/create-log.dto.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The log message', example: 'User created successfully'})@IsNotEmpty({message: 'Log message is required'})@IsString({message: 'Log message must be a string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/logs/dto/create-log.dto.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Additional metadata for the log', example: '{ ip: '192.168.1.1' }'})@IsOptional()@IsObject({message: 'Metadata must be an object'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/logs/dto/create-log.dto.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The ID of the user who generated the log', example: '12345'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/logs/dto/create-log.dto.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n    IsNotEmpty,\n    IsString,\n    IsObject,\n    IsOptional,\n    IsEnum\n} from \"class-validator\";\n\nimport { ApiProperty } from \"@nestjs/swagger\";\nimport { LogLevelEnum } from \"@enums/log-level.enum\";\n\nexport class CreateLogDto {\n    @ApiProperty({\n        description: \"The IP address of the user who generated the log\",\n        example: \"123.45.6.7\"\n    })\n    @IsOptional()\n    @IsString()\n    ip?: string;\n    \n    @ApiProperty({\n        description: \"The ID of the user who generated the log\",\n        example: \"12345\"\n    })\n    @IsOptional()\n    @IsString()\n    userId?: string;\n\n    @ApiProperty({\n        description: \"The first name of the user\",\n        example: \"John\"\n    })\n    @IsOptional()\n    @IsString()\n    firstName?: string;\n\n    @ApiProperty({\n        description: \"The last name of the user\",\n        example: \"Doe\"\n    })\n    @IsOptional()\n    @IsString()\n    lastName?: string;\n\n    @ApiProperty({\n        description: \"The log level (e.g., info, error)\",\n        example: \"info\"\n    })\n    @IsNotEmpty({ message: \"Log level is required\" })\n    @IsEnum(LogLevelEnum, { message: \"Invalid log level\" })\n    level: LogLevelEnum;\n\n    @ApiProperty({\n        description: \"The log message\",\n        example: \"User created successfully\"\n    })\n    @IsNotEmpty({ message: \"Log message is required\" })\n    @IsString({ message: \"Log message must be a string\" })\n    message: string;\n\n    @ApiProperty({\n        description: \"The context of the log (e.g., UserService)\",\n        example: \"UserService\"\n    })\n    @IsNotEmpty({ message: \"Log context is required\" })\n    @IsString({ message: \"Log context must be a string\" })\n    context: string;\n\n    @ApiProperty({\n        description: \"Additional metadata for the log\",\n        example: \"{ ip: '192.168.1.1' }\"\n    })\n    @IsOptional()\n    @IsObject({ message: \"Metadata must be an object\" })\n    metadata?: object;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrganizationDto.html":{"url":"classes/CreateOrganizationDto.html","title":"class - CreateOrganizationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrganizationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/organizations/dto/create-organization.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                address1\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                address2\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                city\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                country\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                logo\n                            \n                            \n                                    \n                                    \n                                    \n                                managerId\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                postalCode\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                stripePlanId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        address1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The first address of the organization', example: '123 Innovation Street'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/organizations/dto/create-organization.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        address2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The second address of the organization', example: 'Suite 100'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/organizations/dto/create-organization.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The city of the organization', example: 'Techville'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/organizations/dto/create-organization.dto.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The country of the organization', example: 'USA'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/organizations/dto/create-organization.dto.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The description of the organization', example: 'A leading company in technology innovations.'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/organizations/dto/create-organization.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The logo of the organization', example: 'https://example.com/logo.png'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/organizations/dto/create-organization.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        managerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The manager ID of the organization', example: 'manager_001'})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/organizations/dto/create-organization.dto.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The name of the organization', example: 'Tech Innovators Inc.'})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/organizations/dto/create-organization.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        postalCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The postal code of the organization', example: '12345'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/organizations/dto/create-organization.dto.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        stripePlanId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The Stripe plan ID associated with the organization', example: 'plan_123abc'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/organizations/dto/create-organization.dto.ts:75\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString, IsOptional } from \"class-validator\";\nimport { ApiProperty } from \"@nestjs/swagger\";\n\nexport class CreateOrganizationDto {\n\t@ApiProperty({\n\t\tdescription: \"The name of the organization\",\n\t\texample: \"Tech Innovators Inc.\",\n\t})\n\t@IsNotEmpty()\n\t@IsString()\n\tname: string;\n\n\t@ApiProperty({\n\t\tdescription: \"The description of the organization\",\n\t\texample: \"A leading company in technology innovations.\",\n\t})\n\t@IsOptional()\n\t@IsString()\n\tdescription?: string;\n\n\t@ApiProperty({\n\t\tdescription: \"The logo of the organization\",\n\t\texample: \"https://example.com/logo.png\",\n\t})\n\t@IsOptional()\n\t@IsString()\n\tlogo?: string;\n\n\t@ApiProperty({\n\t\tdescription: \"The first address of the organization\",\n\t\texample: \"123 Innovation Street\",\n\t})\n\t@IsOptional()\n\t@IsString()\n\taddress1?: string;\n\n\t@ApiProperty({\n\t\tdescription: \"The second address of the organization\",\n\t\texample: \"Suite 100\",\n\t})\n\t@IsOptional()\n\t@IsString()\n\taddress2?: string;\n\n\t@ApiProperty({\n\t\tdescription: \"The postal code of the organization\",\n\t\texample: \"12345\",\n\t})\n\t@IsOptional()\n\t@IsString()\n\tpostalCode?: string;\n\n\t@ApiProperty({\n\t\tdescription: \"The city of the organization\",\n\t\texample: \"Techville\",\n\t})\n\t@IsOptional()\n\t@IsString()\n\tcity?: string;\n\n\t@ApiProperty({\n\t\tdescription: \"The country of the organization\",\n\t\texample: \"USA\",\n\t})\n\t@IsOptional()\n\t@IsString()\n\tcountry?: string;\n\n\t@ApiProperty({\n\t\tdescription: \"The Stripe plan ID associated with the organization\",\n\t\texample: \"plan_123abc\",\n\t})\n\t@IsOptional()\n\t@IsString()\n\tstripePlanId?: string;\n\n\t@ApiProperty({\n\t\tdescription: \"The manager ID of the organization\",\n\t\texample: \"manager_001\",\n\t})\n\t@IsNotEmpty()\n\t@IsString()\n\tmanagerId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePlanDto.html":{"url":"classes/CreatePlanDto.html","title":"class - CreatePlanDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePlanDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/plans/dto/create-plan.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                active\n                            \n                            \n                                    \n                                    \n                                    \n                                amount\n                            \n                            \n                                    \n                                    \n                                    \n                                currency\n                            \n                            \n                                    \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                interval\n                            \n                            \n                                    \n                                    \n                                    \n                                intervalCount\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                trialPeriodDays\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Indicates if the plan is currently active', example: true})@IsNotEmpty()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/plans/dto/create-plan.dto.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The amount to be charged for the plan', example: 999})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/plans/dto/create-plan.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The currency in which the plan is charged', example: 'USD'})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/plans/dto/create-plan.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The description of the plan', example: 'Access to all premium features with priority support.'})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/plans/dto/create-plan.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        interval\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The billing interval for the plan (e.g., month, year)', example: 'month'})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/plans/dto/create-plan.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        intervalCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The number of intervals between each billing', example: 1})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/plans/dto/create-plan.dto.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The name of the plan', example: 'Premium Plan'})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/plans/dto/create-plan.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        trialPeriodDays\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The number of trial period days before the plan starts billing', example: 14})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/plans/dto/create-plan.dto.ts:60\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString, IsNumber, IsBoolean } from \"class-validator\";\nimport { ApiProperty } from \"@nestjs/swagger\";\n\nexport class CreatePlanDto {\n\t@ApiProperty({\n\t\tdescription: \"The name of the plan\",\n\t\texample: \"Premium Plan\",\n\t})\n\t@IsNotEmpty()\n\t@IsString()\n\tname: string;\n\n\t@ApiProperty({\n\t\tdescription: \"The description of the plan\",\n\t\texample: \"Access to all premium features with priority support.\",\n\t})\n\t@IsNotEmpty()\n\t@IsString()\n\tdescription: string;\n\n\t@ApiProperty({\n\t\tdescription: \"The amount to be charged for the plan\",\n\t\texample: 999,\n\t})\n\t@IsNotEmpty()\n\t@IsNumber()\n\tamount: number;\n\n\t@ApiProperty({\n\t\tdescription: \"The currency in which the plan is charged\",\n\t\texample: \"USD\",\n\t})\n\t@IsNotEmpty()\n\t@IsString()\n\tcurrency: string;\n\n\t@ApiProperty({\n\t\tdescription: \"The billing interval for the plan (e.g., month, year)\",\n\t\texample: \"month\",\n\t})\n\t@IsNotEmpty()\n\t@IsString()\n\tinterval: string;\n\n\t@ApiProperty({\n\t\tdescription: \"The number of intervals between each billing\",\n\t\texample: 1,\n\t})\n\t@IsNotEmpty()\n\t@IsNumber()\n\tintervalCount: number;\n\n\t@ApiProperty({\n\t\tdescription:\n\t\t\t\"The number of trial period days before the plan starts billing\",\n\t\texample: 14,\n\t})\n\t@IsNotEmpty()\n\t@IsNumber()\n\ttrialPeriodDays: number;\n\n\t@ApiProperty({\n\t\tdescription: \"Indicates if the plan is currently active\",\n\t\texample: true,\n\t})\n\t@IsNotEmpty()\n\t@IsBoolean()\n\tactive: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePlanPriceDto.html":{"url":"classes/CreatePlanPriceDto.html","title":"class - CreatePlanPriceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePlanPriceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/plan-prices/dto/create-plan-price.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                active\n                            \n                            \n                                    \n                                    \n                                    \n                                amount\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                createdAt\n                            \n                            \n                                    \n                                    \n                                currency\n                            \n                            \n                                    \n                                    \n                                interval\n                            \n                            \n                                    \n                                    \n                                intervalCount\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                trialPeriodDays\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Indicates whether the plan price is active', example: true, default: true, required: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/plan-prices/dto/create-plan-price.dto.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Amount to be charged for the plan price (in the smallest currency unit)', example: 1000, minimum: 0, required: true})@IsNumber()@Min(0)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/plan-prices/dto/create-plan-price.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Date when the plan price was created', example: '2023-08-30T12:00:00Z', format: 'date-time'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/plan-prices/dto/create-plan-price.dto.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Currency for the plan price', example: 'usd', enum: CurrencyEnum, required: true})@IsEnum(CurrencyEnum)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/plan-prices/dto/create-plan-price.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        interval\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Billing interval for the plan price', example: 'month', enum: IntervalEnum, required: true})@IsEnum(IntervalEnum)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/plan-prices/dto/create-plan-price.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        intervalCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The number of intervals between each billing cycle', example: 1, required: true})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/plan-prices/dto/create-plan-price.dto.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Name of the plan price', example: 'Basic Plan', minLength: 3, maxLength: 50, required: true})@IsString()@MinLength(3)@MaxLength(50)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/plan-prices/dto/create-plan-price.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        trialPeriodDays\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Number of trial period days offered with the plan', example: 14, required: true})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/plan-prices/dto/create-plan-price.dto.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Date when the plan price was last updated', example: '2023-08-30T12:00:00Z', format: 'date-time'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/plan-prices/dto/create-plan-price.dto.ts:86\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsString, IsNumber, IsEnum, IsBoolean, IsOptional, MinLength, MaxLength, Min } from 'class-validator';\nimport { CurrencyEnum } from '@enums/currency.enum';\nimport { IntervalEnum } from '@enums/interval.enum';\n\nexport class CreatePlanPriceDto {\n  @ApiProperty({\n    description: 'Name of the plan price',\n    example: 'Basic Plan',\n    minLength: 3,\n    maxLength: 50,\n    required: true,\n  })\n  @IsString()\n  @MinLength(3)\n  @MaxLength(50)\n  name: string;\n\n  @ApiProperty({\n    description: 'Amount to be charged for the plan price (in the smallest currency unit)',\n    example: 1000,\n    minimum: 0,\n    required: true,\n  })\n  @IsNumber()\n  @Min(0)\n  amount: number;\n\n  @ApiProperty({\n    description: 'Currency for the plan price',\n    example: 'usd',\n    enum: CurrencyEnum,\n    required: true,\n  })\n  @IsEnum(CurrencyEnum)\n  currency: string;\n\n  @ApiProperty({\n    description: 'Billing interval for the plan price',\n    example: 'month',\n    enum: IntervalEnum,\n    required: true,\n  })\n  @IsEnum(IntervalEnum)\n  interval: string;\n\n  @ApiProperty({\n    description: 'The number of intervals between each billing cycle',\n    example: 1,\n    required: true,\n  })\n  @IsNumber()\n  intervalCount: number;\n\n  @ApiProperty({\n    description: 'Number of trial period days offered with the plan',\n    example: 14,\n    required: true,\n  })\n  @IsNumber()\n  trialPeriodDays: number;\n\n  @ApiProperty({\n    description: 'Indicates whether the plan price is active',\n    example: true,\n    default: true,\n    required: true,\n  })\n  @IsBoolean()\n  active: boolean;\n\n  @ApiPropertyOptional({\n    description: 'Date when the plan price was created',\n    example: '2023-08-30T12:00:00Z',\n    format: 'date-time',\n  })\n  @IsOptional()\n  createdAt?: Date;\n\n  @ApiPropertyOptional({\n    description: 'Date when the plan price was last updated',\n    example: '2023-08-30T12:00:00Z',\n    format: 'date-time',\n  })\n  @IsOptional()\n  updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePromoCodeDto.html":{"url":"classes/CreatePromoCodeDto.html","title":"class - CreatePromoCodeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePromoCodeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/promo-codes/dto/create-promo-code.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsOptional } from \"class-validator\";\n\nimport { ApiProperty, ApiPropertyOptional } from \"@nestjs/swagger\";\n\nexport class CreatePromoCodeDto {\n\t// PROPERTIES\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSubscriptionDto.html":{"url":"classes/CreateSubscriptionDto.html","title":"class - CreateSubscriptionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSubscriptionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/subscriptions/dto/create-subscription.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsOptional } from \"class-validator\";\n\nimport { ApiProperty, ApiPropertyOptional } from \"@nestjs/swagger\";\n\nexport class CreateSubscriptionDto {\n\t// PROPERTIES\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTeamDto.html":{"url":"classes/CreateTeamDto.html","title":"class - CreateTeamDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTeamDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/teams/dto/create-team.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsOptional } from \"class-validator\";\n\nimport { ApiProperty, ApiPropertyOptional } from \"@nestjs/swagger\";\n\nexport class CreateTeamDto {\n\t// PROPERTIES\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                phone\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                role\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The email of the user'})@IsNotEmpty()@Matches(Regex.email, {message: 'Email does not match the required pattern'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-user.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The password of the user'})@IsNotEmpty()@Matches(Regex.password)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-user.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The phone number of the user'})@IsOptional()@Matches(Regex.phone)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-user.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'The role of the user', enum: UserRoleEnum})@IsOptional()@IsEnum(UserRoleEnum)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-user.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserStatusEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'The status of the user', enum: UserStatusEnum})@IsOptional()@IsAlpha()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-user.dto.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n\tIsAlpha,\n\tIsEnum,\n\tIsNotEmpty,\n\tIsOptional,\n\tMatches,\n} from \"class-validator\";\nimport { ApiProperty, ApiPropertyOptional } from \"@nestjs/swagger\";\nimport Regex from \"@constants/regex\";\nimport { UserStatusEnum } from \"@enums/user-status.enum\";\nimport { UserRoleEnum } from \"@enums/user-role.enum\";\n\nexport class CreateUserDto {\n\t@ApiProperty({ description: \"The email of the user\" })\n\t@IsNotEmpty()\n\t@Matches(Regex.email, {\n\t\tmessage: \"Email does not match the required pattern\",\n\t})\n\temail: string;\n\n\t@ApiProperty({ description: \"The phone number of the user\" })\n\t@IsOptional()\n\t@Matches(Regex.phone)\n\tphone?: string;\n\n\t@ApiProperty({ description: \"The password of the user\" })\n\t@IsNotEmpty()\n\t@Matches(Regex.password)\n\tpassword: string;\n\n\t@ApiPropertyOptional({\n\t\tdescription: \"The status of the user\",\n\t\tenum: UserStatusEnum,\n\t})\n\t@IsOptional()\n\t@IsAlpha()\n\tstatus?: UserStatusEnum[];\n\n\t@ApiPropertyOptional({\n\t\tdescription: \"The role of the user\",\n\t\tenum: UserRoleEnum,\n\t})\n\t@IsOptional()\n\t@IsEnum(UserRoleEnum)\n\trole?: UserRoleEnum;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomFieldDto.html":{"url":"classes/CustomFieldDto.html","title":"class - CustomFieldDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomFieldDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dtos/custom-field.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                position\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                            \n                                    \n                                    Optional\n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/custom-field.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        position\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/custom-field.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/custom-field.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/custom-field.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n\tIsString,\n\tIsNotEmpty,\n\tIsOptional,\n\tIsObject,\n\tIsArray,\n\tValidateNested,\n\tIsDate,\n\tIsNumber,\n} from \"class-validator\";\nimport { Type } from \"class-transformer\";\n\nexport class CustomFieldDto {\n\t@IsString()\n\t@IsNotEmpty()\n\tname: string;\n\n\t@IsString()\n\t@IsNotEmpty()\n\ttype: string;\n\n\t@IsOptional()\n\tvalue?: any;\n\n\t@IsString()\n\t@IsOptional()\n\tposition?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomFieldValueDto.html":{"url":"classes/CustomFieldValueDto.html","title":"class - CustomFieldValueDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomFieldValueDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dtos/custom-field-value.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                customFieldId\n                            \n                            \n                                    \n                                    Optional\n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        customFieldId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/custom-field-value.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/custom-field-value.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n\tIsString,\n\tIsNotEmpty,\n\tIsOptional,\n\tIsObject,\n\tIsArray,\n\tValidateNested,\n\tIsDate,\n\tIsNumber,\n} from \"class-validator\";\nimport { Type } from \"class-transformer\";\n\nexport class CustomFieldValueDto {\n\t@IsString()\n\t@IsNotEmpty()\n\tcustomFieldId: string;\n\n\t@IsOptional()\n\tvalue?: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomValidationPipe.html":{"url":"injectables/CustomValidationPipe.html","title":"injectable - CustomValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CustomValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/pipes/custom-validation.pipe.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ValidationPipe\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        transform\n                        \n                    \n                \n            \n            \n                \n                        \n                    transform(value: any, metadata: ArgumentMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/pipes/custom-validation.pipe.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                metadata\n                                            \n                                                        ArgumentMetadata\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n\tArgumentMetadata,\n\tBadRequestException,\n\tInjectable,\n\tUnprocessableEntityException,\n} from \"@nestjs/common\";\nimport { ValidationPipe } from \"@nestjs/common\";\n\n@Injectable()\nexport class CustomValidationPipe extends ValidationPipe {\n\tasync transform(value: any, metadata: ArgumentMetadata) {\n\t\ttry {\n\t\t\treturn await super.transform(value, metadata);\n\t\t} catch (error) {\n\t\t\tif (error instanceof BadRequestException) {\n\t\t\t\tconst errors = (error.getResponse() as any).message;\n\t\t\t\tthrow new UnprocessableEntityException(errors);\n\t\t\t}\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Employee.html":{"url":"classes/Employee.html","title":"class - Employee","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Employee\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/employees/entities/employee.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    \n                                firstName\n                            \n                            \n                                    \n                                lastName\n                            \n                            \n                                    \n                                notificationEmail\n                            \n                            \n                                    \n                                notificationSms\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/employees/entities/employee.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/employees/entities/employee.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/employees/entities/employee.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        notificationEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/employees/entities/employee.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        notificationSms\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/employees/entities/employee.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/employees/entities/employee.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/employees/entities/employee.entity.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Schema, Prop, SchemaFactory } from \"@nestjs/mongoose\";\nimport { Document } from \"mongoose\";\n\nexport type EmployeeDocument = Employee & Document;\n\n@Schema({\n\ttimestamps: true,\n})\nexport class Employee {\n\t@Prop({ required: true, unique: true })\n\tuserId: string;\n\n\t@Prop({ required: true })\n\tlastName: string;\n\n\t@Prop({ required: true })\n\tfirstName: string;\n\n\t@Prop()\n\tnotificationEmail: boolean;\n\n\t@Prop()\n\tnotificationSms: boolean;\n\n\tcreatedAt?: Date;\n\tupdatedAt?: Date;\n}\n\nexport const EmployeeSchema = SchemaFactory.createForClass(Employee);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/EmployeesController.html":{"url":"controllers/EmployeesController.html","title":"controller - EmployeesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  EmployeesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/employees/employees.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                employees\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createDto: CreateDto, res: Response, req: Request, ip: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Inherited from         AppController\n\n                        \n                    \n                    \n                        \n                                Defined in         AppController:41\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDto\n                                            \n                                                        CreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(res: Response, req: Request, ip: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Inherited from         AppController\n\n                        \n                    \n                    \n                        \n                                Defined in         AppController:123\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string, res: Response, req: Request, ip: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Inherited from         AppController\n\n                        \n                    \n                    \n                        \n                                Defined in         AppController:193\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, res: Response, req: Request, ip: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Inherited from         AppController\n\n                        \n                    \n                    \n                        \n                                Defined in         AppController:338\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateDto: UpdateDto, res: Response, req: Request, ip: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n                    \n                        \n                            Inherited from         AppController\n\n                        \n                    \n                    \n                        \n                                Defined in         AppController:265\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDto\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from \"@nestjs/common\";\nimport { EmployeesService } from \"@modules/employees/employees.service\";\nimport { CreateEmployeeDto } from \"@modules/employees/dto/create-employee.dto\";\nimport { UpdateEmployeeDto } from \"@modules/employees/dto/update-employee.dto\";\nimport { EmployeeDocument } from \"@modules/employees/entities/employee.entity\";\nimport { AppController } from \"src/app.controller\";\nimport {\n\tApiTags,\n\tApiOperation,\n\tApiResponse,\n\tApiBearerAuth,\n} from \"@nestjs/swagger\";\nimport { Response } from \"express\";\nimport { LogHelper } from \"@helpers/log.helper\";\nimport { Connection } from \"mongoose\";\n\n@ApiTags(\"employees\")\n@Controller(\"employees\")\nexport class EmployeesController extends AppController {\n\tconstructor(\n\t\tprivate readonly employeesService: EmployeesService,\n\t\tlogHelper: LogHelper,\n\t\tconnection: Connection,\n\t) {\n\t\tsuper(employeesService, \"employees\", connection, logHelper);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EmployeesModule.html":{"url":"modules/EmployeesModule.html","title":"module - EmployeesModule","body":"\n                   \n\n\n\n\n    Modules\n    EmployeesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EmployeesModule\n\n\n\ncluster_EmployeesModule_providers\n\n\n\n\nEmployeesService\n\nEmployeesService\n\n\n\nEmployeesModule\n\nEmployeesModule\n\nEmployeesModule -->\n\nEmployeesService->EmployeesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/employees/employees.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            EmployeesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            EmployeesController\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/employees/employees.module.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                consumer\n                                            \n                                                        MiddlewareConsumer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, MiddlewareConsumer } from \"@nestjs/common\";\nimport { AuthMiddleware } from \"@middlewares/auth.middleware\";\nimport { EmployeesController } from \"@modules/employees/employees.controller\";\nimport { EmployeesService } from \"@modules/employees/employees.service\";\n\n@Module({\n\timports: [],\n\tcontrollers: [EmployeesController],\n\tproviders: [EmployeesService],\n\texports: [],\n})\nexport class EmployeesModule {\n\tconfigure(consumer: MiddlewareConsumer) {\n\t\tconsumer.apply(AuthMiddleware).forRoutes(EmployeesController);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EmployeesService.html":{"url":"injectables/EmployeesService.html","title":"injectable - EmployeesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EmployeesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/employees/employees.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AppService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findWhere\n                            \n                            \n                                    Protected\n                                    Async\n                                populateModel\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updateMany\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(employeesModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/employees/employees.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        employeesModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createDto: CreateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:15\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDto\n                                            \n                                                        CreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:26\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:30\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findWhere\n                        \n                    \n                \n            \n            \n                \n                        \n                    findWhere(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:55\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        populateModel\n                        \n                    \n                \n            \n            \n                \n                        \n                    populateModel(model: AppModel)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:84\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                        AppModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:51\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateDto: UpdateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:38\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDto\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateMany\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateMany(where: object, updateDto: UpdateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:75\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                where\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDto\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { Model } from \"mongoose\";\nimport { CreateEmployeeDto } from \"@modules/employees/dto/create-employee.dto\";\nimport { UpdateEmployeeDto } from \"@modules/employees/dto/update-employee.dto\";\nimport {\n\tEmployee,\n\tEmployeeDocument,\n} from \"@modules/employees/entities/employee.entity\";\nimport { AppService } from \"src/app.service\";\n\n@Injectable()\nexport class EmployeesService extends AppService {\n\tconstructor(\n\t\t@InjectModel(Employee.name)\n\t\tprivate employeesModel: Model,\n\t) {\n\t\tsuper(employeesModel);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Establishment.html":{"url":"classes/Establishment.html","title":"class - Establishment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Establishment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/establishments/entities/establishment.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                address1\n                            \n                            \n                                    \n                                    Optional\n                                address2\n                            \n                            \n                                    \n                                    Optional\n                                city\n                            \n                            \n                                    \n                                    Optional\n                                country\n                            \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    Optional\n                                logo\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                organizationId\n                            \n                            \n                                    \n                                    Optional\n                                phone\n                            \n                            \n                                    \n                                    Optional\n                                postalCode\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    \n                                    Optional\n                                website\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        address1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/establishments/entities/establishment.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        address2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/establishments/entities/establishment.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/establishments/entities/establishment.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/establishments/entities/establishment.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/establishments/entities/establishment.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/establishments/entities/establishment.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/establishments/entities/establishment.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/establishments/entities/establishment.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        organizationId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/establishments/entities/establishment.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/establishments/entities/establishment.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        postalCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/establishments/entities/establishment.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/establishments/entities/establishment.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        website\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/establishments/entities/establishment.entity.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Schema, Prop, SchemaFactory } from \"@nestjs/mongoose\";\nimport { Document } from \"mongoose\";\n\nexport type EstablishmentDocument = Establishment & Document;\n\n@Schema({\n\ttimestamps: true,\n})\nexport class Establishment {\n\t@Prop({ required: true })\n\tname: string;\n\n\t@Prop()\n\tdescription?: string;\n\n\t@Prop()\n\twebsite?: string;\n\n\t@Prop()\n\tphone?: string;\n\n\t@Prop({ default: null })\n\taddress1?: string;\n\n\t@Prop({ default: null })\n\taddress2?: string;\n\n\t@Prop()\n\tpostalCode?: string;\n\n\t@Prop({ default: null })\n\tcity?: string;\n\n\t@Prop({ default: null })\n\tcountry?: string;\n\n\t@Prop()\n\tlogo?: string;\n\n\t@Prop({ required: true })\n\torganizationId: string;\n\n\tcreatedAt?: Date;\n\tupdatedAt?: Date;\n}\n\nexport const EstablishmentSchema = SchemaFactory.createForClass(Establishment);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/EstablishmentsController.html":{"url":"controllers/EstablishmentsController.html","title":"controller - EstablishmentsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  EstablishmentsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/establishments/establishments.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                establishments\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createDto: CreateDto, res: Response, req: Request, ip: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Inherited from         AppController\n\n                        \n                    \n                    \n                        \n                                Defined in         AppController:41\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDto\n                                            \n                                                        CreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(res: Response, req: Request, ip: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Inherited from         AppController\n\n                        \n                    \n                    \n                        \n                                Defined in         AppController:123\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string, res: Response, req: Request, ip: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Inherited from         AppController\n\n                        \n                    \n                    \n                        \n                                Defined in         AppController:193\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, res: Response, req: Request, ip: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Inherited from         AppController\n\n                        \n                    \n                    \n                        \n                                Defined in         AppController:338\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateDto: UpdateDto, res: Response, req: Request, ip: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n                    \n                        \n                            Inherited from         AppController\n\n                        \n                    \n                    \n                        \n                                Defined in         AppController:265\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDto\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from \"@nestjs/common\";\nimport { EstablishmentsService } from \"@modules/establishments/establishments.service\";\nimport { CreateEstablishmentDto } from \"@modules/establishments/dto/create-establishment.dto\";\nimport { UpdateEstablishmentDto } from \"@modules/establishments/dto/update-establishment.dto\";\nimport { EstablishmentDocument } from \"@modules/establishments/entities/establishment.entity\";\nimport { AppController } from \"src/app.controller\";\nimport {\n\tApiTags,\n\tApiOperation,\n\tApiResponse,\n\tApiBearerAuth,\n} from \"@nestjs/swagger\";\nimport { Response } from \"express\";\nimport { LogHelper } from \"@helpers/log.helper\";\nimport { Connection } from \"mongoose\";\n\n@ApiTags(\"establishments\")\n@Controller(\"establishments\")\nexport class EstablishmentsController extends AppController {\n\tconstructor(\n\t\tprivate readonly establishmentsService: EstablishmentsService,\n\t\tlogHelper: LogHelper,\n\t\tconnection: Connection,\n\t) {\n\t\tsuper(establishmentsService, \"establishments\", connection, logHelper);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EstablishmentsModule.html":{"url":"modules/EstablishmentsModule.html","title":"module - EstablishmentsModule","body":"\n                   \n\n\n\n\n    Modules\n    EstablishmentsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EstablishmentsModule\n\n\n\ncluster_EstablishmentsModule_providers\n\n\n\n\nEstablishmentsService\n\nEstablishmentsService\n\n\n\nEstablishmentsModule\n\nEstablishmentsModule\n\nEstablishmentsModule -->\n\nEstablishmentsService->EstablishmentsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/establishments/establishments.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            EstablishmentsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            EstablishmentsController\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/establishments/establishments.module.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                consumer\n                                            \n                                                        MiddlewareConsumer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, MiddlewareConsumer } from \"@nestjs/common\";\nimport { AuthMiddleware } from \"@middlewares/auth.middleware\";\nimport { EstablishmentsController } from \"@modules/establishments/establishments.controller\";\nimport { EstablishmentsService } from \"@modules/establishments/establishments.service\";\n\n@Module({\n\timports: [],\n\tcontrollers: [EstablishmentsController],\n\tproviders: [EstablishmentsService],\n\texports: [],\n})\nexport class EstablishmentsModule {\n\tconfigure(consumer: MiddlewareConsumer) {\n\t\tconsumer.apply(AuthMiddleware).forRoutes(EstablishmentsController);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EstablishmentsService.html":{"url":"injectables/EstablishmentsService.html","title":"injectable - EstablishmentsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EstablishmentsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/establishments/establishments.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AppService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findWhere\n                            \n                            \n                                    Protected\n                                    Async\n                                populateModel\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updateMany\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(establishmentsModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/establishments/establishments.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        establishmentsModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createDto: CreateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:15\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDto\n                                            \n                                                        CreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:26\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:30\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findWhere\n                        \n                    \n                \n            \n            \n                \n                        \n                    findWhere(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:55\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        populateModel\n                        \n                    \n                \n            \n            \n                \n                        \n                    populateModel(model: AppModel)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:84\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                        AppModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:51\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateDto: UpdateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:38\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDto\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateMany\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateMany(where: object, updateDto: UpdateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:75\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                where\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDto\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { Model } from \"mongoose\";\nimport { CreateEstablishmentDto } from \"@modules/establishments/dto/create-establishment.dto\";\nimport { UpdateEstablishmentDto } from \"@modules/establishments/dto/update-establishment.dto\";\nimport {\n\tEstablishment,\n\tEstablishmentDocument,\n} from \"@modules/establishments/entities/establishment.entity\";\nimport { AppService } from \"src/app.service\";\n\n@Injectable()\nexport class EstablishmentsService extends AppService {\n\tconstructor(\n\t\t@InjectModel(Establishment.name)\n\t\tprivate establishmentsModel: Model,\n\t) {\n\t\tsuper(establishmentsModel);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FlagDto.html":{"url":"classes/FlagDto.html","title":"class - FlagDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FlagDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dtos/flag.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                color\n                            \n                            \n                                    \n                                    \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/flag.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/flag.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n\tIsString,\n\tIsNotEmpty,\n\tIsOptional,\n\tIsObject,\n\tIsArray,\n\tValidateNested,\n\tIsDate,\n\tIsNumber,\n} from \"class-validator\";\nimport { Type } from \"class-transformer\";\n\nexport class FlagDto {\n\t@IsString()\n\t@IsNotEmpty()\n\ttitle: string;\n\n\t@IsString()\n\t@IsNotEmpty()\n\tcolor: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ForgotPasswordDto.html":{"url":"classes/ForgotPasswordDto.html","title":"class - ForgotPasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ForgotPasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/forgot-password.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/forgot-password.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty } from \"class-validator\";\n\nexport class ForgotPasswordDto {\n\t@IsEmail()\n\t@IsNotEmpty()\n\temail: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GlobalExceptionFilter.html":{"url":"classes/GlobalExceptionFilter.html","title":"class - GlobalExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GlobalExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/exceptions/validator.exception.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: any, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/exceptions/validator.exception.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n\tArgumentsHost,\n\tCatch,\n\tExceptionFilter,\n\tHttpException,\n\tHttpStatus,\n} from \"@nestjs/common\";\nimport { Response } from \"express\";\nimport { Responses } from \"@helpers/responses.helper\";\n\n@Catch()\nexport class GlobalExceptionFilter implements ExceptionFilter {\n\tcatch(exception: any, host: ArgumentsHost) {\n\t\tconst ctx = host.switchToHttp();\n\t\tconst response = ctx.getResponse();\n\t\tconst request = ctx.getRequest();\n\n\t\tconst path = request.url;\n\t\tconst method = request.method;\n\n\t\tlet status =\n\t\t\texception instanceof HttpException\n\t\t\t\t? exception.getStatus()\n\t\t\t\t: HttpStatus.INTERNAL_SERVER_ERROR;\n\n\t\tlet message =\n\t\t\texception instanceof HttpException\n\t\t\t\t? (exception.getResponse() as any).message || exception.message\n\t\t\t\t: \"An unexpected error occurred\";\n\n\t\tResponses.getResponse({\n\t\t\tres: response,\n\t\t\tpath,\n\t\t\tmethod,\n\t\t\tcode: status,\n\t\t\tsubject: \"Validation Error\",\n\t\t\terror: message,\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Hash.html":{"url":"classes/Hash.html","title":"class - Hash","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Hash\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/hash.helper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Async\n                                hashCompareData\n                            \n                            \n                                    Static\n                                    Async\n                                hashData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        hashCompareData\n                        \n                    \n                \n            \n            \n                \n                        \n                    hashCompareData(data: string, dataHash: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/helpers/hash.helper.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    : string, data to compare\n\n                                            \n                                        \n                                        \n                                                dataHash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                data compared\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        hashData\n                        \n                    \n                \n            \n            \n                \n                        \n                    hashData(data: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/helpers/hash.helper.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    : string, data to hash\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                data hashed\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as argon2 from \"argon2\";\n\nexport default class Hash {\n\t/**\n\t * @param data : string, data to hash\n\t * @returns data hashed\n\t */\n\tpublic static async hashData(data: string) {\n\t\ttry {\n\t\t\tconst hash = await argon2.hash(data, {\n\t\t\t\ttype: argon2.argon2i,\n\t\t\t});\n\n\t\t\treturn hash;\n\t\t} catch (error) {\n\t\t\tconsole.log(error.message);\n\t\t}\n\t}\n\n\t/**\n\t * @param data : string, data to compare\n\t * @param dataToCompare : string, data hashed to compare\n\t * @returns data compared\n\t */\n\tpublic static async hashCompareData(data: string, dataHash: string) {\n\t\ttry {\n\t\t\tconst verfified = await argon2.verify(dataHash, data);\n\n\t\t\treturn verfified;\n\t\t} catch (error) {\n\t\t\tconsole.log(error.message);\n\t\t}\n\t}\n\n\t// public generateToken(data: string) {\n\t// \ttry {\n\t// \t\tconst secretKey = \"ID CLIENT\";\n\t// \t\tconst token = this.crypto.HmacSHA256(data, secretKey).toString();\n\n\t// \t\treturn token;\n\t// \t} catch (error) {\n\t// \t\tconsole.log(error);\n\t// \t}\n\t// }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InitPasswordProps.html":{"url":"interfaces/InitPasswordProps.html","title":"interface - InitPasswordProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InitPasswordProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/providers/mail/helpers/mail.helper.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseProps\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            templateDatas\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        templateDatas\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        templateDatas:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { MailService } from \"@src/providers/mail/mail.service\";\nimport { settings } from \"@constants/settings\";\n\n@Injectable()\nexport class MailHelper {\n\tprivate readonly sender = \"no-reply@NOM.com\";\n\n\tconstructor(private readonly mailService: MailService) {}\n\n\t// Account methods\n\n\t/**\n\t * @description : This method sends a confirmation email to the client\n\t * @param params : ConfirmAccountProps\n\t */\n\tpublic async sendConfirmAccountClient(params: ConfirmAccountClientProps) {\n\t\tconst sendEmail = await this.mailService.sendMail({\n\t\t\tto: params.to,\n\t\t\tsender: params.sender ?? this.sender,\n\t\t\tsubject: \"Welcome to NOM\",\n\t\t\ttemplate: \"./confirmation\",\n\t\t\ttemplateDatas: {\n\t\t\t\tfirstName: params.templateDatas.firstName,\n\t\t\t\turl: `${settings.FRONTEND_URL}auth/confirm/${params.templateDatas.token}`,\n\t\t\t},\n\t\t});\n\n\t\treturn sendEmail;\n\t}\n\n\t/**\n\t * @description : This method sends a confirmation email to the client\n\t * @param params : ConfirmAccountProps\n\t */\n\tpublic async sendConfirmAccountOrganization(params: ConfirmAccountOrganizationProps) {\n\t\tconst sendEmail = await this.mailService.sendMail({\n\t\t\tto: params.to,\n\t\t\tsender: params.sender ?? this.sender,\n\t\t\tsubject: \"Welcome to NOM\",\n\t\t\ttemplate: \"./confirmation\",\n\t\t\ttemplateDatas: {\n\t\t\t\torganizationName: params.templateDatas.organizationName,\n\t\t\t\tuserEmail: params.templateDatas.userEmail,\n\t\t\t\turl: `${settings.FRONTEND_URL}auth/confirm/${params.templateDatas.token}`,\n\t\t\t},\n\t\t});\n\n\t\treturn sendEmail;\n\t}\n\n\tpublic async sendResetPasswordEmail(params: ResetPasswordProps) {\n\t\tconst sendEmail = await this.mailService.sendMail({\n\t\t\tto: params.to,\n\t\t\tsender: params.sender ?? this.sender,\n\t\t\tsubject: \"Reset your password\",\n\t\t\ttemplate: \"./reset-password\",\n\t\t\ttemplateDatas: {\n\t\t\t\turl: `${settings.FRONTEND_URL}auth/reset-password/${params.templateDatas.token}`,\n\t\t\t},\n\t\t});\n\n\t\treturn sendEmail;\n\t}\n\n\tpublic async sendInitPasswordEmail(params: InitPasswordProps) {\n\t\tconst sendEmail = await this.mailService.sendMail({\n\t\t\tto: params.to,\n\t\t\tsender: params.sender ?? this.sender,\n\t\t\tsubject: \"Init your password\",\n\t\t\ttemplate: \"./init-password\",\n\t\t\ttemplateDatas: {\n\t\t\t\turl: `${settings.FRONTEND_URL}auth/init-password/${params.templateDatas.token}`,\n\t\t\t},\n\t\t});\n\n\t\treturn sendEmail;\n\t}\n}\n\ninterface BaseProps {\n\tto: string[];\n\tsender?: string;\n\tsubject?: string;\n\ttemplateDatas?: object;\n}\n\n// Account interfaces\n\n/**\n * @description : This is the interface for the sendConfirmAccountClient method\n */\ninterface ConfirmAccountClientProps extends BaseProps {\n\ttemplateDatas?: {\n\t\tfirstName: string;\n\t\ttoken: string;\n\t};\n}\n\n/**\n * @description : This is the interface for the sendConfirmAccountOrganization method\n */\ninterface ConfirmAccountOrganizationProps extends BaseProps {\n\ttemplateDatas?: {\n\t\torganizationName: string;\n\t\tuserEmail: string;\n\t\ttoken: string;\n\t};\n}\n\n/**\n * @description : This is the interface for the sendResetPasswordEmail method\n */\ninterface ResetPasswordProps extends BaseProps {\n\ttemplateDatas?: {\n\t\ttoken: string;\n\t};\n}\n\n/**\n * @description : This is the interface for the sendResetPasswordEmail method\n */\ninterface InitPasswordProps extends BaseProps {\n\ttemplateDatas?: {\n\t\ttoken: string;\n\t};\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JwtModule.html":{"url":"modules/JwtModule.html","title":"module - JwtModule","body":"\n                   \n\n\n\n\n    Modules\n    JwtModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JwtModule\n\n\n\ncluster_JwtModule_imports\n\n\n\ncluster_JwtModule_exports\n\n\n\n\nJwt\n\nJwt\n\n\n\nJwtModule\n\nJwtModule\n\nJwtModule -->\n\nJwt->JwtModule\n\n\n\n\n\nJwtModule \n\nJwtModule \n\nJwtModule  -->\n\nJwtModule->JwtModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/config/session/jwt.config.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            Jwt\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            JwtModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, Global } from \"@nestjs/common\";\nimport { settings } from \"@constants/settings\";\nimport { JwtModule as Jwt } from \"@nestjs/jwt\";\n\n// @Global()\n@Module({\n\timports: [\n\t\tJwt.register({\n\t\t\tglobal: true,\n\t\t\tsecret: process.env.JWT_SECRET,\n\t\t}),\n\t],\n\texports: [JwtModule],\n})\nexport class JwtModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Log.html":{"url":"classes/Log.html","title":"class - Log","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Log\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/logs/entities/log.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                context\n                            \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    \n                                    Optional\n                                firstName\n                            \n                            \n                                    \n                                    Optional\n                                ip\n                            \n                            \n                                    \n                                    Optional\n                                lastName\n                            \n                            \n                                    \n                                level\n                            \n                            \n                                    \n                                message\n                            \n                            \n                                    \n                                    Optional\n                                metadata\n                            \n                            \n                                    \n                                    Optional\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/logs/entities/log.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/logs/entities/log.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/logs/entities/log.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        ip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/logs/entities/log.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/logs/entities/log.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LogLevelEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, enum: LogLevelEnum})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/logs/entities/log.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/logs/entities/log.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/logs/entities/log.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/logs/entities/log.entity.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { LogLevelEnum } from \"@enums/log-level.enum\";\nimport { Schema, Prop, SchemaFactory } from \"@nestjs/mongoose\";\nimport { Document } from \"mongoose\";\n\nexport type LogDocument = Log & Document;\n\n@Schema({\n\ttimestamps: true,\n})\nexport class Log {\n\t@Prop()\n\tip?: string;\n\n\t@Prop()\n\tuserId?: string;\n\n\t@Prop()\n\tfirstName?: string;\n\n\t@Prop()\n\tlastName?: string;\n\n\t@Prop({ required: true, enum: LogLevelEnum })\n\tlevel: LogLevelEnum;\n\n\t@Prop({ required: true })\n\tmessage: string;\n\n\t@Prop({ required: true })\n\tcontext: string;\n\n\t@Prop({ type: Object })\n\tmetadata?: object;\n\n\tcreatedAt?: Date;\n}\n\nexport const LogSchema = SchemaFactory.createForClass(Log);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LogHelper.html":{"url":"classes/LogHelper.html","title":"class - LogHelper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LogHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/log.helper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                log\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logsService: LogsService)\n                    \n                \n                        \n                            \n                                Defined in src/common/helpers/log.helper.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logsService\n                                                  \n                                                        \n                                                                        LogsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        log\n                        \n                    \n                \n            \n            \n                \n                        \n                    log(logProps: logProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/helpers/log.helper.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                logProps\n                                            \n                                                            logProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { LogLevelEnum } from \"@enums/log-level.enum\";\nimport { ClientDocument } from \"@modules/clients/entities/client.entity\";\nimport { EmployeeDocument } from \"@modules/employees/entities/employee.entity\";\nimport { LogsService } from \"@modules/logs/logs.service\";\nimport { UserDocument } from \"@modules/users/entities/user.entity\";\n\ninterface logProps {\n\tip?: string;\n\tuser?: UserDocument;\n\tuserInfos?: ClientDocument | EmployeeDocument;\n\tlevel: LogLevelEnum;\n\tmessage: string;\n\tcontext: string;\n\tmetadata?: object;\n}\n\nexport class LogHelper {\n\tconstructor(private readonly logsService: LogsService) {}\n\n\tpublic async log(logProps: logProps) {\n\t\ttry {\n\t\t\tawait this.logsService.create({\n\t\t\t\tip: logProps.ip ?? \"N/A\",\n\t\t\t\tuserId: logProps.user._id.toString() ?? \"N/A\",\n\t\t\t\tfirstName: logProps.userInfos.firstName ?? \"N/A\",\n\t\t\t\tlastName: logProps.userInfos.lastName ?? \"N/A\",\n\t\t\t\tlevel: logProps.level,\n\t\t\t\tmessage: logProps.message,\n\t\t\t\tcontext: logProps.context,\n\t\t\t\tmetadata: logProps.metadata,\n\t\t\t});\n\t\t} catch (logError) {\n\t\t\tconsole.error(\n\t\t\t\t`Failed to create log in ${logProps.context}: `,\n\t\t\t\tlogError,\n\t\t\t);\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginUserDto.html":{"url":"classes/LoginUserDto.html","title":"class - LoginUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/login-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The email of the user'})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/login-user.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The password of the user'})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/login-user.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from \"class-validator\";\nimport { ApiProperty } from \"@nestjs/swagger\";\n\nexport class LoginUserDto {\n\t@ApiProperty({ description: \"The email of the user\" })\n\t@IsNotEmpty()\n\temail: string;\n\n\t@ApiProperty({ description: \"The password of the user\" })\n\t@IsNotEmpty()\n\tpassword: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LogsModule.html":{"url":"modules/LogsModule.html","title":"module - LogsModule","body":"\n                   \n\n\n\n\n    Modules\n    LogsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LogsModule\n\n\n\ncluster_LogsModule_exports\n\n\n\ncluster_LogsModule_providers\n\n\n\n\nLogsModule \n\nLogsModule \n\n\n\nLogsService \n\nLogsService \n\n\n\nLogsModule\n\nLogsModule\n\nLogsModule  -->\n\nLogsModule->LogsModule \n\n\n\nLogsService  -->\n\nLogsModule->LogsService \n\n\n\n\n\nLogsService\n\nLogsService\n\nLogsModule -->\n\nLogsService->LogsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/logs/logs.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LogsService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LogsModule\n                        \n                        \n                            LogsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from \"@nestjs/common\";\nimport { LogsService } from \"@modules/logs/logs.service\";\n\n@Global()\n@Module({\n\timports: [],\n\tproviders: [LogsService, LogHelper],\n\texports: [LogsModule, LogsService, LogHelper],\n})\nexport class LogsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogsService.html":{"url":"injectables/LogsService.html","title":"injectable - LogsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LogsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/logs/logs.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logsModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/logs/logs.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logsModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createLogDto: CreateLogDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/logs/logs.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createLogDto\n                                            \n                                                            CreateLogDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { Model } from \"mongoose\";\nimport { Log, LogDocument } from \"@modules/logs/entities/log.entity\";\nimport { CreateLogDto } from \"@modules/logs/dto/create-log.dto\";\nimport { SecurityHelper } from \"@helpers/crypto.helper\";\n\n@Injectable()\nexport class LogsService {\n\tconstructor(\n\t\t@InjectModel(Log.name) private logsModel: Model,\n\t) {}\n\n\tpublic async create(createLogDto: CreateLogDto): Promise {\n\t\ttry {\n\t\t\tif (createLogDto.ip) {\n\t\t\t\tcreateLogDto.ip = SecurityHelper.anonymizeAndEncryptIp(createLogDto.ip);\n\t\t\t}\n\t\t\t\n\t\t\tconst created = new this.logsModel(createLogDto);\n\t\t\treturn await created.save();\n\t\t} catch (error) {\n\t\t\tconsole.error(\"LogsService > create : \", error);\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailHelper.html":{"url":"injectables/MailHelper.html","title":"injectable - MailHelper","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MailHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/providers/mail/helpers/mail.helper.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                sender\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                sendConfirmAccountClient\n                            \n                            \n                                    Public\n                                    Async\n                                sendConfirmAccountOrganization\n                            \n                            \n                                    Public\n                                    Async\n                                sendInitPasswordEmail\n                            \n                            \n                                    Public\n                                    Async\n                                sendResetPasswordEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mailService: MailService)\n                    \n                \n                        \n                            \n                                Defined in src/providers/mail/helpers/mail.helper.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mailService\n                                                  \n                                                        \n                                                                        MailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        sendConfirmAccountClient\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendConfirmAccountClient(params: ConfirmAccountClientProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/providers/mail/helpers/mail.helper.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            ConfirmAccountClientProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    : ConfirmAccountProps\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        sendConfirmAccountOrganization\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendConfirmAccountOrganization(params: ConfirmAccountOrganizationProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/providers/mail/helpers/mail.helper.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            ConfirmAccountOrganizationProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    : ConfirmAccountProps\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        sendInitPasswordEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendInitPasswordEmail(params: InitPasswordProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/providers/mail/helpers/mail.helper.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            InitPasswordProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        sendResetPasswordEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendResetPasswordEmail(params: ResetPasswordProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/providers/mail/helpers/mail.helper.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            ResetPasswordProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        sender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"no-reply@NOM.com\"\n                    \n                \n                    \n                        \n                                Defined in src/providers/mail/helpers/mail.helper.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { MailService } from \"@src/providers/mail/mail.service\";\nimport { settings } from \"@constants/settings\";\n\n@Injectable()\nexport class MailHelper {\n\tprivate readonly sender = \"no-reply@NOM.com\";\n\n\tconstructor(private readonly mailService: MailService) {}\n\n\t// Account methods\n\n\t/**\n\t * @description : This method sends a confirmation email to the client\n\t * @param params : ConfirmAccountProps\n\t */\n\tpublic async sendConfirmAccountClient(params: ConfirmAccountClientProps) {\n\t\tconst sendEmail = await this.mailService.sendMail({\n\t\t\tto: params.to,\n\t\t\tsender: params.sender ?? this.sender,\n\t\t\tsubject: \"Welcome to NOM\",\n\t\t\ttemplate: \"./confirmation\",\n\t\t\ttemplateDatas: {\n\t\t\t\tfirstName: params.templateDatas.firstName,\n\t\t\t\turl: `${settings.FRONTEND_URL}auth/confirm/${params.templateDatas.token}`,\n\t\t\t},\n\t\t});\n\n\t\treturn sendEmail;\n\t}\n\n\t/**\n\t * @description : This method sends a confirmation email to the client\n\t * @param params : ConfirmAccountProps\n\t */\n\tpublic async sendConfirmAccountOrganization(params: ConfirmAccountOrganizationProps) {\n\t\tconst sendEmail = await this.mailService.sendMail({\n\t\t\tto: params.to,\n\t\t\tsender: params.sender ?? this.sender,\n\t\t\tsubject: \"Welcome to NOM\",\n\t\t\ttemplate: \"./confirmation\",\n\t\t\ttemplateDatas: {\n\t\t\t\torganizationName: params.templateDatas.organizationName,\n\t\t\t\tuserEmail: params.templateDatas.userEmail,\n\t\t\t\turl: `${settings.FRONTEND_URL}auth/confirm/${params.templateDatas.token}`,\n\t\t\t},\n\t\t});\n\n\t\treturn sendEmail;\n\t}\n\n\tpublic async sendResetPasswordEmail(params: ResetPasswordProps) {\n\t\tconst sendEmail = await this.mailService.sendMail({\n\t\t\tto: params.to,\n\t\t\tsender: params.sender ?? this.sender,\n\t\t\tsubject: \"Reset your password\",\n\t\t\ttemplate: \"./reset-password\",\n\t\t\ttemplateDatas: {\n\t\t\t\turl: `${settings.FRONTEND_URL}auth/reset-password/${params.templateDatas.token}`,\n\t\t\t},\n\t\t});\n\n\t\treturn sendEmail;\n\t}\n\n\tpublic async sendInitPasswordEmail(params: InitPasswordProps) {\n\t\tconst sendEmail = await this.mailService.sendMail({\n\t\t\tto: params.to,\n\t\t\tsender: params.sender ?? this.sender,\n\t\t\tsubject: \"Init your password\",\n\t\t\ttemplate: \"./init-password\",\n\t\t\ttemplateDatas: {\n\t\t\t\turl: `${settings.FRONTEND_URL}auth/init-password/${params.templateDatas.token}`,\n\t\t\t},\n\t\t});\n\n\t\treturn sendEmail;\n\t}\n}\n\ninterface BaseProps {\n\tto: string[];\n\tsender?: string;\n\tsubject?: string;\n\ttemplateDatas?: object;\n}\n\n// Account interfaces\n\n/**\n * @description : This is the interface for the sendConfirmAccountClient method\n */\ninterface ConfirmAccountClientProps extends BaseProps {\n\ttemplateDatas?: {\n\t\tfirstName: string;\n\t\ttoken: string;\n\t};\n}\n\n/**\n * @description : This is the interface for the sendConfirmAccountOrganization method\n */\ninterface ConfirmAccountOrganizationProps extends BaseProps {\n\ttemplateDatas?: {\n\t\torganizationName: string;\n\t\tuserEmail: string;\n\t\ttoken: string;\n\t};\n}\n\n/**\n * @description : This is the interface for the sendResetPasswordEmail method\n */\ninterface ResetPasswordProps extends BaseProps {\n\ttemplateDatas?: {\n\t\ttoken: string;\n\t};\n}\n\n/**\n * @description : This is the interface for the sendResetPasswordEmail method\n */\ninterface InitPasswordProps extends BaseProps {\n\ttemplateDatas?: {\n\t\ttoken: string;\n\t};\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MailModule\n\n\n\ncluster_MailModule_providers\n\n\n\n\nMailHelper\n\nMailHelper\n\n\n\nMailModule\n\nMailModule\n\nMailModule -->\n\nMailHelper->MailModule\n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/providers/mail/mail.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailHelper\n                        \n                        \n                            MailService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, Global } from \"@nestjs/common\";\nimport { settings } from \"@constants/settings\";\nimport { MailerModule } from \"@nestjs-modules/mailer\";\nimport { join } from \"path\";\nimport { HandlebarsAdapter } from \"@nestjs-modules/mailer/dist/adapters/handlebars.adapter\";\nimport { MailHelper } from \"@src/providers/mail/helpers/mail.helper\";\nimport { MailService } from \"@src/providers/mail/mail.service\";\n\n@Global()\n@Module({\n\timports: [\n\t\tMailerModule.forRoot({\n\t\t\ttransport: {\n\t\t\t\thost: settings.MAILTRAP_HOST,\n\t\t\t\tport: Number(settings.MAILTRAP_PORT),\n\t\t\t\tauth: {\n\t\t\t\t\tuser: settings.MAILTRAP_USER,\n\t\t\t\t\tpass: settings.MAILTRAP_PASS,\n\t\t\t\t},\n\t\t\t},\n\t\t\tdefaults: {\n\t\t\t\tfrom: '\"No Reply\" ',\n\t\t\t},\n\t\t\ttemplate: {\n\t\t\t\tdir: join(__dirname, \"../../services/mail/templates\"),\n\t\t\t\tadapter: new HandlebarsAdapter(),\n\t\t\t\toptions: {\n\t\t\t\t\tstrict: true,\n\t\t\t\t},\n\t\t\t},\n\t\t}),\n\t],\n\tproviders: [MailService, MailHelper],\n\texports: [MailerModule],\n})\nexport class MailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailProps.html":{"url":"interfaces/MailProps.html","title":"interface - MailProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MailProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/providers/mail/mail.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            attachments\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sender\n                                        \n                                \n                                \n                                        \n                                            subject\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            template\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            templateDatas\n                                        \n                                \n                                \n                                        \n                                            to\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attachments\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attachments:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sender\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sender:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subject:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        template\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        template:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        templateDatas\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        templateDatas:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        to:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { MailerService } from \"@nestjs-modules/mailer\";\nimport { settings } from \"@constants/settings\";\nimport { CONFIG } from \"@config/config\";\n\ninterface MailProps {\n\tto: string[];\n\tsender?: string;\n\tsubject: string;\n\ttemplate?: string;\n\ttemplateDatas?: object;\n\tattachments?: any[];\n}\n\n@Injectable()\nexport class MailService {\n\tconstructor(private readonly mailerService: MailerService) {}\n\n\tpublic async sendMail(params: MailProps) {\n\t\tif (CONFIG.email.sendEmail === true) {\n\t\t\tconst mailOptions = {\n\t\t\t\tfrom: settings.MAIL_USER,\n\t\t\t\tto: params.to,\n\t\t\t\tsubject: params.subject,\n\t\t\t\ttemplate: params.template,\n\t\t\t\tcontext: params.templateDatas,\n\t\t\t};\n\n\t\t\t// if(params.attachments) {\n\t\t\t//     mailOptions[\"attachments\"] = params.attachments;\n\t\t\t// }\n\n\t\t\tconst mailer = await this.mailerService.sendMail(mailOptions);\n\n\t\t\treturn mailer;\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/providers/mail/mail.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                sendMail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mailerService: MailerService)\n                    \n                \n                        \n                            \n                                Defined in src/providers/mail/mail.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mailerService\n                                                  \n                                                        \n                                                                    MailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        sendMail\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendMail(params: MailProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/providers/mail/mail.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            MailProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { MailerService } from \"@nestjs-modules/mailer\";\nimport { settings } from \"@constants/settings\";\nimport { CONFIG } from \"@config/config\";\n\ninterface MailProps {\n\tto: string[];\n\tsender?: string;\n\tsubject: string;\n\ttemplate?: string;\n\ttemplateDatas?: object;\n\tattachments?: any[];\n}\n\n@Injectable()\nexport class MailService {\n\tconstructor(private readonly mailerService: MailerService) {}\n\n\tpublic async sendMail(params: MailProps) {\n\t\tif (CONFIG.email.sendEmail === true) {\n\t\t\tconst mailOptions = {\n\t\t\t\tfrom: settings.MAIL_USER,\n\t\t\t\tto: params.to,\n\t\t\t\tsubject: params.subject,\n\t\t\t\ttemplate: params.template,\n\t\t\t\tcontext: params.templateDatas,\n\t\t\t};\n\n\t\t\t// if(params.attachments) {\n\t\t\t//     mailOptions[\"attachments\"] = params.attachments;\n\t\t\t// }\n\n\t\t\tconst mailer = await this.mailerService.sendMail(mailOptions);\n\n\t\t\treturn mailer;\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MongooseConfig.html":{"url":"modules/MongooseConfig.html","title":"module - MongooseConfig","body":"\n                   \n\n\n\n\n    Modules\n    MongooseConfig\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/config/database/mongoose.config.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        // CONFIGS\nimport { Module, Global } from \"@nestjs/common\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\n// import { ConfigModule, ConfigService } from \"@nestjs/config\";\nimport { settings } from \"@constants/settings\";\n\n// MODULES\nimport { Client, ClientSchema } from \"@modules/clients/entities/client.entity\";\n// import {\n// \tCustomField,\n// \tCustomFieldSchema,\n// } from \"@modules/custom-fields/entities/custom-field.entity\";\n// import {\n// \tCustomer,\n// \tCustomerSchema,\n// } from \"@modules/customers/entities/customer.entity\";\n// // import { Notification, NotificationSchema } from '@modules/notifications/entities/notification.entity';\n// import {\n// \tPayment,\n// \tPaymentSchema,\n// } from \"@modules/payments/entities/payment.entity\";\n// import { Plan, PlanSchema } from \"@modules/plans/entities/plan.entity\";\n// import {\n// \tSubscription,\n// \tSubscriptionSchema,\n// } from \"@modules/subscriptions/entities/subscription.entity\";\nimport { User, UserSchema } from \"@modules/users/entities/user.entity\";\nimport { Log, LogSchema } from \"@modules/logs/entities/log.entity\";\n\n@Global()\n@Module({\n\timports: [\n\t\tMongooseModule.forRoot(settings.MONGODB_URL),\n\t\tMongooseModule.forFeature([\n\t\t\t{ name: User.name, schema: UserSchema },\n\t\t\t{ name: Client.name, schema: ClientSchema },\n\t\t\t{ name: Log.name, schema: LogSchema },\n\t\t\t// { name: CustomField.name, schema: CustomFieldSchema },\n\t\t\t// { name: Customer.name, schema: CustomerSchema },\n\t\t\t// // { name: Notification.name, schema: NotificationSchema },\n\t\t\t// { name: Payment.name, schema: PaymentSchema },\n\t\t\t// { name: Plan.name, schema: PlanSchema },\n\t\t\t// { name: Subscription.name, schema: SubscriptionSchema },\n\t\t]),\n\t],\n\texports: [MongooseModule],\n})\nexport class MongooseConfig {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotificationHelper.html":{"url":"classes/NotificationHelper.html","title":"class - NotificationHelper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotificationHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/notification.helper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                isPhoneRequired\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        isPhoneRequired\n                        \n                    \n                \n            \n            \n                \n                        \n                    isPhoneRequired(phone: string, notificationSms: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/helpers/notification.helper.ts:2\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                phone\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                notificationSms\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class NotificationHelper {\n\tpublic static isPhoneRequired(phone: string, notificationSms: boolean) {\n\t\tif (notificationSms) {\n\t\t\tif (!phone) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t\"Phone number is required for SMS notification\",\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NumberHelper.html":{"url":"classes/NumberHelper.html","title":"class - NumberHelper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NumberHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/number.helper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                startsWith\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        startsWith\n                        \n                    \n                \n            \n            \n                \n                        \n                    startsWith(num, startNum)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/helpers/number.helper.ts:9\n                        \n                    \n\n\n            \n                \n                        Checks if a number starts with a digit.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                num\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe number to check.\n\n\n                                            \n                                        \n                                        \n                                                startNum\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe start number to check.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \nTrue if the number starts with start number, false otherwise.\n\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class NumberHelper {\n\t/**\n\t * Checks if a number starts with a digit.\n\t *\n\t * @param {number|string} num - The number to check.\n\t * @param {number|string} startNum - The start number to check.\n\t * @returns {boolean} - True if the number starts with start number, false otherwise.\n\t */\n\tstatic startsWith(num, startNum) {\n\t\tconst strNum = num.toString(); // Convert the number to a string\n\t\treturn strNum.startsWith(startNum); // Check if it starts with startNum\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Organization.html":{"url":"classes/Organization.html","title":"class - Organization","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Organization\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/organizations/entities/organization.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                address1\n                            \n                            \n                                    \n                                    Optional\n                                address2\n                            \n                            \n                                    \n                                    Optional\n                                city\n                            \n                            \n                                    \n                                    Optional\n                                country\n                            \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    Optional\n                                logo\n                            \n                            \n                                    \n                                managerId\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    Optional\n                                postalCode\n                            \n                            \n                                    \n                                    Optional\n                                stripePlanId\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        address1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/organizations/entities/organization.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        address2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/organizations/entities/organization.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/organizations/entities/organization.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/organizations/entities/organization.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/organizations/entities/organization.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/organizations/entities/organization.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/organizations/entities/organization.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        managerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/organizations/entities/organization.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/organizations/entities/organization.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        postalCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/organizations/entities/organization.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        stripePlanId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/organizations/entities/organization.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/organizations/entities/organization.entity.ts:41\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Schema, Prop, SchemaFactory } from \"@nestjs/mongoose\";\nimport { Document } from \"mongoose\";\n\nexport type OrganizationDocument = Organization & Document;\n\n@Schema({\n\ttimestamps: true,\n})\nexport class Organization {\n\t@Prop({ required: true })\n\tname: string;\n\n\t@Prop()\n\tdescription?: string;\n\n\t@Prop()\n\tlogo?: string;\n\n\t@Prop({ default: null })\n\taddress1?: string;\n\n\t@Prop({ default: null })\n\taddress2?: string;\n\n\t@Prop()\n\tpostalCode?: string;\n\n\t@Prop({ default: null })\n\tcity?: string;\n\n\t@Prop({ default: null })\n\tcountry?: string;\n\n\t@Prop()\n\tstripePlanId?: string;\n\n\t@Prop({ required: true })\n\tmanagerId: string;\n\n\tcreatedAt?: Date;\n\tupdatedAt?: Date;\n}\n\nexport const OrganizationSchema = SchemaFactory.createForClass(Organization);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrganizationsController.html":{"url":"controllers/OrganizationsController.html","title":"controller - OrganizationsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrganizationsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/organizations/organizations.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                organizations\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createDto: CreateDto, res: Response, req: Request, ip: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Inherited from         AppController\n\n                        \n                    \n                    \n                        \n                                Defined in         AppController:41\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDto\n                                            \n                                                        CreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(res: Response, req: Request, ip: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Inherited from         AppController\n\n                        \n                    \n                    \n                        \n                                Defined in         AppController:123\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string, res: Response, req: Request, ip: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Inherited from         AppController\n\n                        \n                    \n                    \n                        \n                                Defined in         AppController:193\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, res: Response, req: Request, ip: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Inherited from         AppController\n\n                        \n                    \n                    \n                        \n                                Defined in         AppController:338\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateDto: UpdateDto, res: Response, req: Request, ip: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n                    \n                        \n                            Inherited from         AppController\n\n                        \n                    \n                    \n                        \n                                Defined in         AppController:265\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDto\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from \"@nestjs/common\";\nimport { OrganizationsService } from \"@modules/organizations/organizations.service\";\nimport { CreateOrganizationDto } from \"@modules/organizations/dto/create-organization.dto\";\nimport { UpdateOrganizationDto } from \"@modules/organizations/dto/update-organization.dto\";\nimport { OrganizationDocument } from \"@modules/organizations/entities/organization.entity\";\nimport { AppController } from \"src/app.controller\";\nimport {\n\tApiTags,\n\tApiOperation,\n\tApiResponse,\n\tApiBearerAuth,\n} from \"@nestjs/swagger\";\nimport { Response } from \"express\";\nimport { LogHelper } from \"@helpers/log.helper\";\nimport { Connection } from \"mongoose\";\n\n@ApiTags(\"organizations\")\n@Controller(\"organizations\")\nexport class OrganizationsController extends AppController {\n\tconstructor(\n\t\tprivate readonly organizationsService: OrganizationsService,\n\t\tlogHelper: LogHelper,\n\t\tconnection: Connection,\n\t) {\n\t\tsuper(organizationsService, \"organizations\", connection, logHelper);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrganizationsModule.html":{"url":"modules/OrganizationsModule.html","title":"module - OrganizationsModule","body":"\n                   \n\n\n\n\n    Modules\n    OrganizationsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OrganizationsModule\n\n\n\ncluster_OrganizationsModule_providers\n\n\n\n\nOrganizationsService\n\nOrganizationsService\n\n\n\nOrganizationsModule\n\nOrganizationsModule\n\nOrganizationsModule -->\n\nOrganizationsService->OrganizationsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/organizations/organizations.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OrganizationsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrganizationsController\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/organizations/organizations.module.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                consumer\n                                            \n                                                        MiddlewareConsumer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, MiddlewareConsumer } from \"@nestjs/common\";\nimport { AuthMiddleware } from \"@middlewares/auth.middleware\";\nimport { OrganizationsController } from \"@modules/organizations/organizations.controller\";\nimport { OrganizationsService } from \"@modules/organizations/organizations.service\";\n\n@Module({\n\timports: [],\n\tcontrollers: [OrganizationsController],\n\tproviders: [OrganizationsService],\n\texports: [],\n})\nexport class OrganizationsModule {\n\tconfigure(consumer: MiddlewareConsumer) {\n\t\tconsumer.apply(AuthMiddleware).forRoutes(OrganizationsController);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrganizationsService.html":{"url":"injectables/OrganizationsService.html","title":"injectable - OrganizationsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrganizationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/organizations/organizations.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AppService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findWhere\n                            \n                            \n                                    Protected\n                                    Async\n                                populateModel\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updateMany\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(organizationsModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/organizations/organizations.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationsModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createDto: CreateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:15\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDto\n                                            \n                                                        CreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:26\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:30\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findWhere\n                        \n                    \n                \n            \n            \n                \n                        \n                    findWhere(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:55\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        populateModel\n                        \n                    \n                \n            \n            \n                \n                        \n                    populateModel(model: AppModel)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:84\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                        AppModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:51\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateDto: UpdateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:38\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDto\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateMany\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateMany(where: object, updateDto: UpdateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:75\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                where\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDto\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { Model } from \"mongoose\";\nimport { CreateOrganizationDto } from \"@modules/organizations/dto/create-organization.dto\";\nimport { UpdateOrganizationDto } from \"@modules/organizations/dto/update-organization.dto\";\nimport {\n\tOrganization,\n\tOrganizationDocument,\n} from \"@modules/organizations/entities/organization.entity\";\nimport { AppService } from \"src/app.service\";\n\n@Injectable()\nexport class OrganizationsService extends AppService {\n\tconstructor(\n\t\t@InjectModel(Organization.name)\n\t\tprivate organizationsModel: Model,\n\t) {\n\t\tsuper(organizationsModel);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Plan.html":{"url":"classes/Plan.html","title":"class - Plan","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Plan\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/plans/entities/plan.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                active\n                            \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                stripeProductId\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/plans/entities/plan.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/plans/entities/plan.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/plans/entities/plan.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/plans/entities/plan.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        stripeProductId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/plans/entities/plan.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/plans/entities/plan.entity.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Schema, Prop, SchemaFactory } from \"@nestjs/mongoose\";\nimport { Document } from \"mongoose\";\n\nexport type PlanDocument = Plan & Document;\n\n@Schema({\n\ttimestamps: true,\n})\nexport class Plan {\n\t@Prop({ required: true })\n\tname: string;\n\n\t@Prop({ required: true })\n\tdescription: string;\n\n\t@Prop({ required: true })\n\tactive: boolean;\n\n\t@Prop({ required: true })\n\tstripeProductId: string;\n\n\tcreatedAt?: Date;\n\tupdatedAt?: Date;\n}\n\nexport const PlanSchema = SchemaFactory.createForClass(Plan);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PlanPrice.html":{"url":"classes/PlanPrice.html","title":"class - PlanPrice","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PlanPrice\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/plan-prices/entities/plan-price.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                active\n                            \n                            \n                                    \n                                amount\n                            \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    \n                                currency\n                            \n                            \n                                    \n                                interval\n                            \n                            \n                                    \n                                intervalCount\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                trialPeriodDays\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/plan-prices/entities/plan-price.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/plan-prices/entities/plan-price.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/plan-prices/entities/plan-price.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/plan-prices/entities/plan-price.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        interval\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/plan-prices/entities/plan-price.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        intervalCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/plan-prices/entities/plan-price.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/plan-prices/entities/plan-price.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        trialPeriodDays\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/plan-prices/entities/plan-price.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/plan-prices/entities/plan-price.entity.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Schema, Prop, SchemaFactory } from \"@nestjs/mongoose\";\nimport { Document } from \"mongoose\";\n\nexport type PlanPriceDocument = PlanPrice & Document;\n\n@Schema({\n\ttimestamps: true,\n})\nexport class PlanPrice {\n\t@Prop({ required: true })\n\tname: string;\n\n\t@Prop({ required: true })\n\tamount: number;\n\n\t@Prop({ required: true })\n\tcurrency: string;\n\n\t@Prop({ required: true })\n\tinterval: string;\n\n\t@Prop({ required: true })\n\tintervalCount: number;\n\n\t@Prop({ required: true })\n\ttrialPeriodDays: number;\n\n\t@Prop({ required: true })\n\tactive: boolean;\n\n\tcreatedAt?: Date;\n\tupdatedAt?: Date;\n}\n\nexport const PlanPriceSchema = SchemaFactory.createForClass(PlanPrice);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PlanPricesController.html":{"url":"controllers/PlanPricesController.html","title":"controller - PlanPricesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PlanPricesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/plan-prices/plan-prices.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                plan-prices\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createDto: CreateDto, res: Response, req: Request, ip: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Inherited from         AppController\n\n                        \n                    \n                    \n                        \n                                Defined in         AppController:41\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDto\n                                            \n                                                        CreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(res: Response, req: Request, ip: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Inherited from         AppController\n\n                        \n                    \n                    \n                        \n                                Defined in         AppController:123\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string, res: Response, req: Request, ip: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Inherited from         AppController\n\n                        \n                    \n                    \n                        \n                                Defined in         AppController:193\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, res: Response, req: Request, ip: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Inherited from         AppController\n\n                        \n                    \n                    \n                        \n                                Defined in         AppController:338\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateDto: UpdateDto, res: Response, req: Request, ip: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n                    \n                        \n                            Inherited from         AppController\n\n                        \n                    \n                    \n                        \n                                Defined in         AppController:265\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDto\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from \"@nestjs/common\";\nimport { PlanPricesService } from \"@modules/plan-prices/plan-prices.service\";\nimport { CreatePlanPriceDto } from \"@modules/plan-prices/dto/create-plan-price.dto\";\nimport { UpdatePlanPriceDto } from \"@modules/plan-prices/dto/update-plan-price.dto\";\nimport { PlanPriceDocument } from \"@modules/plan-prices/entities/plan-price.entity\";\nimport { AppController } from \"src/app.controller\";\nimport {\n\tApiTags,\n\tApiOperation,\n\tApiResponse,\n\tApiBearerAuth,\n} from \"@nestjs/swagger\";\nimport { Response } from \"express\";\nimport { LogHelper } from \"@helpers/log.helper\";\nimport { Connection } from \"mongoose\";\n\n@ApiTags(\"plan-prices\")\n@Controller(\"plan-prices\")\nexport class PlanPricesController extends AppController {\n\tconstructor(\n\t\tprivate readonly planPricesService: PlanPricesService,\n\t\tlogHelper: LogHelper,\n\t\tconnection: Connection,\n\t) {\n\t\tsuper(planPricesService, \"planPrices\", connection, logHelper);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PlanPricesModule.html":{"url":"modules/PlanPricesModule.html","title":"module - PlanPricesModule","body":"\n                   \n\n\n\n\n    Modules\n    PlanPricesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PlanPricesModule\n\n\n\ncluster_PlanPricesModule_exports\n\n\n\ncluster_PlanPricesModule_providers\n\n\n\n\nPlanPricesModule \n\nPlanPricesModule \n\n\n\nPlanPricesModule\n\nPlanPricesModule\n\nPlanPricesModule  -->\n\nPlanPricesModule->PlanPricesModule \n\n\n\n\n\nPlanPricesService\n\nPlanPricesService\n\nPlanPricesModule -->\n\nPlanPricesService->PlanPricesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/plan-prices/plan-prices.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PlanPricesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PlanPricesController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PlanPricesModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/plan-prices/plan-prices.module.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                consumer\n                                            \n                                                        MiddlewareConsumer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, MiddlewareConsumer } from \"@nestjs/common\";\nimport { AuthMiddleware } from \"@middlewares/auth.middleware\";\nimport { PlanPricesController } from \"@modules/plan-prices/plan-prices.controller\";\nimport { PlanPricesService } from \"@modules/plan-prices/plan-prices.service\";\n\n@Module({\n\timports: [],\n\tcontrollers: [PlanPricesController],\n\tproviders: [PlanPricesService],\n\texports: [PlanPricesModule],\n})\nexport class PlanPricesModule {\n\tconfigure(consumer: MiddlewareConsumer) {\n\t\tconsumer.apply(AuthMiddleware).forRoutes(PlanPricesController);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlanPricesService.html":{"url":"injectables/PlanPricesService.html","title":"injectable - PlanPricesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PlanPricesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/plan-prices/plan-prices.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AppService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findWhere\n                            \n                            \n                                    Protected\n                                    Async\n                                populateModel\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updateMany\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(planPricesModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/plan-prices/plan-prices.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        planPricesModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createDto: CreateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:15\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDto\n                                            \n                                                        CreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:26\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:30\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findWhere\n                        \n                    \n                \n            \n            \n                \n                        \n                    findWhere(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:55\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        populateModel\n                        \n                    \n                \n            \n            \n                \n                        \n                    populateModel(model: AppModel)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:84\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                        AppModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:51\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateDto: UpdateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:38\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDto\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateMany\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateMany(where: object, updateDto: UpdateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:75\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                where\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDto\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { Model } from \"mongoose\";\nimport { CreatePlanPriceDto } from \"@modules/plan-prices/dto/create-plan-price.dto\";\nimport { UpdatePlanPriceDto } from \"@modules/plan-prices/dto/update-plan-price.dto\";\nimport {\n\tPlanPrice,\n\tPlanPriceDocument,\n} from \"@modules/plan-prices/entities/plan-price.entity\";\nimport { AppService } from \"src/app.service\";\n\n@Injectable()\nexport class PlanPricesService extends AppService {\n\tconstructor(\n\t\t@InjectModel(PlanPrice.name)\n\t\tprivate planPricesModel: Model,\n\t) {\n\t\tsuper(planPricesModel);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PlansController.html":{"url":"controllers/PlansController.html","title":"controller - PlansController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PlansController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/plans/plans.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                plans\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createPlanDto: CreatePlanDto, res: Response, req: Request, ip: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Create a new plan'})@ApiResponse({status: undefined, description: 'The plan has been successfully created.'})@ApiResponse({status: undefined, description: 'Bad Request.'})@ApiBearerAuth()@Post()\n                \n            \n\n                    \n                        \n                            Inherited from         AppController\n\n                        \n                    \n                    \n                        \n                                Defined in         AppController:59\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPlanDto\n                                            \n                                                            CreatePlanDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(res: Response, req: Request, ip: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Inherited from         AppController\n\n                        \n                    \n                    \n                        \n                                Defined in         AppController:123\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string, res: Response, req: Request, ip: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Inherited from         AppController\n\n                        \n                    \n                    \n                        \n                                Defined in         AppController:193\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, res: Response, req: Request, ip: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Inherited from         AppController\n\n                        \n                    \n                    \n                        \n                                Defined in         AppController:338\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateDto: UpdateDto, res: Response, req: Request, ip: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n                    \n                        \n                            Inherited from         AppController\n\n                        \n                    \n                    \n                        \n                                Defined in         AppController:265\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDto\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n\tBody,\n\tController,\n\tHttpStatus,\n\tIp,\n\tPost,\n\tReq,\n\tRes,\n} from \"@nestjs/common\";\nimport { PlansService } from \"@modules/plans/plans.service\";\nimport { CreatePlanDto } from \"@modules/plans/dto/create-plan.dto\";\nimport { UpdatePlanDto } from \"@modules/plans/dto/update-plan.dto\";\nimport { PlanDocument } from \"@modules/plans/entities/plan.entity\";\nimport { AppController } from \"src/app.controller\";\nimport {\n\tApiTags,\n\tApiOperation,\n\tApiResponse,\n\tApiBearerAuth,\n} from \"@nestjs/swagger\";\nimport { Response, Request } from \"express\";\nimport { StripeProductService } from \"@src/providers/stripe/product/stripe-product.service\";\nimport { StripePriceService } from \"@src/providers/stripe/price/stripe-price.service\";\nimport { LogsService } from \"@modules/logs/logs.service\";\nimport { Responses } from \"@helpers/responses.helper\";\nimport { LogLevelEnum } from \"@enums/log-level.enum\";\nimport { LogHelper } from \"@helpers/log.helper\";\nimport { Connection } from \"mongoose\";\n\n@ApiTags(\"plans\")\n@Controller(\"plans\")\nexport class PlansController extends AppController {\n\tconstructor(\n\t\tprivate readonly plansService: PlansService,\n\t\tprivate readonly stripeProductService: StripeProductService,\n\t\tprivate readonly stripePriceService: StripePriceService,\n\t\tprivate readonly logsService: LogsService,\n\t\tlogHelper: LogHelper,\n\t\tconnection: Connection,\n\t) {\n\t\tsuper(plansService, \"plans\", connection, logHelper);\n\t}\n\n\t@ApiOperation({ summary: \"Create a new plan\" })\n\t@ApiResponse({\n\t\tstatus: HttpStatus.CREATED,\n\t\tdescription: \"The plan has been successfully created.\",\n\t})\n\t@ApiResponse({\n\t\tstatus: HttpStatus.BAD_REQUEST,\n\t\tdescription: \"Bad Request.\",\n\t})\n\t@ApiBearerAuth()\n\t@Post()\n\tasync create(\n\t\t@Body() createPlanDto: CreatePlanDto,\n\t\t@Res() res: Response,\n\t\t@Req() req: Request,\n\t\t@Ip() ip: string,\n\t) {\n\t\tconst path = \"register\";\n\t\tconst method = \"Post\";\n\n\t\ttry {\n\t\t\t// Create a stripe product\n\t\t\tconst stripeProduct =\n\t\t\t\tawait this.stripeProductService.create(createPlanDto);\n\n\t\t\tif (!stripeProduct) {\n\t\t\t\tthrow new Error(\"Failed to create stripe product\");\n\t\t\t}\n\n\t\t\tthis.logHelper.log({\n\t\t\t\tip: ip,\n\t\t\t\tuser: req[\"user\"],\n\t\t\t\tuserInfos: req[\"userInfos\"],\n\t\t\t\tlevel: LogLevelEnum.INFO,\n\t\t\t\tmessage: \"Stripe product successfully registered\",\n\t\t\t\tcontext: `PlansController > ${path}: `,\n\t\t\t\tmetadata: { user: req[\"user\"], client: req[\"userInfos\"] },\n\t\t\t});\n\n\t\t\treturn super.create(createPlanDto, res, req, ip);\n\t\t} catch (error) {\n\t\t\tconsole.error(`PlansController > ${path} : `, error);\n\n\t\t\tif (error.message === \"Failed to create stripe product\") {\n\t\t\t\treturn Responses.getResponse({\n\t\t\t\t\tres,\n\t\t\t\t\tpath,\n\t\t\t\t\tmethod,\n\t\t\t\t\tcode: HttpStatus.INTERNAL_SERVER_ERROR,\n\t\t\t\t\tsubject: \"plans\",\n\t\t\t\t\terror: \"Failed to create stripe product\",\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn Responses.getResponse({\n\t\t\t\tres,\n\t\t\t\tpath,\n\t\t\t\tmethod,\n\t\t\t\tcode: HttpStatus.INTERNAL_SERVER_ERROR,\n\t\t\t\tsubject: \"auth\",\n\t\t\t\terror: \"An error occurred while creating the stripe product\",\n\t\t\t});\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PlansModule.html":{"url":"modules/PlansModule.html","title":"module - PlansModule","body":"\n                   \n\n\n\n\n    Modules\n    PlansModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PlansModule\n\n\n\ncluster_PlansModule_exports\n\n\n\ncluster_PlansModule_providers\n\n\n\n\nPlansModule \n\nPlansModule \n\n\n\nPlansModule\n\nPlansModule\n\nPlansModule  -->\n\nPlansModule->PlansModule \n\n\n\n\n\nPlansService\n\nPlansService\n\nPlansModule -->\n\nPlansService->PlansModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/plans/plans.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PlansService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PlansController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PlansModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/plans/plans.module.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                consumer\n                                            \n                                                        MiddlewareConsumer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, MiddlewareConsumer } from \"@nestjs/common\";\nimport { AuthMiddleware } from \"@middlewares/auth.middleware\";\nimport { PlansController } from \"@modules/plans/plans.controller\";\nimport { PlansService } from \"@modules/plans/plans.service\";\nimport { StripeProductProps } from \"@src/providers/stripe/product/stripe-product.interface\";\nimport { StripePriceProps } from \"@src/providers/stripe/price/stripe-price.interface\";\n\n@Module({\n\timports: [],\n\tcontrollers: [PlansController],\n\tproviders: [PlansService, StripePriceProps, StripeProductProps],\n\texports: [PlansModule],\n})\nexport class PlansModule {\n\tconfigure(consumer: MiddlewareConsumer) {\n\t\tconsumer.apply(AuthMiddleware).forRoutes(PlansController);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlansService.html":{"url":"injectables/PlansService.html","title":"injectable - PlansService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PlansService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/plans/plans.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AppService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findWhere\n                            \n                            \n                                    Protected\n                                    Async\n                                populateModel\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updateMany\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(plansModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/plans/plans.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        plansModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createDto: CreateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:15\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDto\n                                            \n                                                        CreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:26\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:30\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findWhere\n                        \n                    \n                \n            \n            \n                \n                        \n                    findWhere(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:55\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        populateModel\n                        \n                    \n                \n            \n            \n                \n                        \n                    populateModel(model: AppModel)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:84\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                        AppModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:51\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateDto: UpdateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:38\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDto\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateMany\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateMany(where: object, updateDto: UpdateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:75\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                where\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDto\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { Model } from \"mongoose\";\nimport { CreatePlanDto } from \"@modules/plans/dto/create-plan.dto\";\nimport { UpdatePlanDto } from \"@modules/plans/dto/update-plan.dto\";\nimport { Plan, PlanDocument } from \"@modules/plans/entities/plan.entity\";\nimport { AppService } from \"src/app.service\";\n\n@Injectable()\nexport class PlansService extends AppService {\n\tconstructor(\n\t\t@InjectModel(Plan.name) private plansModel: Model,\n\t) {\n\t\tsuper(plansModel);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PromoCode.html":{"url":"classes/PromoCode.html","title":"class - PromoCode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PromoCode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/promo-codes/entities/promo-code.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/promo-codes/entities/promo-code.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/promo-codes/entities/promo-code.entity.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Schema, Prop, SchemaFactory } from \"@nestjs/mongoose\";\nimport { Document } from \"mongoose\";\n\nexport type PromoCodeDocument = PromoCode & Document;\n\n@Schema({\n\ttimestamps: true,\n})\nexport class PromoCode {\n\t// PROPERTIES\n\n\tcreatedAt?: Date;\n\tupdatedAt?: Date;\n}\n\nexport const PromoCodeSchema = SchemaFactory.createForClass(PromoCode);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PromoCodesController.html":{"url":"controllers/PromoCodesController.html","title":"controller - PromoCodesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PromoCodesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/promo-codes/promo-codes.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                promo-codes\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createDto: CreateDto, res: Response, req: Request, ip: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Inherited from         AppController\n\n                        \n                    \n                    \n                        \n                                Defined in         AppController:41\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDto\n                                            \n                                                        CreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(res: Response, req: Request, ip: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Inherited from         AppController\n\n                        \n                    \n                    \n                        \n                                Defined in         AppController:123\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string, res: Response, req: Request, ip: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Inherited from         AppController\n\n                        \n                    \n                    \n                        \n                                Defined in         AppController:193\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, res: Response, req: Request, ip: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Inherited from         AppController\n\n                        \n                    \n                    \n                        \n                                Defined in         AppController:338\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateDto: UpdateDto, res: Response, req: Request, ip: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n                    \n                        \n                            Inherited from         AppController\n\n                        \n                    \n                    \n                        \n                                Defined in         AppController:265\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDto\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from \"@nestjs/common\";\nimport { PromoCodesService } from \"@modules/promo-codes/promo-codes.service\";\nimport { CreatePromoCodeDto } from \"@modules/promo-codes/dto/create-promo-code.dto\";\nimport { UpdatePromoCodeDto } from \"@modules/promo-codes/dto/update-promo-code.dto\";\nimport { PromoCodeDocument } from \"@modules/promo-codes/entities/promo-code.entity\";\nimport { AppController } from \"src/app.controller\";\nimport {\n\tApiTags,\n\tApiOperation,\n\tApiResponse,\n\tApiBearerAuth,\n} from \"@nestjs/swagger\";\nimport { Response } from \"express\";\nimport { LogHelper } from \"@helpers/log.helper\";\nimport { log } from \"console\";\nimport { Connection } from \"mongoose\";\n\n@ApiTags(\"promo-codes\")\n@Controller(\"promo-codes\")\nexport class PromoCodesController extends AppController {\n\tconstructor(\n\t\tprivate readonly promoCodesService: PromoCodesService,\n\t\tlogHelper: LogHelper,\n\t\tconnection: Connection,\n\t) {\n\t\tsuper(promoCodesService, \"promoCodes\", connection, logHelper);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PromoCodesModule.html":{"url":"modules/PromoCodesModule.html","title":"module - PromoCodesModule","body":"\n                   \n\n\n\n\n    Modules\n    PromoCodesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PromoCodesModule\n\n\n\ncluster_PromoCodesModule_providers\n\n\n\n\nPromoCodesService\n\nPromoCodesService\n\n\n\nPromoCodesModule\n\nPromoCodesModule\n\nPromoCodesModule -->\n\nPromoCodesService->PromoCodesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/promo-codes/promo-codes.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PromoCodesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PromoCodesController\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/promo-codes/promo-codes.module.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                consumer\n                                            \n                                                        MiddlewareConsumer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, MiddlewareConsumer } from \"@nestjs/common\";\nimport { AuthMiddleware } from \"@middlewares/auth.middleware\";\nimport { PromoCodesController } from \"@modules/promo-codes/promo-codes.controller\";\nimport { PromoCodesService } from \"@modules/promo-codes/promo-codes.service\";\n\n@Module({\n\timports: [],\n\tcontrollers: [PromoCodesController],\n\tproviders: [PromoCodesService],\n\texports: [],\n})\nexport class PromoCodesModule {\n\tconfigure(consumer: MiddlewareConsumer) {\n\t\tconsumer.apply(AuthMiddleware).forRoutes(PromoCodesController);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PromoCodesService.html":{"url":"injectables/PromoCodesService.html","title":"injectable - PromoCodesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PromoCodesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/promo-codes/promo-codes.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AppService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findWhere\n                            \n                            \n                                    Protected\n                                    Async\n                                populateModel\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updateMany\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(promoCodesModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/promo-codes/promo-codes.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        promoCodesModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createDto: CreateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:15\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDto\n                                            \n                                                        CreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:26\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:30\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findWhere\n                        \n                    \n                \n            \n            \n                \n                        \n                    findWhere(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:55\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        populateModel\n                        \n                    \n                \n            \n            \n                \n                        \n                    populateModel(model: AppModel)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:84\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                        AppModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:51\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateDto: UpdateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:38\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDto\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateMany\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateMany(where: object, updateDto: UpdateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:75\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                where\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDto\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { Model } from \"mongoose\";\nimport { CreatePromoCodeDto } from \"@modules/promo-codes/dto/create-promo-code.dto\";\nimport { UpdatePromoCodeDto } from \"@modules/promo-codes/dto/update-promo-code.dto\";\nimport {\n\tPromoCode,\n\tPromoCodeDocument,\n} from \"@modules/promo-codes/entities/promo-code.entity\";\nimport { AppService } from \"src/app.service\";\n\n@Injectable()\nexport class PromoCodesService extends AppService {\n\tconstructor(\n\t\t@InjectModel(PromoCode.name)\n\t\tprivate promoCodesModel: Model,\n\t) {\n\t\tsuper(promoCodesModel);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RefreshTokenDto.html":{"url":"classes/RefreshTokenDto.html","title":"class - RefreshTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RefreshTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/refresh-token.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                refreshToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/refresh-token.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from \"class-validator\";\n\nexport class RefreshTokenDto {\n\t@IsNotEmpty()\n\t@IsString()\n\trefreshToken: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResetPasswordDto.html":{"url":"classes/ResetPasswordDto.html","title":"class - ResetPasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResetPasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/reset-password.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                newPassword\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        newPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@Matches(Regex.password)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/reset-password.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/reset-password.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString, Matches } from \"class-validator\";\nimport Regex from \"@constants/regex\";\n\nexport class ResetPasswordDto {\n\t@IsNotEmpty()\n\t@IsString()\n\treadonly token: string;\n\n\t@IsNotEmpty()\n\t@IsString()\n\t@Matches(Regex.password)\n\treadonly newPassword: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResetPasswordProps.html":{"url":"interfaces/ResetPasswordProps.html","title":"interface - ResetPasswordProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ResetPasswordProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/providers/mail/helpers/mail.helper.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseProps\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            templateDatas\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        templateDatas\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        templateDatas:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { MailService } from \"@src/providers/mail/mail.service\";\nimport { settings } from \"@constants/settings\";\n\n@Injectable()\nexport class MailHelper {\n\tprivate readonly sender = \"no-reply@NOM.com\";\n\n\tconstructor(private readonly mailService: MailService) {}\n\n\t// Account methods\n\n\t/**\n\t * @description : This method sends a confirmation email to the client\n\t * @param params : ConfirmAccountProps\n\t */\n\tpublic async sendConfirmAccountClient(params: ConfirmAccountClientProps) {\n\t\tconst sendEmail = await this.mailService.sendMail({\n\t\t\tto: params.to,\n\t\t\tsender: params.sender ?? this.sender,\n\t\t\tsubject: \"Welcome to NOM\",\n\t\t\ttemplate: \"./confirmation\",\n\t\t\ttemplateDatas: {\n\t\t\t\tfirstName: params.templateDatas.firstName,\n\t\t\t\turl: `${settings.FRONTEND_URL}auth/confirm/${params.templateDatas.token}`,\n\t\t\t},\n\t\t});\n\n\t\treturn sendEmail;\n\t}\n\n\t/**\n\t * @description : This method sends a confirmation email to the client\n\t * @param params : ConfirmAccountProps\n\t */\n\tpublic async sendConfirmAccountOrganization(params: ConfirmAccountOrganizationProps) {\n\t\tconst sendEmail = await this.mailService.sendMail({\n\t\t\tto: params.to,\n\t\t\tsender: params.sender ?? this.sender,\n\t\t\tsubject: \"Welcome to NOM\",\n\t\t\ttemplate: \"./confirmation\",\n\t\t\ttemplateDatas: {\n\t\t\t\torganizationName: params.templateDatas.organizationName,\n\t\t\t\tuserEmail: params.templateDatas.userEmail,\n\t\t\t\turl: `${settings.FRONTEND_URL}auth/confirm/${params.templateDatas.token}`,\n\t\t\t},\n\t\t});\n\n\t\treturn sendEmail;\n\t}\n\n\tpublic async sendResetPasswordEmail(params: ResetPasswordProps) {\n\t\tconst sendEmail = await this.mailService.sendMail({\n\t\t\tto: params.to,\n\t\t\tsender: params.sender ?? this.sender,\n\t\t\tsubject: \"Reset your password\",\n\t\t\ttemplate: \"./reset-password\",\n\t\t\ttemplateDatas: {\n\t\t\t\turl: `${settings.FRONTEND_URL}auth/reset-password/${params.templateDatas.token}`,\n\t\t\t},\n\t\t});\n\n\t\treturn sendEmail;\n\t}\n\n\tpublic async sendInitPasswordEmail(params: InitPasswordProps) {\n\t\tconst sendEmail = await this.mailService.sendMail({\n\t\t\tto: params.to,\n\t\t\tsender: params.sender ?? this.sender,\n\t\t\tsubject: \"Init your password\",\n\t\t\ttemplate: \"./init-password\",\n\t\t\ttemplateDatas: {\n\t\t\t\turl: `${settings.FRONTEND_URL}auth/init-password/${params.templateDatas.token}`,\n\t\t\t},\n\t\t});\n\n\t\treturn sendEmail;\n\t}\n}\n\ninterface BaseProps {\n\tto: string[];\n\tsender?: string;\n\tsubject?: string;\n\ttemplateDatas?: object;\n}\n\n// Account interfaces\n\n/**\n * @description : This is the interface for the sendConfirmAccountClient method\n */\ninterface ConfirmAccountClientProps extends BaseProps {\n\ttemplateDatas?: {\n\t\tfirstName: string;\n\t\ttoken: string;\n\t};\n}\n\n/**\n * @description : This is the interface for the sendConfirmAccountOrganization method\n */\ninterface ConfirmAccountOrganizationProps extends BaseProps {\n\ttemplateDatas?: {\n\t\torganizationName: string;\n\t\tuserEmail: string;\n\t\ttoken: string;\n\t};\n}\n\n/**\n * @description : This is the interface for the sendResetPasswordEmail method\n */\ninterface ResetPasswordProps extends BaseProps {\n\ttemplateDatas?: {\n\t\ttoken: string;\n\t};\n}\n\n/**\n * @description : This is the interface for the sendResetPasswordEmail method\n */\ninterface InitPasswordProps extends BaseProps {\n\ttemplateDatas?: {\n\t\ttoken: string;\n\t};\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Responses.html":{"url":"classes/Responses.html","title":"class - Responses","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Responses\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/responses.helper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getResponse\n                            \n                            \n                                    Static\n                                getStatusText\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        getResponse\n                        \n                    \n                \n            \n            \n                \n                        \n                    getResponse(params: ResponsesProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/helpers/responses.helper.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            ResponsesProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         object\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        getStatusText\n                        \n                    \n                \n            \n            \n                \n                        \n                    getStatusText(statusCode: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/helpers/responses.helper.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                statusCode\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { StringHelper } from \"@helpers/string.helper\";\nimport { Response } from \"express\";\nimport { NumberHelper } from \"./number.helper\";\nimport { HttpStatus } from \"@nestjs/common\";\n\ninterface ResponsesProps {\n\tres: Response;\n\tpath: string;\n\tmethod: string;\n\tcode: number;\n\tsubject: string;\n\tdata?: object;\n\terror?: object | string;\n\tmessage?: string;\n\tmultiple?: boolean;\n}\n\nexport class Responses {\n\tpublic static getResponse(params: ResponsesProps): object {\n\t\tlet success: boolean = false;\n\t\tlet codeMessage: string;\n\t\tlet action: string;\n\t\tlet schema: string;\n\n\t\tif (NumberHelper.startsWith(params.code, 2)) {\n\t\t\tsuccess = true;\n\t\t\tcodeMessage = \"success\";\n\t\t} else {\n\t\t\tsuccess = false;\n\t\t\tcodeMessage =\n\t\t\t\tthis.getStatusText(params.code).toLowerCase() || \"error\";\n\t\t}\n\n\t\tswitch (params.method.toLowerCase()) {\n\t\t\tcase \"get\":\n\t\t\t\taction = \"retrieved\";\n\t\t\t\tbreak;\n\t\t\tcase \"post\":\n\t\t\t\taction = \"created\";\n\t\t\t\tbreak;\n\t\t\tcase \"put\":\n\t\t\tcase \"patch\":\n\t\t\t\taction = \"updated\";\n\t\t\t\tbreak;\n\t\t\tcase \"delete\":\n\t\t\t\taction = \"deleted\";\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\taction = \"client error\";\n\t\t}\n\n\t\tif (params.multiple) {\n\t\t\tschema = StringHelper.capitalizeFirstLetter(\n\t\t\t\tparams.subject.toLowerCase(),\n\t\t\t);\n\t\t} else {\n\t\t\tschema = StringHelper.capitalizeFirstLetter(\n\t\t\t\tStringHelper.removeLastS(params.subject.toLowerCase()),\n\t\t\t);\n\t\t}\n\n\t\tconst message =\n\t\t\tparams.message ||\n\t\t\t(success\n\t\t\t\t? `${schema} ${action} successfully`\n\t\t\t\t: `${schema} ${codeMessage}`);\n\t\tconsole.log(\n\t\t\t`[${success ? \"Success\" : \"Error\"}] ${params.subject.toUpperCase()} > (${params.path} => code : ${params.code}, message: ${message})`,\n\t\t);\n\n\t\tconst responseJson = {\n\t\t\tcode: params.code,\n\t\t\tsuccess,\n\t\t\tmessage,\n\t\t};\n\n\t\tif (success && params.data) {\n\t\t\tresponseJson[\"data\"] = params.data;\n\t\t} else if (!success && params.error) {\n\t\t\tresponseJson[\"error\"] = params.error;\n\t\t}\n\n\t\treturn params.res.status(params.code).json(responseJson);\n\t}\n\n\tpublic static getStatusText(statusCode: number): string | undefined {\n\t\tconst statusText = Object.keys(HttpStatus).find(\n\t\t\t(key) => HttpStatus[key] === statusCode,\n\t\t);\n\t\treturn statusText.replace(\"_\", \" \");\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResponsesProps.html":{"url":"interfaces/ResponsesProps.html","title":"interface - ResponsesProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ResponsesProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/responses.helper.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            data\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            error\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            method\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            multiple\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            res\n                                        \n                                \n                                \n                                        \n                                            subject\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:     object | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object | string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        method\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        method:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        multiple\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        multiple:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        res\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        res:     Response\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Response\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subject:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { StringHelper } from \"@helpers/string.helper\";\nimport { Response } from \"express\";\nimport { NumberHelper } from \"./number.helper\";\nimport { HttpStatus } from \"@nestjs/common\";\n\ninterface ResponsesProps {\n\tres: Response;\n\tpath: string;\n\tmethod: string;\n\tcode: number;\n\tsubject: string;\n\tdata?: object;\n\terror?: object | string;\n\tmessage?: string;\n\tmultiple?: boolean;\n}\n\nexport class Responses {\n\tpublic static getResponse(params: ResponsesProps): object {\n\t\tlet success: boolean = false;\n\t\tlet codeMessage: string;\n\t\tlet action: string;\n\t\tlet schema: string;\n\n\t\tif (NumberHelper.startsWith(params.code, 2)) {\n\t\t\tsuccess = true;\n\t\t\tcodeMessage = \"success\";\n\t\t} else {\n\t\t\tsuccess = false;\n\t\t\tcodeMessage =\n\t\t\t\tthis.getStatusText(params.code).toLowerCase() || \"error\";\n\t\t}\n\n\t\tswitch (params.method.toLowerCase()) {\n\t\t\tcase \"get\":\n\t\t\t\taction = \"retrieved\";\n\t\t\t\tbreak;\n\t\t\tcase \"post\":\n\t\t\t\taction = \"created\";\n\t\t\t\tbreak;\n\t\t\tcase \"put\":\n\t\t\tcase \"patch\":\n\t\t\t\taction = \"updated\";\n\t\t\t\tbreak;\n\t\t\tcase \"delete\":\n\t\t\t\taction = \"deleted\";\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\taction = \"client error\";\n\t\t}\n\n\t\tif (params.multiple) {\n\t\t\tschema = StringHelper.capitalizeFirstLetter(\n\t\t\t\tparams.subject.toLowerCase(),\n\t\t\t);\n\t\t} else {\n\t\t\tschema = StringHelper.capitalizeFirstLetter(\n\t\t\t\tStringHelper.removeLastS(params.subject.toLowerCase()),\n\t\t\t);\n\t\t}\n\n\t\tconst message =\n\t\t\tparams.message ||\n\t\t\t(success\n\t\t\t\t? `${schema} ${action} successfully`\n\t\t\t\t: `${schema} ${codeMessage}`);\n\t\tconsole.log(\n\t\t\t`[${success ? \"Success\" : \"Error\"}] ${params.subject.toUpperCase()} > (${params.path} => code : ${params.code}, message: ${message})`,\n\t\t);\n\n\t\tconst responseJson = {\n\t\t\tcode: params.code,\n\t\t\tsuccess,\n\t\t\tmessage,\n\t\t};\n\n\t\tif (success && params.data) {\n\t\t\tresponseJson[\"data\"] = params.data;\n\t\t} else if (!success && params.error) {\n\t\t\tresponseJson[\"error\"] = params.error;\n\t\t}\n\n\t\treturn params.res.status(params.code).json(responseJson);\n\t}\n\n\tpublic static getStatusText(statusCode: number): string | undefined {\n\t\tconst statusText = Object.keys(HttpStatus).find(\n\t\t\t(key) => HttpStatus[key] === statusCode,\n\t\t);\n\t\treturn statusText.replace(\"_\", \" \");\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SecurityHelper.html":{"url":"classes/SecurityHelper.html","title":"class - SecurityHelper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SecurityHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/crypto.helper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                algorithm\n                            \n                            \n                                    Private\n                                    Static\n                                encryptionKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                anonymizeAndEncryptIp\n                            \n                            \n                                    Static\n                                anonymizeIp\n                            \n                            \n                                    Static\n                                decrypt\n                            \n                            \n                                    Static\n                                encrypt\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        algorithm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"aes-256-ctr\"\n                    \n                \n                    \n                        \n                                Defined in src/common/helpers/crypto.helper.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        encryptionKey\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.ENCRYPTION_KEY || \"default_encryption_key\"\n                    \n                \n                    \n                        \n                                Defined in src/common/helpers/crypto.helper.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        anonymizeAndEncryptIp\n                        \n                    \n                \n            \n            \n                \n                        \n                    anonymizeAndEncryptIp(ip: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/helpers/crypto.helper.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        anonymizeIp\n                        \n                    \n                \n            \n            \n                \n                        \n                    anonymizeIp(ip: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/helpers/crypto.helper.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        decrypt\n                        \n                    \n                \n            \n            \n                \n                        \n                    decrypt(encryptedText: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/helpers/crypto.helper.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                encryptedText\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        encrypt\n                        \n                    \n                \n            \n            \n                \n                        \n                    encrypt(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/helpers/crypto.helper.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as crypto from \"crypto\";\n\nexport class SecurityHelper {\n\tprivate static encryptionKey =\n\t\tprocess.env.ENCRYPTION_KEY || \"default_encryption_key\";\n\tprivate static algorithm = \"aes-256-ctr\";\n\n\tpublic static anonymizeIp(ip: string): string {\n\t\tconst parts = ip.split(\".\");\n\t\tif (parts.length === 4) {\n\t\t\tparts[3] = \"0\";\n\t\t}\n\t\treturn parts.join(\".\");\n\t}\n\n\tpublic static encrypt(text: string): string {\n\t\tconst iv = crypto.randomBytes(16);\n\t\tconst cipher = crypto.createCipheriv(\n\t\t\tthis.algorithm,\n\t\t\tBuffer.from(this.encryptionKey),\n\t\t\tiv,\n\t\t);\n\t\tconst encrypted = Buffer.concat([cipher.update(text), cipher.final()]);\n\t\treturn `${iv.toString(\"hex\")}:${encrypted.toString(\"hex\")}`;\n\t}\n\n\tpublic static decrypt(encryptedText: string): string {\n\t\tconst [iv, encrypted] = encryptedText.split(\":\");\n\t\tconst decipher = crypto.createDecipheriv(\n\t\t\tthis.algorithm,\n\t\t\tBuffer.from(this.encryptionKey),\n\t\t\tBuffer.from(iv, \"hex\"),\n\t\t);\n\t\tconst decrypted = Buffer.concat([\n\t\t\tdecipher.update(Buffer.from(encrypted, \"hex\")),\n\t\t\tdecipher.final(),\n\t\t]);\n\t\treturn decrypted.toString();\n\t}\n\n\tpublic static anonymizeAndEncryptIp(ip: string): string {\n\t\tconst anonymizedIp = this.anonymizeIp(ip);\n\t\treturn this.encrypt(anonymizedIp);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StringHelper.html":{"url":"classes/StringHelper.html","title":"class - StringHelper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StringHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/string.helper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                capitalizeFirstLetter\n                            \n                            \n                                    Static\n                                generatePassword\n                            \n                            \n                                    Static\n                                removeLastS\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        capitalizeFirstLetter\n                        \n                    \n                \n            \n            \n                \n                        \n                    capitalizeFirstLetter(str)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/helpers/string.helper.ts:22\n                        \n                    \n\n\n            \n                \n                        Capitalizes the first letter of a string.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                str\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe original string.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \nThe string with the first letter capitalized.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        generatePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    generatePassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/helpers/string.helper.ts:31\n                        \n                    \n\n\n            \n                \n                        Generates a random password.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                \nA randomly generated password.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        removeLastS\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeLastS(str)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/helpers/string.helper.ts:10\n                        \n                    \n\n\n            \n                \n                        Removes the last occurrence of the letter \"s\" from a string.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                str\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe original string.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \nThe modified string without the last \"s\".\n\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import Regex from \"@constants/regex\";\n\nexport class StringHelper {\n\t/**\n\t * Removes the last occurrence of the letter \"s\" from a string.\n\t *\n\t * @param {string} str - The original string.\n\t * @returns {string} - The modified string without the last \"s\".\n\t */\n\tstatic removeLastS(str) {\n\t\tconst lastIndex = str.lastIndexOf(\"s\");\n\t\tif (lastIndex === -1) return str; // If \"s\" is not found, return the original string\n\t\treturn str.slice(0, lastIndex) + str.slice(lastIndex + 1);\n\t}\n\n\t/**\n\t * Capitalizes the first letter of a string.\n\t *\n\t * @param {string} str - The original string.\n\t * @returns {string} - The string with the first letter capitalized.\n\t */\n\tstatic capitalizeFirstLetter(str) {\n\t\tif (!str) return str;\n\t\treturn str.charAt(0).toUpperCase() + str.slice(1);\n\t}\n\n\t/**\n\t * Generates a random password.\n\t * @returns {string} - A randomly generated password.\n\t */\n\tstatic generatePassword(): string {\n\t\tconst lowerCaseLetters = \"abcdefghijklmnopqrstuvwxyz\";\n\t\tconst upperCaseLetters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n\t\tconst numbers = \"0123456789\";\n\n\t\tconst allCharacters = lowerCaseLetters + upperCaseLetters + numbers;\n\n\t\tconst passwordLength = 8;\n\t\tlet password = \"\";\n\n\t\tpassword +=\n\t\t\tlowerCaseLetters[\n\t\t\t\tMath.floor(Math.random() * lowerCaseLetters.length)\n\t\t\t];\n\t\tpassword +=\n\t\t\tupperCaseLetters[\n\t\t\t\tMath.floor(Math.random() * upperCaseLetters.length)\n\t\t\t];\n\t\tpassword += numbers[Math.floor(Math.random() * numbers.length)];\n\n\t\tfor (let i = 3; i  0.5 - Math.random())\n\t\t\t.join(\"\");\n\n\t\tconst regex = Regex.password;\n\n\t\tif (regex.test(password)) {\n\t\t\treturn password;\n\t\t} else {\n\t\t\t// If the password does not match the regex, generate a new one\n\t\t\treturn this.generatePassword();\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StripeCustomerProps.html":{"url":"classes/StripeCustomerProps.html","title":"class - StripeCustomerProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StripeCustomerProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/providers/stripe/customer/stripe-customer.interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/providers/stripe/customer/stripe-customer.interface.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/providers/stripe/customer/stripe-customer.interface.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class StripeCustomerProps {\n\tname: string;\n\temail: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StripeCustomerService.html":{"url":"injectables/StripeCustomerService.html","title":"injectable - StripeCustomerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StripeCustomerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/providers/stripe/customer/stripe-customer.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                retrieve\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(stripe: Stripe)\n                    \n                \n                        \n                            \n                                Defined in src/providers/stripe/customer/stripe-customer.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stripe\n                                                  \n                                                        \n                                                                    Stripe\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(stripeCustomerProps: StripeCustomerProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/providers/stripe/customer/stripe-customer.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                stripeCustomerProps\n                                            \n                                                            StripeCustomerProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/providers/stripe/customer/stripe-customer.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        retrieve\n                        \n                    \n                \n            \n            \n                \n                        \n                    retrieve(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/providers/stripe/customer/stripe-customer.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, stripeCustomerProps: StripeCustomerProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/providers/stripe/customer/stripe-customer.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                stripeCustomerProps\n                                            \n                                                            StripeCustomerProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from \"@nestjs/common\";\nimport { Stripe } from \"stripe\";\nimport { StripeCustomerProps } from \"@src/providers/stripe/customer/stripe-customer.interface\";\n\n@Injectable()\nexport class StripeCustomerService {\n\tconstructor(@Inject(\"STRIPE_CLIENT\") private readonly stripe: Stripe) {}\n\n\tasync create(stripeCustomerProps: StripeCustomerProps) {\n\t\tconst { name, email } = stripeCustomerProps;\n\n\t\treturn await this.stripe.customers.create({\n\t\t\tname,\n\t\t\temail,\n\t\t});\n\t}\n\n\tasync retrieve(id: string) {\n\t\treturn await this.stripe.customers.retrieve(id);\n\t}\n\n\tasync update(id: string, stripeCustomerProps: StripeCustomerProps) {\n\t\tconst { name, email } = stripeCustomerProps;\n\n\t\treturn await this.stripe.customers.update(id, {\n\t\t\tname,\n\t\t\temail,\n\t\t});\n\t}\n\n\tasync delete(id: string) {\n\t\treturn await this.stripe.customers.del(id);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StripeModule.html":{"url":"modules/StripeModule.html","title":"module - StripeModule","body":"\n                   \n\n\n\n\n    Modules\n    StripeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StripeModule\n\n\n\ncluster_StripeModule_exports\n\n\n\ncluster_StripeModule_providers\n\n\n\n\nSTRIPE_CLIENT \n\nSTRIPE_CLIENT \n\n\n\nStripeModule\n\nStripeModule\n\nSTRIPE_CLIENT  -->\n\nStripeModule->STRIPE_CLIENT \n\n\n\n\n\nStripePriceService\n\nStripePriceService\n\nStripeModule -->\n\nStripePriceService->StripeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/providers/stripe/stripe.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StripePriceService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            STRIPE_CLIENT\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { StripePriceService } from \"@providers/stripe/price/stripe-price.service\";\nimport { Global, Module } from \"@nestjs/common\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { Stripe } from \"stripe\";\nimport { settings } from \"@constants/settings\";\n\n@Global()\n@Module({\n\timports: [],\n\tcontrollers: [],\n\tproviders: [\n\t\t{\n\t\t\tprovide: \"STRIPE_CLIENT\",\n\t\t\tuseFactory: (configService: ConfigService) => {\n\t\t\t\treturn new Stripe(\n\t\t\t\t\tconfigService.get(settings.STRIPE_PUBLIC_KEY),\n\t\t\t\t\t{\n\t\t\t\t\t\tapiVersion: \"2024-06-20\",\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t},\n\t\t\tinject: [ConfigService],\n\t\t},\n\t\tStripePriceService,\n\t],\n\texports: [\"STRIPE_CLIENT\"],\n})\nexport class StripeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StripePlanService.html":{"url":"injectables/StripePlanService.html","title":"injectable - StripePlanService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StripePlanService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/providers/stripe/services/stripe-payment-method.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\n\n@Injectable()\nexport class StripePlanService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StripePlanService-1.html":{"url":"injectables/StripePlanService-1.html","title":"injectable - StripePlanService-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StripePlanService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/providers/stripe/services/stripe-promotion-code.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\n\n@Injectable()\nexport class StripePlanService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StripePlanService-2.html":{"url":"injectables/StripePlanService-2.html","title":"injectable - StripePlanService-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StripePlanService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/providers/stripe/services/stripe-subscription.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\n\n@Injectable()\nexport class StripePlanService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StripePriceProps.html":{"url":"classes/StripePriceProps.html","title":"class - StripePriceProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StripePriceProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/providers/stripe/price/stripe-price.interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                amount\n                            \n                            \n                                currency\n                            \n                            \n                                interval\n                            \n                            \n                                intervalCount\n                            \n                            \n                                name\n                            \n                            \n                                trialPeriodDays\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/providers/stripe/price/stripe-price.interface.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/providers/stripe/price/stripe-price.interface.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CurrencyEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/providers/stripe/price/stripe-price.interface.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        interval\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Stripe.Price.Recurring.Interval\n\n                    \n                \n                    \n                        \n                                Defined in src/providers/stripe/price/stripe-price.interface.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        intervalCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/providers/stripe/price/stripe-price.interface.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/providers/stripe/price/stripe-price.interface.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trialPeriodDays\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/providers/stripe/price/stripe-price.interface.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CurrencyEnum } from \"@enums/currency.enum\";\nimport Stripe from \"stripe\";\n// import { IntervalType } from \"@types/interval.type\";\n\nexport class StripePriceProps {\n\tname: string;\n\tcurrency: CurrencyEnum;\n\tamount: number;\n\tinterval: Stripe.Price.Recurring.Interval;\n\tintervalCount: number;\n\ttrialPeriodDays: number;\n\tactive: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StripePriceService.html":{"url":"injectables/StripePriceService.html","title":"injectable - StripePriceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StripePriceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/providers/stripe/price/stripe-price.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                retrieve\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(stripe: Stripe)\n                    \n                \n                        \n                            \n                                Defined in src/providers/stripe/price/stripe-price.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stripe\n                                                  \n                                                        \n                                                                    Stripe\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(stripePriceProps: StripePriceProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/providers/stripe/price/stripe-price.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                stripePriceProps\n                                            \n                                                            StripePriceProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/providers/stripe/price/stripe-price.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        retrieve\n                        \n                    \n                \n            \n            \n                \n                        \n                    retrieve(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/providers/stripe/price/stripe-price.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, stripePriceProps: StripePriceProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/providers/stripe/price/stripe-price.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                stripePriceProps\n                                            \n                                                            StripePriceProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from \"@nestjs/common\";\nimport { Stripe } from \"stripe\";\nimport { StripePriceProps } from \"@src/providers/stripe/price/stripe-price.interface\";\n\n@Injectable()\nexport class StripePriceService {\n\tconstructor(@Inject(\"STRIPE_CLIENT\") private readonly stripe: Stripe) {}\n\n\tasync create(stripePriceProps: StripePriceProps) {\n\t\tconst {\n\t\t\tcurrency,\n\t\t\tamount,\n\t\t\tinterval,\n\t\t\tintervalCount,\n\t\t\ttrialPeriodDays,\n\t\t\tactive,\n\t\t\tname,\n\t\t} = stripePriceProps;\n\n\t\treturn await this.stripe.prices.create({\n\t\t\tcurrency,\n\t\t\tunit_amount: amount,\n\t\t\tactive,\n\t\t\tnickname: name,\n\t\t\trecurring: {\n\t\t\t\tinterval,\n\t\t\t\tinterval_count: intervalCount,\n\t\t\t\ttrial_period_days: trialPeriodDays,\n\t\t\t},\n\t\t});\n\t}\n\n\tasync retrieve(id: string) {\n\t\treturn await this.stripe.products.retrieve(id);\n\t}\n\n\tasync update(id: string, stripePriceProps: StripePriceProps) {\n\t\tconst { active, name } = stripePriceProps;\n\n\t\treturn await this.stripe.prices.update(id, {\n\t\t\tactive,\n\t\t\tnickname: name,\n\t\t});\n\t}\n\n\tasync delete(id: string) {\n\t\treturn await this.stripe.products.del(id);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StripeProductProps.html":{"url":"classes/StripeProductProps.html","title":"class - StripeProductProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StripeProductProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/providers/stripe/product/stripe-product.interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/providers/stripe/product/stripe-product.interface.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class StripeProductProps {\n\tname: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StripeProductService.html":{"url":"injectables/StripeProductService.html","title":"injectable - StripeProductService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StripeProductService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/providers/stripe/product/stripe-product.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                retrieve\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(stripe: Stripe)\n                    \n                \n                        \n                            \n                                Defined in src/providers/stripe/product/stripe-product.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stripe\n                                                  \n                                                        \n                                                                    Stripe\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(stripeProductProps: StripeProductProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/providers/stripe/product/stripe-product.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                stripeProductProps\n                                            \n                                                            StripeProductProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/providers/stripe/product/stripe-product.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        retrieve\n                        \n                    \n                \n            \n            \n                \n                        \n                    retrieve(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/providers/stripe/product/stripe-product.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, stripeProductProps: StripeProductProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/providers/stripe/product/stripe-product.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                stripeProductProps\n                                            \n                                                            StripeProductProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from \"@nestjs/common\";\nimport { Stripe } from \"stripe\";\nimport { StripeProductProps } from \"@src/providers/stripe/product/stripe-product.interface\";\n\n@Injectable()\nexport class StripeProductService {\n\tconstructor(@Inject(\"STRIPE_CLIENT\") private readonly stripe: Stripe) {}\n\n\tasync create(stripeProductProps: StripeProductProps) {\n\t\tconst { name } = stripeProductProps;\n\t\treturn await this.stripe.products.create({\n\t\t\tname,\n\t\t});\n\t}\n\n\tasync retrieve(id: string) {\n\t\treturn await this.stripe.products.retrieve(id);\n\t}\n\n\tasync update(id: string, stripeProductProps: StripeProductProps) {\n\t\tconst { name } = stripeProductProps;\n\n\t\treturn await this.stripe.products.update(id, {\n\t\t\tname,\n\t\t});\n\t}\n\n\tasync delete(id: string) {\n\t\treturn await this.stripe.products.del(id);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Subscription.html":{"url":"classes/Subscription.html","title":"class - Subscription","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Subscription\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/subscriptions/entities/subscription.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/subscriptions/entities/subscription.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/subscriptions/entities/subscription.entity.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Schema, Prop, SchemaFactory } from \"@nestjs/mongoose\";\nimport { Document } from \"mongoose\";\n\nexport type SubscriptionDocument = Subscription & Document;\n\n@Schema({\n\ttimestamps: true,\n})\nexport class Subscription {\n\t// PROPERTIES\n\n\tcreatedAt?: Date;\n\tupdatedAt?: Date;\n}\n\nexport const SubscriptionSchema = SchemaFactory.createForClass(Subscription);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SubscriptionsController.html":{"url":"controllers/SubscriptionsController.html","title":"controller - SubscriptionsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SubscriptionsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/subscriptions/subscriptions.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                subscriptions\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createDto: CreateDto, res: Response, req: Request, ip: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Inherited from         AppController\n\n                        \n                    \n                    \n                        \n                                Defined in         AppController:41\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDto\n                                            \n                                                        CreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(res: Response, req: Request, ip: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Inherited from         AppController\n\n                        \n                    \n                    \n                        \n                                Defined in         AppController:123\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string, res: Response, req: Request, ip: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Inherited from         AppController\n\n                        \n                    \n                    \n                        \n                                Defined in         AppController:193\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, res: Response, req: Request, ip: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Inherited from         AppController\n\n                        \n                    \n                    \n                        \n                                Defined in         AppController:338\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateDto: UpdateDto, res: Response, req: Request, ip: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n                    \n                        \n                            Inherited from         AppController\n\n                        \n                    \n                    \n                        \n                                Defined in         AppController:265\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDto\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from \"@nestjs/common\";\nimport { SubscriptionsService } from \"@modules/subscriptions/subscriptions.service\";\nimport { CreateSubscriptionDto } from \"@modules/subscriptions/dto/create-subscription.dto\";\nimport { UpdateSubscriptionDto } from \"@modules/subscriptions/dto/update-subscription.dto\";\nimport { SubscriptionDocument } from \"@modules/subscriptions/entities/subscription.entity\";\nimport { AppController } from \"src/app.controller\";\nimport {\n\tApiTags,\n\tApiOperation,\n\tApiResponse,\n\tApiBearerAuth,\n} from \"@nestjs/swagger\";\nimport { Response } from \"express\";\nimport { LogHelper } from \"@helpers/log.helper\";\nimport { Connection } from \"mongoose\";\n\n@ApiTags(\"subscriptions\")\n@Controller(\"subscriptions\")\nexport class SubscriptionsController extends AppController {\n\tconstructor(\n\t\tprivate readonly subscriptionsService: SubscriptionsService,\n\t\tlogHelper: LogHelper,\n\t\tconnection: Connection,\n\t) {\n\t\tsuper(subscriptionsService, \"subscriptions\", connection, logHelper);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SubscriptionsModule.html":{"url":"modules/SubscriptionsModule.html","title":"module - SubscriptionsModule","body":"\n                   \n\n\n\n\n    Modules\n    SubscriptionsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SubscriptionsModule\n\n\n\ncluster_SubscriptionsModule_providers\n\n\n\n\nSubscriptionsService\n\nSubscriptionsService\n\n\n\nSubscriptionsModule\n\nSubscriptionsModule\n\nSubscriptionsModule -->\n\nSubscriptionsService->SubscriptionsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/subscriptions/subscriptions.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SubscriptionsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SubscriptionsController\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/subscriptions/subscriptions.module.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                consumer\n                                            \n                                                        MiddlewareConsumer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, MiddlewareConsumer } from \"@nestjs/common\";\nimport { AuthMiddleware } from \"@middlewares/auth.middleware\";\nimport { SubscriptionsController } from \"@modules/subscriptions/subscriptions.controller\";\nimport { SubscriptionsService } from \"@modules/subscriptions/subscriptions.service\";\n\n@Module({\n\timports: [],\n\tcontrollers: [SubscriptionsController],\n\tproviders: [SubscriptionsService],\n\texports: [],\n})\nexport class SubscriptionsModule {\n\tconfigure(consumer: MiddlewareConsumer) {\n\t\tconsumer.apply(AuthMiddleware).forRoutes(SubscriptionsController);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubscriptionsService.html":{"url":"injectables/SubscriptionsService.html","title":"injectable - SubscriptionsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SubscriptionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/subscriptions/subscriptions.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AppService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findWhere\n                            \n                            \n                                    Protected\n                                    Async\n                                populateModel\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updateMany\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(subscriptionsModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/subscriptions/subscriptions.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        subscriptionsModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createDto: CreateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:15\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDto\n                                            \n                                                        CreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:26\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:30\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findWhere\n                        \n                    \n                \n            \n            \n                \n                        \n                    findWhere(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:55\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        populateModel\n                        \n                    \n                \n            \n            \n                \n                        \n                    populateModel(model: AppModel)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:84\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                        AppModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:51\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateDto: UpdateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:38\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDto\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateMany\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateMany(where: object, updateDto: UpdateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:75\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                where\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDto\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { Model } from \"mongoose\";\nimport { CreateSubscriptionDto } from \"@modules/subscriptions/dto/create-subscription.dto\";\nimport { UpdateSubscriptionDto } from \"@modules/subscriptions/dto/update-subscription.dto\";\nimport {\n\tSubscription,\n\tSubscriptionDocument,\n} from \"@modules/subscriptions/entities/subscription.entity\";\nimport { AppService } from \"src/app.service\";\n\n@Injectable()\nexport class SubscriptionsService extends AppService {\n\tconstructor(\n\t\t@InjectModel(Subscription.name)\n\t\tprivate subscriptionsModel: Model,\n\t) {\n\t\tsuper(subscriptionsModel);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Team.html":{"url":"classes/Team.html","title":"class - Team","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Team\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/teams/entities/team.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/teams/entities/team.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/teams/entities/team.entity.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Schema, Prop, SchemaFactory } from \"@nestjs/mongoose\";\nimport { Document } from \"mongoose\";\n\nexport type TeamDocument = Team & Document;\n\n@Schema({\n\ttimestamps: true,\n})\nexport class Team {\n\t// PROPERTIES\n\n\tcreatedAt?: Date;\n\tupdatedAt?: Date;\n}\n\nexport const TeamSchema = SchemaFactory.createForClass(Team);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TeamsController.html":{"url":"controllers/TeamsController.html","title":"controller - TeamsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TeamsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/teams/teams.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                teams\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createDto: CreateDto, res: Response, req: Request, ip: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Inherited from         AppController\n\n                        \n                    \n                    \n                        \n                                Defined in         AppController:41\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDto\n                                            \n                                                        CreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(res: Response, req: Request, ip: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Inherited from         AppController\n\n                        \n                    \n                    \n                        \n                                Defined in         AppController:123\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string, res: Response, req: Request, ip: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Inherited from         AppController\n\n                        \n                    \n                    \n                        \n                                Defined in         AppController:193\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, res: Response, req: Request, ip: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Inherited from         AppController\n\n                        \n                    \n                    \n                        \n                                Defined in         AppController:338\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateDto: UpdateDto, res: Response, req: Request, ip: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n                    \n                        \n                            Inherited from         AppController\n\n                        \n                    \n                    \n                        \n                                Defined in         AppController:265\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDto\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from \"@nestjs/common\";\nimport { TeamsService } from \"@modules/teams/teams.service\";\nimport { CreateTeamDto } from \"@modules/teams/dto/create-team.dto\";\nimport { UpdateTeamDto } from \"@modules/teams/dto/update-team.dto\";\nimport { TeamDocument } from \"@modules/teams/entities/team.entity\";\nimport { AppController } from \"src/app.controller\";\nimport {\n\tApiTags,\n\tApiOperation,\n\tApiResponse,\n\tApiBearerAuth,\n} from \"@nestjs/swagger\";\nimport { Response } from \"express\";\nimport { LogHelper } from \"@helpers/log.helper\";\nimport { log } from \"console\";\nimport { Connection } from \"mongoose\";\n\n@ApiTags(\"teams\")\n@Controller(\"teams\")\nexport class TeamsController extends AppController {\n\tconstructor(\n\t\tprivate readonly teamsService: TeamsService,\n\t\tlogHelper: LogHelper,\n\t\tconnection: Connection,\n\t) {\n\t\tsuper(teamsService, \"teams\", connection, logHelper);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TeamsModule.html":{"url":"modules/TeamsModule.html","title":"module - TeamsModule","body":"\n                   \n\n\n\n\n    Modules\n    TeamsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TeamsModule\n\n\n\ncluster_TeamsModule_providers\n\n\n\n\nTeamsService\n\nTeamsService\n\n\n\nTeamsModule\n\nTeamsModule\n\nTeamsModule -->\n\nTeamsService->TeamsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/teams/teams.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TeamsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TeamsController\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/teams/teams.module.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                consumer\n                                            \n                                                        MiddlewareConsumer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, MiddlewareConsumer } from \"@nestjs/common\";\nimport { AuthMiddleware } from \"@middlewares/auth.middleware\";\nimport { TeamsController } from \"@modules/teams/teams.controller\";\nimport { TeamsService } from \"@modules/teams/teams.service\";\n\n@Module({\n\timports: [],\n\tcontrollers: [TeamsController],\n\tproviders: [TeamsService],\n\texports: [],\n})\nexport class TeamsModule {\n\tconfigure(consumer: MiddlewareConsumer) {\n\t\tconsumer.apply(AuthMiddleware).forRoutes(TeamsController);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TeamsService.html":{"url":"injectables/TeamsService.html","title":"injectable - TeamsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TeamsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/teams/teams.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AppService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findWhere\n                            \n                            \n                                    Protected\n                                    Async\n                                populateModel\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updateMany\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(teamsModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/teams/teams.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamsModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createDto: CreateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:15\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDto\n                                            \n                                                        CreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:26\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:30\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findWhere\n                        \n                    \n                \n            \n            \n                \n                        \n                    findWhere(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:55\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        populateModel\n                        \n                    \n                \n            \n            \n                \n                        \n                    populateModel(model: AppModel)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:84\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                        AppModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:51\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateDto: UpdateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:38\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDto\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateMany\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateMany(where: object, updateDto: UpdateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:75\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                where\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDto\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { Model } from \"mongoose\";\nimport { CreateTeamDto } from \"@modules/teams/dto/create-team.dto\";\nimport { UpdateTeamDto } from \"@modules/teams/dto/update-team.dto\";\nimport { Team, TeamDocument } from \"@modules/teams/entities/team.entity\";\nimport { AppService } from \"src/app.service\";\n\n@Injectable()\nexport class TeamsService extends AppService {\n\tconstructor(\n\t\t@InjectModel(Team.name) private teamsModel: Model,\n\t) {\n\t\tsuper(teamsModel);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThrottlerBehindProxyGuard.html":{"url":"injectables/ThrottlerBehindProxyGuard.html","title":"injectable - ThrottlerBehindProxyGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ThrottlerBehindProxyGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/guards/throttler-behind-proxy.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ThrottlerGuard\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                getTracker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        getTracker\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTracker(req: Record)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/guards/throttler-behind-proxy.guard.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ThrottlerGuard } from \"@nestjs/throttler\";\nimport { Injectable } from \"@nestjs/common\";\n\n@Injectable()\nexport class ThrottlerBehindProxyGuard extends ThrottlerGuard {\n\tprotected async getTracker(req: Record): Promise {\n\t\treturn req.ips.length ? req.ips[0] : req.ip;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ThrottlerConfig.html":{"url":"modules/ThrottlerConfig.html","title":"module - ThrottlerConfig","body":"\n                   \n\n\n\n\n    Modules\n    ThrottlerConfig\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ThrottlerConfig\n\n\n\ncluster_ThrottlerConfig_exports\n\n\n\n\nThrottlerConfig \n\nThrottlerConfig \n\n\n\nThrottlerConfig\n\nThrottlerConfig\n\nThrottlerConfig  -->\n\nThrottlerConfig->ThrottlerConfig \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/config/security/throttler.config.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            ThrottlerConfig\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from \"@nestjs/common\";\nimport { ThrottlerModule } from \"@nestjs/throttler\";\n\n@Global()\n@Module({\n\timports: [\n\t\tThrottlerModule.forRoot([\n\t\t\t{\n\t\t\t\tttl: 60000,\n\t\t\t\tlimit: 10,\n\t\t\t},\n\t\t]),\n\t],\n\texports: [ThrottlerConfig],\n})\nexport class ThrottlerConfig {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Token.html":{"url":"injectables/Token.html","title":"injectable - Token","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  Token\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/token.helper.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                generateAccessToken\n                            \n                            \n                                    Static\n                                generateRefreshToken\n                            \n                            \n                                    Static\n                                generateToken\n                            \n                            \n                                    Static\n                                getPayload\n                            \n                            \n                                    Static\n                                isTokenExpired\n                            \n                            \n                                    Static\n                                verifyToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        generateAccessToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateAccessToken(payload: object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/helpers/token.helper.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        generateRefreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateRefreshToken(payload: object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/helpers/token.helper.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        generateToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateToken(payload: object, expiresIn: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/helpers/token.helper.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                expiresIn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    \"1h\"\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        getPayload\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPayload(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/helpers/token.helper.ts:90\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        isTokenExpired\n                        \n                    \n                \n            \n            \n                \n                        \n                    isTokenExpired(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/helpers/token.helper.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        verifyToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyToken(token: string, type?: TokenTypeEnum)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/helpers/token.helper.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                type\n                                            \n                                                            TokenTypeEnum\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { settings } from \"@constants/settings\";\nimport { TokenTypeEnum } from \"@enums/token-type.enum\";\nimport { Injectable } from \"@nestjs/common\";\nimport * as jwt from \"jsonwebtoken\";\n\n@Injectable()\nexport class Token {\n\tpublic static generateToken(payload: object, expiresIn: string = \"1h\") {\n\t\ttry {\n\t\t\tconst token = jwt.sign(payload, settings.JWT_SECRET, {\n\t\t\t\texpiresIn,\n\t\t\t});\n\n\t\t\treturn token;\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t\tthrow new Error(\"An error occurred while generating the token\");\n\t\t}\n\t}\n\n\tpublic static generateAccessToken(payload: object) {\n\t\ttry {\n\t\t\tconst accessToken = jwt.sign(payload, settings.ACCESS_JWT_SECRET, {\n\t\t\t\texpiresIn: \"15m\",\n\t\t\t});\n\n\t\t\treturn accessToken;\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t\tthrow new Error(\n\t\t\t\t\"An error occurred while generating the access token\",\n\t\t\t);\n\t\t}\n\t}\n\n\tpublic static generateRefreshToken(payload: object) {\n\t\ttry {\n\t\t\tconst refreshToken = jwt.sign(\n\t\t\t\tpayload,\n\t\t\t\tsettings.REFRESH_JWT_SECRET,\n\t\t\t\t{\n\t\t\t\t\texpiresIn: \"1d\",\n\t\t\t\t},\n\t\t\t);\n\n\t\t\treturn refreshToken;\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t\tthrow new Error(\n\t\t\t\t\"An error occurred while generating the refresh token\",\n\t\t\t);\n\t\t}\n\t}\n\n\tpublic static verifyToken(token: string, type?: TokenTypeEnum) {\n\t\ttry {\n\t\t\tconst verified = jwt.verify(token, settings.JWT_SECRET);\n\n\t\t\tconst payload = this.getPayload(token);\n\n\t\t\tif (type && payload && payload.type !== type) {\n\t\t\t\tthrow new Error(\"Token type does not match\");\n\t\t\t}\n\n\t\t\treturn verified;\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t\treturn \"An error occurred while verifying the token\";\n\t\t}\n\t}\n\n\tpublic static isTokenExpired(token: string) {\n\t\ttry {\n\t\t\tconst decodedToken = jwt.decode(token) as any;\n\n\t\t\tif (!decodedToken || !decodedToken.exp) {\n\t\t\t\tthrow new Error(\"Token has no expiration date\");\n\t\t\t}\n\n\t\t\tconst isExpired = decodedToken.exp * 1000 \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAuthClientDto.html":{"url":"classes/UpdateAuthClientDto.html","title":"class - UpdateAuthClientDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAuthClientDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/update-auth-client.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateAuthClientDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/swagger\";\nimport { CreateAuthClientDto } from \"@modules/auth/dto/create-auth-client.dto\";\n\nexport class UpdateAuthClientDto extends PartialType(CreateAuthClientDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateBookerEmployeeDto.html":{"url":"classes/UpdateBookerEmployeeDto.html","title":"class - UpdateBookerEmployeeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateBookerEmployeeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/booker-employees/dto/update-booker-employee.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(\n\tCreateBookerEmployeeDto,\n)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/swagger\";\nimport { CreateBookerEmployeeDto } from \"@modules/booker-employees/dto/create-booker-employee.dto\";\n\nexport class UpdateBookerEmployeeDto extends PartialType(\n\tCreateBookerEmployeeDto,\n) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateClientDto.html":{"url":"classes/UpdateClientDto.html","title":"class - UpdateClientDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateClientDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/clients/dto/update-client.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateClientDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/swagger\";\nimport { CreateClientDto } from \"@modules/clients/dto/create-client.dto\";\n\nexport class UpdateClientDto extends PartialType(CreateClientDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateEmployeeDto.html":{"url":"classes/UpdateEmployeeDto.html","title":"class - UpdateEmployeeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateEmployeeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/employees/dto/update-employee.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateEmployeeDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/swagger\";\nimport { CreateEmployeeDto } from \"@modules/employees/dto/create-employee.dto\";\n\nexport class UpdateEmployeeDto extends PartialType(CreateEmployeeDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateEstablishmentDto.html":{"url":"classes/UpdateEstablishmentDto.html","title":"class - UpdateEstablishmentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateEstablishmentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/establishments/dto/update-establishment.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(\n\tCreateEstablishmentDto,\n)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/swagger\";\nimport { CreateEstablishmentDto } from \"@modules/establishments/dto/create-establishment.dto\";\n\nexport class UpdateEstablishmentDto extends PartialType(\n\tCreateEstablishmentDto,\n) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateLogDto.html":{"url":"classes/UpdateLogDto.html","title":"class - UpdateLogDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateLogDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/logs/dto/update-log.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateLogDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/swagger\";\nimport { CreateLogDto } from \"@modules/logs/dto/create-log.dto\";\n\nexport class UpdateLogDto extends PartialType(CreateLogDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOrganizationDto.html":{"url":"classes/UpdateOrganizationDto.html","title":"class - UpdateOrganizationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOrganizationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/organizations/dto/update-organization.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateOrganizationDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/swagger\";\nimport { CreateOrganizationDto } from \"@modules/organizations/dto/create-organization.dto\";\n\nexport class UpdateOrganizationDto extends PartialType(CreateOrganizationDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePlanDto.html":{"url":"classes/UpdatePlanDto.html","title":"class - UpdatePlanDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePlanDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/plans/dto/update-plan.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreatePlanDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/swagger\";\nimport { CreatePlanDto } from \"@modules/plans/dto/create-plan.dto\";\n\nexport class UpdatePlanDto extends PartialType(CreatePlanDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePlanPriceDto.html":{"url":"classes/UpdatePlanPriceDto.html","title":"class - UpdatePlanPriceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePlanPriceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/plan-prices/dto/update-plan-price.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreatePlanPriceDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/swagger\";\nimport { CreatePlanPriceDto } from \"@modules/plan-prices/dto/create-plan-price.dto\";\n\nexport class UpdatePlanPriceDto extends PartialType(CreatePlanPriceDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePromoCodeDto.html":{"url":"classes/UpdatePromoCodeDto.html","title":"class - UpdatePromoCodeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePromoCodeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/promo-codes/dto/update-promo-code.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreatePromoCodeDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/swagger\";\nimport { CreatePromoCodeDto } from \"@modules/promo-codes/dto/create-promo-code.dto\";\n\nexport class UpdatePromoCodeDto extends PartialType(CreatePromoCodeDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSubscriptionDto.html":{"url":"classes/UpdateSubscriptionDto.html","title":"class - UpdateSubscriptionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSubscriptionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/subscriptions/dto/update-subscription.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateSubscriptionDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/swagger\";\nimport { CreateSubscriptionDto } from \"@modules/subscriptions/dto/create-subscription.dto\";\n\nexport class UpdateSubscriptionDto extends PartialType(CreateSubscriptionDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTeamDto.html":{"url":"classes/UpdateTeamDto.html","title":"class - UpdateTeamDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTeamDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/teams/dto/update-team.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateTeamDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/swagger\";\nimport { CreateTeamDto } from \"@modules/teams/dto/create-team.dto\";\n\nexport class UpdateTeamDto extends PartialType(CreateTeamDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dto/update-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateUserDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/swagger\";\nimport { CreateUserDto } from \"@modules/users/dto/create-user.dto\";\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/entities/user.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                    Optional\n                                phone\n                            \n                            \n                                    \n                                role\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/entities/user.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/entities/user.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/entities/user.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false, unique: true, sparse: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/entities/user.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Array, default: undefined, enum: UserRoleEnum})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/entities/user.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserStatusEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, required: true, default: undefined, enum: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/entities/user.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/entities/user.entity.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Schema, Prop, SchemaFactory } from \"@nestjs/mongoose\";\nimport { Document } from \"mongoose\";\nimport { UserStatusEnum } from \"@enums/user-status.enum\";\nimport { UserRoleEnum } from \"@enums/user-role.enum\";\n\nexport type UserDocument = User & Document;\n\n@Schema({\n\ttimestamps: true,\n})\nexport class User {\n\t@Prop({ required: true, unique: true })\n\temail: string;\n\n\t@Prop({ required: false, unique: true, sparse: true })\n\tphone?: string;\n\n\t@Prop({ required: true, select: false })\n\tpassword: string;\n\n\t@Prop({\n\t\ttype: [String],\n\t\trequired: true,\n\t\tdefault: [UserStatusEnum.NOT_VERIFIED],\n\t\tenum: Object.values(UserStatusEnum),\n\t})\n\tstatus: UserStatusEnum[];\n\n\t@Prop({ type: Array, default: UserRoleEnum.CLIENT, enum: UserRoleEnum })\n\trole: UserRoleEnum;\n\n\tcreatedAt: Date;\n\tupdatedAt: Date;\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n\n// const excludePassword = function () {\n// \tthis.select(\"-password\");\n// };\n\n// UserSchema.pre(\"find\", excludePassword);\n// UserSchema.pre(\"findOne\", excludePassword);\n// UserSchema.pre(\"findOneAndUpdate\", excludePassword);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserDto, res: Response, req: Request, ip: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Create a new user'})@ApiResponse({status: 201, description: 'The user has been successfully created.'})@ApiResponse({status: 400, description: 'Bad Request.'})@ApiBearerAuth()@Post()\n                \n            \n\n                    \n                        \n                            Inherited from         AppController\n\n                        \n                    \n                    \n                        \n                                Defined in         AppController:53\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(res: Response, req: Request, ip: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get all users'})@ApiResponse({status: 200, description: 'Return all users.'})@ApiResponse({status: 404, description: 'Users not found.'})@Get()\n                \n            \n\n                    \n                        \n                            Inherited from         AppController\n\n                        \n                    \n                    \n                        \n                                Defined in         AppController:72\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string, res: Response, req: Request, ip: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get a user by id'})@ApiResponse({status: 200, description: 'Return a user.'})@ApiResponse({status: 404, description: 'User not found.'})@Get(':id')\n                \n            \n\n                    \n                        \n                            Inherited from         AppController\n\n                        \n                    \n                    \n                        \n                                Defined in         AppController:84\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, res: Response, req: Request, ip: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Delete a user by id'})@ApiResponse({status: 200, description: 'The user has been successfully deleted.'})@ApiResponse({status: 404, description: 'User not found.'})@Delete(':id')\n                \n            \n\n                    \n                        \n                            Inherited from         AppController\n\n                        \n                    \n                    \n                        \n                                Defined in         AppController:117\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateUserDto: UpdateUserDto, res: Response, req: Request, ip: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Update a user by id'})@ApiResponse({status: 200, description: 'The user has been successfully updated.'})@ApiResponse({status: 404, description: 'User not found.'})@Put(':id')\n                \n            \n\n                    \n                        \n                            Inherited from         AppController\n\n                        \n                    \n                    \n                        \n                                Defined in         AppController:100\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n\tController,\n\tGet,\n\tPost,\n\tBody,\n\tParam,\n\tDelete,\n\tRes,\n\tPut,\n\tReq,\n\tIp,\n} from \"@nestjs/common\";\nimport { UsersService } from \"@modules/users/users.service\";\nimport { CreateUserDto } from \"@modules/users/dto/create-user.dto\";\nimport { UpdateUserDto } from \"@modules/users/dto/update-user.dto\";\nimport { UserDocument } from \"@modules/users/entities/user.entity\";\nimport { AppController } from \"src/app.controller\";\nimport {\n\tApiTags,\n\tApiOperation,\n\tApiResponse,\n\tApiBearerAuth,\n} from \"@nestjs/swagger\";\nimport { Response, Request } from \"express\";\n// import { AuthGuard } from \"@guards/auth.guard\";\nimport { UserRoleEnum } from \"@enums/user-role.enum\";\nimport { LogHelper } from \"@helpers/log.helper\";\nimport { Connection } from \"mongoose\";\n\n@ApiTags(\"users\")\n@Controller(\"users\")\nexport class UsersController extends AppController {\n\tconstructor(\n\t\tprivate readonly usersService: UsersService,\n\t\tlogHelper: LogHelper,\n\t\tconnection: Connection,\n\t) {\n\t\tsuper(usersService, \"users\", connection, logHelper);\n\t}\n\n\t@ApiOperation({ summary: \"Create a new user\" })\n\t@ApiResponse({\n\t\tstatus: 201,\n\t\tdescription: \"The user has been successfully created.\",\n\t})\n\t@ApiResponse({ status: 400, description: \"Bad Request.\" })\n\t@ApiBearerAuth()\n\t@Post()\n\tasync create(\n\t\t@Body() createUserDto: CreateUserDto,\n\t\t@Res() res: Response,\n\t\t@Req() req: Request,\n\t\t@Ip() ip: string,\n\t) {\n\t\tconst { role } = createUserDto;\n\n\t\tif (!role) {\n\t\t\tcreateUserDto.role = UserRoleEnum.CLIENT;\n\t\t}\n\n\t\treturn super.create(createUserDto, res, req, ip);\n\t}\n\n\t@ApiOperation({ summary: \"Get all users\" })\n\t@ApiResponse({ status: 200, description: \"Return all users.\" })\n\t@ApiResponse({ status: 404, description: \"Users not found.\" })\n\t@Get()\n\tasync findAll(\n\t\t@Res() res: Response,\n\t\t@Req() req: Request,\n\t\t@Ip() ip: string,\n\t) {\n\t\treturn super.findAll(res, req, ip);\n\t}\n\n\t@ApiOperation({ summary: \"Get a user by id\" })\n\t@ApiResponse({ status: 200, description: \"Return a user.\" })\n\t@ApiResponse({ status: 404, description: \"User not found.\" })\n\t@Get(\":id\")\n\tasync findOne(\n\t\t@Param(\"id\") id: string,\n\t\t@Res() res: Response,\n\t\t@Req() req: Request,\n\t\t@Ip() ip: string,\n\t) {\n\t\treturn super.findOne(id, res, req, ip);\n\t}\n\n\t@ApiOperation({ summary: \"Update a user by id\" })\n\t@ApiResponse({\n\t\tstatus: 200,\n\t\tdescription: \"The user has been successfully updated.\",\n\t})\n\t@ApiResponse({ status: 404, description: \"User not found.\" })\n\t@Put(\":id\")\n\tasync update(\n\t\t@Param(\"id\") id: string,\n\t\t@Body() updateUserDto: UpdateUserDto,\n\t\t@Res() res: Response,\n\t\t@Req() req: Request,\n\t\t@Ip() ip: string,\n\t) {\n\t\treturn super.update(id, updateUserDto, res, req, ip);\n\t}\n\n\t@ApiOperation({ summary: \"Delete a user by id\" })\n\t@ApiResponse({\n\t\tstatus: 200,\n\t\tdescription: \"The user has been successfully deleted.\",\n\t})\n\t@ApiResponse({ status: 404, description: \"User not found.\" })\n\t@Delete(\":id\")\n\tasync remove(\n\t\t@Param(\"id\") id: string,\n\t\t@Res() res: Response,\n\t\t@Req() req: Request,\n\t\t@Ip() ip: string,\n\t) {\n\t\treturn super.remove(id, res, req, ip);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_imports\n\n\n\n\nMongooseConfig\n\nMongooseConfig\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nMongooseConfig->UsersModule\n\n\n\n\n\nUsersModule \n\nUsersModule \n\nUsersModule  -->\n\nUsersModule->UsersModule \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MongooseConfig\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { UsersService } from \"@modules/users/users.service\";\nimport { UsersController } from \"@modules/users/users.controller\";\nimport { MongooseConfig } from \"@config/database/mongoose.config\";\n\n@Module({\n\timports: [MongooseConfig],\n\tcontrollers: [UsersController],\n\tproviders: [UsersService],\n\texports: [UsersModule],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AppService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findOneByEmail\n                            \n                            \n                                    Async\n                                findOneBySupabaseUid\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findWhere\n                            \n                            \n                                    Protected\n                                    Async\n                                populateModel\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updateMany\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/users.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/users/users.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneBySupabaseUid\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneBySupabaseUid(uid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/users/users.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createDto: CreateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:15\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDto\n                                            \n                                                        CreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:26\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:30\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findWhere\n                        \n                    \n                \n            \n            \n                \n                        \n                    findWhere(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:55\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        populateModel\n                        \n                    \n                \n            \n            \n                \n                        \n                    populateModel(model: AppModel)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:84\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                        AppModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:51\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateDto: UpdateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:38\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDto\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateMany\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateMany(where: object, updateDto: UpdateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AppService\n\n                        \n                    \n                    \n                        \n                                Defined in         AppService:75\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                where\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDto\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { Model } from \"mongoose\";\nimport { CreateUserDto } from \"@modules/users/dto/create-user.dto\";\n// import { UpdateUserDto } from \"@modules/users/dto/update-user.dto\";\n// import { UpdateUserPasswordDto } from \"@modules/users/dto/update-user-password.dto\";\nimport { User, UserDocument } from \"@modules/users/entities/user.entity\";\nimport { AppService } from \"src/app.service\";\nimport { UpdateUserDto } from \"./dto/update-user.dto\";\n\n@Injectable()\nexport class UsersService extends AppService {\n\tconstructor(\n\t\t@InjectModel(User.name) private usersModel: Model,\n\t) {\n\t\tsuper(usersModel);\n\t}\n\n\tasync findOneBySupabaseUid(uid: string) {\n\t\tconst me = await this.usersModel.findOne({ uid }).exec();\n\t\treturn me;\n\t}\n\n\tasync findOneByEmail(email: string): Promise {\n\t\ttry {\n\t\t\tconst findOne = await this.usersModel.findOne({ email }).exec();\n\n\t\t\treturn findOne;\n\t\t} catch (error) {\n\t\t\tconsole.log(\n\t\t\t\t\"UsersModule > UsersService > findOneByEmail : \",\n\t\t\t\terror,\n\t\t\t);\n\t\t}\n\t}\n\n\t// async updateEmail(\n\t// \temail: string,\n\t// \tupdateUserEmailDto: UpdateUserEmailDto,\n\t// ): Promise {\n\t// \ttry {\n\t// \t\tconst findOne = await this.usersModel.findOne({ email }).exec();\n\n\t// \t\treturn this.usersModel\n\t// \t\t\t.findOneAndUpdate({ email }, updateUserEmailDto)\n\t// \t\t\t.exec();\n\t// \t} catch (error) {\n\t// \t\tconsole.log(error);\n\t// \t}\n\t// }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/common/constants/regex.ts\n            \n            variable\n            regex\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/constants/settings.ts\n            \n            variable\n            settings\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/ownership.decorator.ts\n            \n            variable\n            Ownership\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/ownership.decorator.ts\n            \n            variable\n            OWNERSHIP_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/public.decorator.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/public.decorator.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/roles.decorator.ts\n            \n            variable\n            Roles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/roles.decorator.ts\n            \n            variable\n            ROLES_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/dtos/custom-field-value.dto.ts\n            \n            class\n            CustomFieldValueDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/dtos/custom-field.dto.ts\n            \n            class\n            CustomFieldDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/common/dtos/flag.dto.ts\n            \n            class\n            FlagDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/exceptions/validator.exception.ts\n            \n            class\n            GlobalExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/guards/throttler-behind-proxy.guard.ts\n            \n            injectable\n            ThrottlerBehindProxyGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/helpers/crypto.helper.ts\n            \n            class\n            SecurityHelper\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/common/helpers/hash.helper.ts\n            \n            class\n            Hash\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/helpers/log.helper.ts\n            \n            class\n            LogHelper\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/helpers/log.helper.ts\n            \n            interface\n            logProps\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/helpers/notification.helper.ts\n            \n            class\n            NotificationHelper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/helpers/number.helper.ts\n            \n            class\n            NumberHelper\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/common/helpers/responses.helper.ts\n            \n            class\n            Responses\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/helpers/responses.helper.ts\n            \n            interface\n            ResponsesProps\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/common/helpers/string.helper.ts\n            \n            class\n            StringHelper\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/common/helpers/token.helper.ts\n            \n            injectable\n            Token\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/common/middlewares/auth.middleware.ts\n            \n            injectable\n            AuthMiddleware\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/pipes/custom-validation.pipe.ts\n            \n            injectable\n            CustomValidationPipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/config/config.ts\n            \n            variable\n            CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/create-auth-client.dto.ts\n            \n            class\n            CreateAuthClientDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/create-auth-organization.dto.ts\n            \n            class\n            CreateAuthOrganizationDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/forgot-password.dto.ts\n            \n            class\n            ForgotPasswordDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/login-user.dto.ts\n            \n            class\n            LoginUserDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/refresh-token.dto.ts\n            \n            class\n            RefreshTokenDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/reset-password.dto.ts\n            \n            class\n            ResetPasswordDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/update-auth-client.dto.ts\n            \n            class\n            UpdateAuthClientDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/booker-employees/booker-employees.controller.ts\n            \n            controller\n            BookerEmployeesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/booker-employees/booker-employees.service.ts\n            \n            injectable\n            BookerEmployeesService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/modules/booker-employees/dto/create-booker-employee.dto.ts\n            \n            class\n            CreateBookerEmployeeDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/booker-employees/dto/update-booker-employee.dto.ts\n            \n            class\n            UpdateBookerEmployeeDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/booker-employees/entities/booker-employee.entity.ts\n            \n            class\n            BookerEmployee\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/booker-employees/entities/booker-employee.entity.ts\n            \n            variable\n            BookerEmployeeSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/clients/clients.controller.ts\n            \n            controller\n            ClientsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/clients/clients.service.ts\n            \n            injectable\n            ClientsService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/modules/clients/dto/create-client.dto.ts\n            \n            class\n            CreateClientDto\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/modules/clients/dto/update-client.dto.ts\n            \n            class\n            UpdateClientDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/clients/entities/client.entity.ts\n            \n            class\n            Client\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/modules/clients/entities/client.entity.ts\n            \n            variable\n            ClientSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/employees/dto/create-employee.dto.ts\n            \n            class\n            CreateEmployeeDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/employees/dto/update-employee.dto.ts\n            \n            class\n            UpdateEmployeeDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/employees/employees.controller.ts\n            \n            controller\n            EmployeesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/employees/employees.service.ts\n            \n            injectable\n            EmployeesService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/modules/employees/entities/employee.entity.ts\n            \n            class\n            Employee\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/employees/entities/employee.entity.ts\n            \n            variable\n            EmployeeSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/establishments/dto/create-establishment.dto.ts\n            \n            class\n            CreateEstablishmentDto\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/modules/establishments/dto/update-establishment.dto.ts\n            \n            class\n            UpdateEstablishmentDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/establishments/entities/establishment.entity.ts\n            \n            class\n            Establishment\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/modules/establishments/entities/establishment.entity.ts\n            \n            variable\n            EstablishmentSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/establishments/establishments.controller.ts\n            \n            controller\n            EstablishmentsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/establishments/establishments.service.ts\n            \n            injectable\n            EstablishmentsService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/modules/logs/dto/create-log.dto.ts\n            \n            class\n            CreateLogDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/logs/dto/update-log.dto.ts\n            \n            class\n            UpdateLogDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/logs/entities/log.entity.ts\n            \n            class\n            Log\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/modules/logs/entities/log.entity.ts\n            \n            variable\n            LogSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/logs/logs.service.ts\n            \n            injectable\n            LogsService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/organizations/dto/create-organization.dto.ts\n            \n            class\n            CreateOrganizationDto\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/modules/organizations/dto/update-organization.dto.ts\n            \n            class\n            UpdateOrganizationDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/organizations/entities/organization.entity.ts\n            \n            class\n            Organization\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/modules/organizations/entities/organization.entity.ts\n            \n            variable\n            OrganizationSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/organizations/organizations.controller.ts\n            \n            controller\n            OrganizationsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/organizations/organizations.service.ts\n            \n            injectable\n            OrganizationsService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/modules/plan-prices/dto/create-plan-price.dto.ts\n            \n            class\n            CreatePlanPriceDto\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/modules/plan-prices/dto/update-plan-price.dto.ts\n            \n            class\n            UpdatePlanPriceDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/plan-prices/entities/plan-price.entity.ts\n            \n            class\n            PlanPrice\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/modules/plan-prices/entities/plan-price.entity.ts\n            \n            variable\n            PlanPriceSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/plan-prices/plan-prices.controller.ts\n            \n            controller\n            PlanPricesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/plan-prices/plan-prices.service.ts\n            \n            injectable\n            PlanPricesService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/modules/plans/dto/create-plan.dto.ts\n            \n            class\n            CreatePlanDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/plans/dto/update-plan.dto.ts\n            \n            class\n            UpdatePlanDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/plans/entities/plan.entity.ts\n            \n            class\n            Plan\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/plans/entities/plan.entity.ts\n            \n            variable\n            PlanSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/plans/plans.controller.ts\n            \n            controller\n            PlansController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/plans/plans.service.ts\n            \n            injectable\n            PlansService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/modules/promo-codes/dto/create-promo-code.dto.ts\n            \n            class\n            CreatePromoCodeDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/promo-codes/dto/update-promo-code.dto.ts\n            \n            class\n            UpdatePromoCodeDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/promo-codes/entities/promo-code.entity.ts\n            \n            class\n            PromoCode\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/promo-codes/entities/promo-code.entity.ts\n            \n            variable\n            PromoCodeSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/promo-codes/promo-codes.controller.ts\n            \n            controller\n            PromoCodesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/promo-codes/promo-codes.service.ts\n            \n            injectable\n            PromoCodesService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/modules/subscriptions/dto/create-subscription.dto.ts\n            \n            class\n            CreateSubscriptionDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/subscriptions/dto/update-subscription.dto.ts\n            \n            class\n            UpdateSubscriptionDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/subscriptions/entities/subscription.entity.ts\n            \n            class\n            Subscription\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/subscriptions/entities/subscription.entity.ts\n            \n            variable\n            SubscriptionSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/subscriptions/subscriptions.controller.ts\n            \n            controller\n            SubscriptionsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/subscriptions/subscriptions.service.ts\n            \n            injectable\n            SubscriptionsService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/modules/teams/dto/create-team.dto.ts\n            \n            class\n            CreateTeamDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/teams/dto/update-team.dto.ts\n            \n            class\n            UpdateTeamDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/teams/entities/team.entity.ts\n            \n            class\n            Team\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/teams/entities/team.entity.ts\n            \n            variable\n            TeamSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/teams/teams.controller.ts\n            \n            controller\n            TeamsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/teams/teams.service.ts\n            \n            injectable\n            TeamsService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/modules/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/users/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/users/entities/user.entity.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/providers/mail/helpers/mail.helper.ts\n            \n            injectable\n            MailHelper\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/providers/mail/helpers/mail.helper.ts\n            \n            interface\n            BaseProps\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/providers/mail/helpers/mail.helper.ts\n            \n            interface\n            ConfirmAccountClientProps\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/providers/mail/helpers/mail.helper.ts\n            \n            interface\n            ConfirmAccountOrganizationProps\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/providers/mail/helpers/mail.helper.ts\n            \n            interface\n            InitPasswordProps\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/providers/mail/helpers/mail.helper.ts\n            \n            interface\n            ResetPasswordProps\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/providers/mail/mail.service.ts\n            \n            injectable\n            MailService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/providers/mail/mail.service.ts\n            \n            interface\n            MailProps\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/providers/stripe/customer/stripe-customer.interface.ts\n            \n            class\n            StripeCustomerProps\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/providers/stripe/customer/stripe-customer.service.ts\n            \n            injectable\n            StripeCustomerService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/providers/stripe/price/stripe-price.interface.ts\n            \n            class\n            StripePriceProps\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/providers/stripe/price/stripe-price.service.ts\n            \n            injectable\n            StripePriceService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/providers/stripe/product/stripe-product.interface.ts\n            \n            class\n            StripeProductProps\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/providers/stripe/product/stripe-product.service.ts\n            \n            injectable\n            StripeProductService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/providers/stripe/services/stripe-payment-method.service.ts\n            \n            injectable\n            StripePlanService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/providers/stripe/services/stripe-promotion-code.ts\n            \n            injectable\n            StripePlanService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/providers/stripe/services/stripe-subscription.ts\n            \n            injectable\n            StripePlanService\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @inquirer/prompts : ^5.3.8\n        \n            @nestjs-modules/mailer : ^2.0.2\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.2.3\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/mapped-types : ^2.0.5\n        \n            @nestjs/mongoose : ^10.0.10\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/platform-socket.io : ^10.3.10\n        \n            @nestjs/swagger : ^7.4.0\n        \n            @nestjs/throttler : ^6.2.1\n        \n            @nestjs/websockets : ^10.3.10\n        \n            @types/crypto-js : ^4.2.2\n        \n            argon2 : ^0.40.3\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            crypto-js : ^4.2.0\n        \n            csurf : ^1.11.0\n        \n            dotenv : ^16.4.5\n        \n            ejs : ^3.1.10\n        \n            express : ^4.19.2\n        \n            handlebars : ^4.7.8\n        \n            inquirer : ^10.1.7\n        \n            jsonwebtoken : ^9.0.2\n        \n            mongoose : ^8.5.2\n        \n            nodemailer : ^6.9.14\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            socket.io : ^4.7.5\n        \n            stripe : ^16.8.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CurrencyEnum   (src/.../currency.enum.ts)\n                        \n                        \n                            IntervalEnum   (src/.../interval.enum.ts)\n                        \n                        \n                            LogLevelEnum   (src/.../log-level.enum.ts)\n                        \n                        \n                            TokenTypeEnum   (src/.../token-type.enum.ts)\n                        \n                        \n                            UserRoleEnum   (src/.../user-role.enum.ts)\n                        \n                        \n                            UserStatusEnum   (src/.../user-status.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/enums/currency.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        CurrencyEnum\n                    \n                \n                        \n                            \n                                 USD\n                            \n                        \n                        \n                            \n                                Value : usd\n                            \n                        \n                        \n                            \n                                 EUR\n                            \n                        \n                        \n                            \n                                Value : eur\n                            \n                        \n                        \n                            \n                                 GBP\n                            \n                        \n                        \n                            \n                                Value : gbp\n                            \n                        \n                        \n                            \n                                 AUD\n                            \n                        \n                        \n                            \n                                Value : aud\n                            \n                        \n                        \n                            \n                                 CAD\n                            \n                        \n                        \n                            \n                                Value : cad\n                            \n                        \n                        \n                            \n                                 JPY\n                            \n                        \n                        \n                            \n                                Value : jpy\n                            \n                        \n                        \n                            \n                                 INR\n                            \n                        \n                        \n                            \n                                Value : inr\n                            \n                        \n                        \n                            \n                                 CNY\n                            \n                        \n                        \n                            \n                                Value : cny\n                            \n                        \n                        \n                            \n                                 RUB\n                            \n                        \n                        \n                            \n                                Value : rub\n                            \n                        \n                        \n                            \n                                 ZAR\n                            \n                        \n                        \n                            \n                                Value : zar\n                            \n                        \n                        \n                            \n                                 BRL\n                            \n                        \n                        \n                            \n                                Value : brl\n                            \n                        \n                        \n                            \n                                 MXN\n                            \n                        \n                        \n                            \n                                Value : mxn\n                            \n                        \n                        \n                            \n                                 SGD\n                            \n                        \n                        \n                            \n                                Value : sgd\n                            \n                        \n                        \n                            \n                                 NZD\n                            \n                        \n                        \n                            \n                                Value : nzd\n                            \n                        \n                        \n                            \n                                 HKD\n                            \n                        \n                        \n                            \n                                Value : hkd\n                            \n                        \n                        \n                            \n                                 SEK\n                            \n                        \n                        \n                            \n                                Value : sek\n                            \n                        \n                        \n                            \n                                 NOK\n                            \n                        \n                        \n                            \n                                Value : nok\n                            \n                        \n                        \n                            \n                                 DKK\n                            \n                        \n                        \n                            \n                                Value : dkk\n                            \n                        \n                        \n                            \n                                 PLN\n                            \n                        \n                        \n                            \n                                Value : pln\n                            \n                        \n                        \n                            \n                                 CHF\n                            \n                        \n                        \n                            \n                                Value : chf\n                            \n                        \n                        \n                            \n                                 THB\n                            \n                        \n                        \n                            \n                                Value : thb\n                            \n                        \n                        \n                            \n                                 KRW\n                            \n                        \n                        \n                            \n                                Value : krw\n                            \n                        \n                        \n                            \n                                 TRY\n                            \n                        \n                        \n                            \n                                Value : try\n                            \n                        \n                        \n                            \n                                 IDR\n                            \n                        \n                        \n                            \n                                Value : idr\n                            \n                        \n                        \n                            \n                                 HUF\n                            \n                        \n                        \n                            \n                                Value : huf\n                            \n                        \n                        \n                            \n                                 CZK\n                            \n                        \n                        \n                            \n                                Value : czk\n                            \n                        \n                        \n                            \n                                 ILS\n                            \n                        \n                        \n                            \n                                Value : ils\n                            \n                        \n                        \n                            \n                                 CLP\n                            \n                        \n                        \n                            \n                                Value : clp\n                            \n                        \n                        \n                            \n                                 PHP\n                            \n                        \n                        \n                            \n                                Value : php\n                            \n                        \n                        \n                            \n                                 AED\n                            \n                        \n                        \n                            \n                                Value : aed\n                            \n                        \n                        \n                            \n                                 COP\n                            \n                        \n                        \n                            \n                                Value : cop\n                            \n                        \n                        \n                            \n                                 SAR\n                            \n                        \n                        \n                            \n                                Value : sar\n                            \n                        \n                        \n                            \n                                 MYR\n                            \n                        \n                        \n                            \n                                Value : myr\n                            \n                        \n                        \n                            \n                                 RON\n                            \n                        \n                        \n                            \n                                Value : ron\n                            \n                        \n                        \n                            \n                                 VND\n                            \n                        \n                        \n                            \n                                Value : vnd\n                            \n                        \n                        \n                            \n                                 NGN\n                            \n                        \n                        \n                            \n                                Value : ngn\n                            \n                        \n                        \n                            \n                                 DZD\n                            \n                        \n                        \n                            \n                                Value : dzd\n                            \n                        \n                        \n                            \n                                 EGP\n                            \n                        \n                        \n                            \n                                Value : egp\n                            \n                        \n                        \n                            \n                                 KES\n                            \n                        \n                        \n                            \n                                Value : kes\n                            \n                        \n                        \n                            \n                                 UAH\n                            \n                        \n                        \n                            \n                                Value : uah\n                            \n                        \n                        \n                            \n                                 KZT\n                            \n                        \n                        \n                            \n                                Value : kzt\n                            \n                        \n                        \n                            \n                                 PKR\n                            \n                        \n                        \n                            \n                                Value : pkr\n                            \n                        \n                        \n                            \n                                 QAR\n                            \n                        \n                        \n                            \n                                Value : qar\n                            \n                        \n                        \n                            \n                                 BDT\n                            \n                        \n                        \n                            \n                                Value : bdt\n                            \n                        \n                        \n                            \n                                 PEN\n                            \n                        \n                        \n                            \n                                Value : pen\n                            \n                        \n                        \n                            \n                                 LBP\n                            \n                        \n                        \n                            \n                                Value : lbp\n                            \n                        \n                        \n                            \n                                 UZS\n                            \n                        \n                        \n                            \n                                Value : uzs\n                            \n                        \n                        \n                            \n                                 TWD\n                            \n                        \n                        \n                            \n                                Value : twd\n                            \n                        \n                        \n                            \n                                 TND\n                            \n                        \n                        \n                            \n                                Value : tnd\n                            \n                        \n                        \n                            \n                                 AZN\n                            \n                        \n                        \n                            \n                                Value : azn\n                            \n                        \n                        \n                            \n                                 GEL\n                            \n                        \n                        \n                            \n                                Value : gel\n                            \n                        \n            \n        \n\n    src/common/enums/interval.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        IntervalEnum\n                    \n                \n                        \n                            \n                                 DAY\n                            \n                        \n                        \n                            \n                                Value : day\n                            \n                        \n                        \n                            \n                                 WEEK\n                            \n                        \n                        \n                            \n                                Value : week\n                            \n                        \n                        \n                            \n                                 MONTH\n                            \n                        \n                        \n                            \n                                Value : month\n                            \n                        \n                        \n                            \n                                 YEAR\n                            \n                        \n                        \n                            \n                                Value : year\n                            \n                        \n            \n        \n\n    src/common/enums/log-level.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        LogLevelEnum\n                    \n                \n                    \n                        \n                            Niveau de log utilisé dans l'application pour catégoriser les messages.\nLes niveaux disponibles sont :\n\nTRACE : Suivi ultra-détaillé du code.\nDEBUG : Informations pour le débogage.\nINFO : Informations générales sur le fonctionnement normal.\nWARN : Signaux d'alerte précoce.\nERROR : Erreurs qui n'arrêtent pas l'application mais nécessitent une attention.\nFATAL : Erreurs critiques qui stoppent l'application.\nCRITICAL : Problèmes très graves qui nécessitent une réponse immédiate, mais l'application peut continuer partiellement.\nEMERGENCY : Situations d'urgence critique nécessitant une action immédiate, souvent liées à des incidents de sécurité.\n\n\n                        \n                    \n                        \n                            \n                                 TRACE\n                            \n                        \n                        \n                            \n                                Value : trace\n                            \n                        \n                        \n                            \n                                 DEBUG\n                            \n                        \n                        \n                            \n                                Value : debug\n                            \n                        \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                Value : info\n                            \n                        \n                        \n                            \n                                 WARN\n                            \n                        \n                        \n                            \n                                Value : warn\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : error\n                            \n                        \n                        \n                            \n                                 FATAL\n                            \n                        \n                        \n                            \n                                Value : fatal\n                            \n                        \n                        \n                            \n                                 CRITICAL\n                            \n                        \n                        \n                            \n                                Value : critical\n                            \n                        \n                        \n                            \n                                 EMERGENCY\n                            \n                        \n                        \n                            \n                                Value : emergency\n                            \n                        \n            \n        \n\n    src/common/enums/token-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        TokenTypeEnum\n                    \n                \n                        \n                            \n                                 ACCESS\n                            \n                        \n                        \n                            \n                                Value : access\n                            \n                        \n                        \n                            \n                                 REFRESH\n                            \n                        \n                        \n                            \n                                Value : refresh\n                            \n                        \n                        \n                            \n                                 CONFIRMATION_ACCOUNT\n                            \n                        \n                        \n                            \n                                Value : confirmation_account\n                            \n                        \n                        \n                            \n                                 RESET_PASSWORD\n                            \n                        \n                        \n                            \n                                Value : reset_password\n                            \n                        \n                        \n                            \n                                 INIT_PASSWORD\n                            \n                        \n                        \n                            \n                                Value : init_password\n                            \n                        \n            \n        \n\n    src/common/enums/user-role.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        UserRoleEnum\n                    \n                \n                        \n                            \n                                 CLIENT\n                            \n                        \n                        \n                            \n                                Value : CLIENT\n                            \n                        \n                        \n                            \n                                 ORGANIZATION_EMPLOYEE\n                            \n                        \n                        \n                            \n                                Value : ORGANIZATION_EMPLOYEE\n                            \n                        \n                        \n                            \n                                 ORGANIZATION_ADMIN\n                            \n                        \n                        \n                            \n                                Value : ORGANIZATION_ADMIN\n                            \n                        \n                        \n                            \n                                 ORGANIZATION_SUPER_ADMIN\n                            \n                        \n                        \n                            \n                                Value : SUPER_ADMIN\n                            \n                        \n                        \n                            \n                                 ORGANIZATION_OWNER\n                            \n                        \n                        \n                            \n                                Value : ORGANIZATION_OWNER\n                            \n                        \n                        \n                            \n                                 BOOKER_EMPLOYEE\n                            \n                        \n                        \n                            \n                                Value : BOOKER_EMPLOYEE\n                            \n                        \n                        \n                            \n                                 BOOKER_ADMIN\n                            \n                        \n                        \n                            \n                                Value : BOOKER_ADMIN\n                            \n                        \n                        \n                            \n                                 BOOKER_SUPER_ADMIN\n                            \n                        \n                        \n                            \n                                Value : BOOKER_SUPER_ADMIN\n                            \n                        \n                        \n                            \n                                 BOOKER_OWNER\n                            \n                        \n                        \n                            \n                                Value : BOOKER_OWNER\n                            \n                        \n            \n        \n\n    src/common/enums/user-status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        UserStatusEnum\n                    \n                \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                Value : ACTIVE\n                            \n                        \n                        \n                            \n                                 INACTIVE\n                            \n                        \n                        \n                            \n                                Value : INACTIVE\n                            \n                        \n                        \n                            \n                                 SUSPENDED\n                            \n                        \n                        \n                            \n                                Value : SUSPENDED\n                            \n                        \n                        \n                            \n                                 BANNED\n                            \n                        \n                        \n                            \n                                Value : BANNED\n                            \n                        \n                        \n                            \n                                 NOT_VERIFIED\n                            \n                        \n                        \n                            \n                                Value : NOT_VERIFIED\n                            \n                        \n                        \n                            \n                                 VERIFIED\n                            \n                        \n                        \n                            \n                                Value : VERIFIED\n                            \n                        \n                        \n                            \n                                 CREATE_PASSWORD\n                            \n                        \n                        \n                            \n                                Value : CREATE_PASSWORD\n                            \n                        \n                        \n                            \n                                 ARCHIVED\n                            \n                        \n                        \n                            \n                                Value : ARCHIVED\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ npm installRunning the app\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/logProps.html":{"url":"interfaces/logProps.html","title":"interface - logProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  logProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/log.helper.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            context\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ip\n                                        \n                                \n                                \n                                        \n                                            level\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            metadata\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            user\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            userInfos\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        context\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        context:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        level:         LogLevelEnum\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LogLevelEnum\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        metadata:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         UserDocument\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserDocument\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userInfos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userInfos:     ClientDocument | EmployeeDocument\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ClientDocument | EmployeeDocument\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LogLevelEnum } from \"@enums/log-level.enum\";\nimport { ClientDocument } from \"@modules/clients/entities/client.entity\";\nimport { EmployeeDocument } from \"@modules/employees/entities/employee.entity\";\nimport { LogsService } from \"@modules/logs/logs.service\";\nimport { UserDocument } from \"@modules/users/entities/user.entity\";\n\ninterface logProps {\n\tip?: string;\n\tuser?: UserDocument;\n\tuserInfos?: ClientDocument | EmployeeDocument;\n\tlevel: LogLevelEnum;\n\tmessage: string;\n\tcontext: string;\n\tmetadata?: object;\n}\n\nexport class LogHelper {\n\tconstructor(private readonly logsService: LogsService) {}\n\n\tpublic async log(logProps: logProps) {\n\t\ttry {\n\t\t\tawait this.logsService.create({\n\t\t\t\tip: logProps.ip ?? \"N/A\",\n\t\t\t\tuserId: logProps.user._id.toString() ?? \"N/A\",\n\t\t\t\tfirstName: logProps.userInfos.firstName ?? \"N/A\",\n\t\t\t\tlastName: logProps.userInfos.lastName ?? \"N/A\",\n\t\t\t\tlevel: logProps.level,\n\t\t\t\tmessage: logProps.message,\n\t\t\t\tcontext: logProps.context,\n\t\t\t\tmetadata: logProps.metadata,\n\t\t\t});\n\t\t} catch (logError) {\n\t\t\tconsole.error(\n\t\t\t\t`Failed to create log in ${logProps.context}: `,\n\t\t\t\tlogError,\n\t\t\t);\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BookerEmployeesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ClientsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EmployeesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EstablishmentsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JwtModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LogsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MongooseConfig\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrganizationsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PlanPricesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PlansModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PromoCodesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StripeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SubscriptionsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TeamsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ThrottlerConfig\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_BookerEmployeesModule\n\n\n\ncluster_BookerEmployeesModule_exports\n\n\n\ncluster_BookerEmployeesModule_providers\n\n\n\ncluster_ClientsModule\n\n\n\ncluster_ClientsModule_exports\n\n\n\ncluster_EmployeesModule\n\n\n\ncluster_EmployeesModule_providers\n\n\n\ncluster_EstablishmentsModule\n\n\n\ncluster_EstablishmentsModule_providers\n\n\n\ncluster_JwtModule\n\n\n\ncluster_JwtModule_imports\n\n\n\ncluster_JwtModule_exports\n\n\n\ncluster_LogsModule\n\n\n\ncluster_LogsModule_exports\n\n\n\ncluster_OrganizationsModule\n\n\n\ncluster_OrganizationsModule_providers\n\n\n\ncluster_PlanPricesModule\n\n\n\ncluster_PlanPricesModule_exports\n\n\n\ncluster_PlanPricesModule_providers\n\n\n\ncluster_PlansModule\n\n\n\ncluster_PlansModule_exports\n\n\n\ncluster_PlansModule_providers\n\n\n\ncluster_PromoCodesModule\n\n\n\ncluster_PromoCodesModule_providers\n\n\n\ncluster_StripeModule\n\n\n\ncluster_StripeModule_exports\n\n\n\ncluster_StripeModule_providers\n\n\n\ncluster_SubscriptionsModule\n\n\n\ncluster_SubscriptionsModule_providers\n\n\n\ncluster_TeamsModule\n\n\n\ncluster_TeamsModule_providers\n\n\n\ncluster_ThrottlerConfig\n\n\n\ncluster_ThrottlerConfig_exports\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nClientsModule\n\nClientsModule\n\nAppModule -->\n\nClientsModule->AppModule\n\n\n\n\n\nClientsModule \n\nClientsModule \n\nClientsModule  -->\n\nClientsModule->ClientsModule \n\n\n\n\n\nLogsModule\n\nLogsModule\n\nAppModule -->\n\nLogsModule->AppModule\n\n\n\n\n\nLogsModule \n\nLogsModule \n\nLogsModule  -->\n\nLogsModule->LogsModule \n\n\n\n\n\nLogsService \n\nLogsService \n\nLogsService  -->\n\nLogsModule->LogsService \n\n\n\n\n\nMailModule\n\nMailModule\n\nAuthModule -->\n\nMailModule->AuthModule\n\n\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nMongooseConfig\n\nMongooseConfig\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nMongooseConfig->UsersModule\n\n\n\nAppModule -->\n\nMongooseConfig->AppModule\n\n\n\n\n\nStripeModule\n\nStripeModule\n\nAppModule -->\n\nStripeModule->AppModule\n\n\n\n\n\nSTRIPE_CLIENT \n\nSTRIPE_CLIENT \n\nSTRIPE_CLIENT  -->\n\nStripeModule->STRIPE_CLIENT \n\n\n\n\n\nThrottlerConfig\n\nThrottlerConfig\n\nAppModule -->\n\nThrottlerConfig->AppModule\n\n\n\n\n\nThrottlerConfig \n\nThrottlerConfig \n\nThrottlerConfig  -->\n\nThrottlerConfig->ThrottlerConfig \n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersModule \n\nUsersModule \n\nUsersModule  -->\n\nUsersModule->UsersModule \n\n\n\n\n\nAppModule \n\nAppModule \n\nAppModule  -->\n\nAppModule->AppModule \n\n\n\n\n\nClientsService\n\nClientsService\n\nAuthModule -->\n\nClientsService->AuthModule\n\n\n\nClientsModule -->\n\nClientsService->ClientsModule\n\n\n\n\n\nLogsService\n\nLogsService\n\nAuthModule -->\n\nLogsService->AuthModule\n\n\n\nLogsModule -->\n\nLogsService->LogsModule\n\n\n\n\n\nMailHelper\n\nMailHelper\n\nAuthModule -->\n\nMailHelper->AuthModule\n\n\n\nMailModule -->\n\nMailHelper->MailModule\n\n\n\n\n\nMailService\n\nMailService\n\nAuthModule -->\n\nMailService->AuthModule\n\n\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nAuthModule -->\n\nUsersService->AuthModule\n\n\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\nBookerEmployeesModule \n\nBookerEmployeesModule \n\n\n\nBookerEmployeesModule\n\nBookerEmployeesModule\n\nBookerEmployeesModule  -->\n\nBookerEmployeesModule->BookerEmployeesModule \n\n\n\n\n\nBookerEmployeesService\n\nBookerEmployeesService\n\nBookerEmployeesModule -->\n\nBookerEmployeesService->BookerEmployeesModule\n\n\n\n\n\nEmployeesService\n\nEmployeesService\n\n\n\nEmployeesModule\n\nEmployeesModule\n\nEmployeesModule -->\n\nEmployeesService->EmployeesModule\n\n\n\n\n\nEstablishmentsService\n\nEstablishmentsService\n\n\n\nEstablishmentsModule\n\nEstablishmentsModule\n\nEstablishmentsModule -->\n\nEstablishmentsService->EstablishmentsModule\n\n\n\n\n\nJwt\n\nJwt\n\n\n\nJwtModule\n\nJwtModule\n\nJwtModule -->\n\nJwt->JwtModule\n\n\n\n\n\nJwtModule \n\nJwtModule \n\nJwtModule  -->\n\nJwtModule->JwtModule \n\n\n\n\n\nOrganizationsService\n\nOrganizationsService\n\n\n\nOrganizationsModule\n\nOrganizationsModule\n\nOrganizationsModule -->\n\nOrganizationsService->OrganizationsModule\n\n\n\n\n\nPlanPricesModule \n\nPlanPricesModule \n\n\n\nPlanPricesModule\n\nPlanPricesModule\n\nPlanPricesModule  -->\n\nPlanPricesModule->PlanPricesModule \n\n\n\n\n\nPlanPricesService\n\nPlanPricesService\n\nPlanPricesModule -->\n\nPlanPricesService->PlanPricesModule\n\n\n\n\n\nPlansModule \n\nPlansModule \n\n\n\nPlansModule\n\nPlansModule\n\nPlansModule  -->\n\nPlansModule->PlansModule \n\n\n\n\n\nPlansService\n\nPlansService\n\nPlansModule -->\n\nPlansService->PlansModule\n\n\n\n\n\nPromoCodesService\n\nPromoCodesService\n\n\n\nPromoCodesModule\n\nPromoCodesModule\n\nPromoCodesModule -->\n\nPromoCodesService->PromoCodesModule\n\n\n\n\n\nStripePriceService\n\nStripePriceService\n\nStripeModule -->\n\nStripePriceService->StripeModule\n\n\n\n\n\nSubscriptionsService\n\nSubscriptionsService\n\n\n\nSubscriptionsModule\n\nSubscriptionsModule\n\nSubscriptionsModule -->\n\nSubscriptionsService->SubscriptionsModule\n\n\n\n\n\nTeamsService\n\nTeamsService\n\n\n\nTeamsModule\n\nTeamsModule\n\nTeamsModule -->\n\nTeamsService->TeamsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        19 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    13 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    25 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    57 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    8 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BookerEmployeeDocument   (src/.../booker-employee.entity.ts)\n                        \n                        \n                            ClientDocument   (src/.../client.entity.ts)\n                        \n                        \n                            EmployeeDocument   (src/.../employee.entity.ts)\n                        \n                        \n                            EstablishmentDocument   (src/.../establishment.entity.ts)\n                        \n                        \n                            IntervalType   (src/.../interval.type.ts)\n                        \n                        \n                            LogDocument   (src/.../log.entity.ts)\n                        \n                        \n                            OrganizationDocument   (src/.../organization.entity.ts)\n                        \n                        \n                            PlanDocument   (src/.../plan.entity.ts)\n                        \n                        \n                            PlanPriceDocument   (src/.../plan-price.entity.ts)\n                        \n                        \n                            PromoCodeDocument   (src/.../promo-code.entity.ts)\n                        \n                        \n                            SubscriptionDocument   (src/.../subscription.entity.ts)\n                        \n                        \n                            TeamDocument   (src/.../team.entity.ts)\n                        \n                        \n                            UserDocument   (src/.../user.entity.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/booker-employees/entities/booker-employee.entity.ts\n    \n    \n        \n            \n                \n                    \n                    BookerEmployeeDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/modules/clients/entities/client.entity.ts\n    \n    \n        \n            \n                \n                    \n                    ClientDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/modules/employees/entities/employee.entity.ts\n    \n    \n        \n            \n                \n                    \n                    EmployeeDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/modules/establishments/entities/establishment.entity.ts\n    \n    \n        \n            \n                \n                    \n                    EstablishmentDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/common/types/interval.type.ts\n    \n    \n        \n            \n                \n                    \n                    IntervalType\n                \n            \n            \n                \n                        Stripe.Price.Recurring.Interval\n\n                \n            \n        \n    \n    src/modules/logs/entities/log.entity.ts\n    \n    \n        \n            \n                \n                    \n                    LogDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/modules/organizations/entities/organization.entity.ts\n    \n    \n        \n            \n                \n                    \n                    OrganizationDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/modules/plans/entities/plan.entity.ts\n    \n    \n        \n            \n                \n                    \n                    PlanDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/modules/plan-prices/entities/plan-price.entity.ts\n    \n    \n        \n            \n                \n                    \n                    PlanPriceDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/modules/promo-codes/entities/promo-code.entity.ts\n    \n    \n        \n            \n                \n                    \n                    PromoCodeDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/modules/subscriptions/entities/subscription.entity.ts\n    \n    \n        \n            \n                \n                    \n                    SubscriptionDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/modules/teams/entities/team.entity.ts\n    \n    \n        \n            \n                \n                    \n                    TeamDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/modules/users/entities/user.entity.ts\n    \n    \n        \n            \n                \n                    \n                    UserDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BookerEmployeeSchema   (src/.../booker-employee.entity.ts)\n                        \n                        \n                            ClientSchema   (src/.../client.entity.ts)\n                        \n                        \n                            CONFIG   (src/.../config.ts)\n                        \n                        \n                            EmployeeSchema   (src/.../employee.entity.ts)\n                        \n                        \n                            EstablishmentSchema   (src/.../establishment.entity.ts)\n                        \n                        \n                            IS_PUBLIC_KEY   (src/.../public.decorator.ts)\n                        \n                        \n                            LogSchema   (src/.../log.entity.ts)\n                        \n                        \n                            OrganizationSchema   (src/.../organization.entity.ts)\n                        \n                        \n                            Ownership   (src/.../ownership.decorator.ts)\n                        \n                        \n                            OWNERSHIP_KEY   (src/.../ownership.decorator.ts)\n                        \n                        \n                            PlanPriceSchema   (src/.../plan-price.entity.ts)\n                        \n                        \n                            PlanSchema   (src/.../plan.entity.ts)\n                        \n                        \n                            PromoCodeSchema   (src/.../promo-code.entity.ts)\n                        \n                        \n                            Public   (src/.../public.decorator.ts)\n                        \n                        \n                            regex   (src/.../regex.ts)\n                        \n                        \n                            Roles   (src/.../roles.decorator.ts)\n                        \n                        \n                            ROLES_KEY   (src/.../roles.decorator.ts)\n                        \n                        \n                            settings   (src/.../settings.ts)\n                        \n                        \n                            SubscriptionSchema   (src/.../subscription.entity.ts)\n                        \n                        \n                            TeamSchema   (src/.../team.entity.ts)\n                        \n                        \n                            UserSchema   (src/.../user.entity.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/booker-employees/entities/booker-employee.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BookerEmployeeSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(BookerEmployee)\n                    \n                \n\n\n        \n    \n\n    src/modules/clients/entities/client.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ClientSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Client)\n                    \n                \n\n\n        \n    \n\n    src/config/config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\temail: {\n\t\tsendEmail: true,\n\t},\n}\n                    \n                \n\n\n        \n    \n\n    src/modules/employees/entities/employee.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EmployeeSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Employee)\n                    \n                \n\n\n        \n    \n\n    src/modules/establishments/entities/establishment.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EstablishmentSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Establishment)\n                    \n                \n\n\n        \n    \n\n    src/common/decorators/public.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"isPublic\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n\n        \n    \n\n    src/modules/logs/entities/log.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LogSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Log)\n                    \n                \n\n\n        \n    \n\n    src/modules/organizations/entities/organization.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        OrganizationSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Organization)\n                    \n                \n\n\n        \n    \n\n    src/common/decorators/ownership.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Ownership\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(OWNERSHIP_KEY, true)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OWNERSHIP_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"ownership\"\n                    \n                \n\n\n        \n    \n\n    src/modules/plan-prices/entities/plan-price.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PlanPriceSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(PlanPrice)\n                    \n                \n\n\n        \n    \n\n    src/modules/plans/entities/plan.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PlanSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Plan)\n                    \n                \n\n\n        \n    \n\n    src/modules/promo-codes/entities/promo-code.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PromoCodeSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(PromoCode)\n                    \n                \n\n\n        \n    \n\n    src/common/constants/regex.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        regex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\tpassword: new RegExp(\n\t\t\"^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])))(?=.{6,})\",\n\t),\n\tphone: new RegExp(\"/^(+?d{1,3}[-.s]?|0)?d{9,12}$/\"),\n\temail: new RegExp(\"/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+.[a-zA-Z]{2,}$/\"),\n}\n                    \n                \n\n\n        \n    \n\n    src/common/decorators/roles.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...roles: UserRoleEnum[]) =>\n\tSetMetadata(ROLES_KEY, roles)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROLES_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"roles\"\n                    \n                \n\n\n        \n    \n\n    src/common/constants/settings.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        settings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\t...process.env,\n}\n                    \n                \n\n\n        \n    \n\n    src/modules/subscriptions/entities/subscription.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SubscriptionSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Subscription)\n                    \n                \n\n\n        \n    \n\n    src/modules/teams/entities/team.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TeamSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Team)\n                    \n                \n\n\n        \n    \n\n    src/modules/users/entities/user.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(User)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
